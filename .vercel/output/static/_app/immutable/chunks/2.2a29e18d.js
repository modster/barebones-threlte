var PA=Object.defineProperty;var CA=(r,e,t)=>e in r?PA(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var yn=(r,e,t)=>(CA(r,typeof e!="symbol"?e+"":e,t),t);import{n as wt,l as RA,m as Yl,p as Xc,q as IA,r as ni,s as yi,c as xi,u as bi,d as Si,e as Mi,k as Co,v as Vn,w as In,o as $l,x as vg,h as Xf,i as yg,g as av,t as LA,y as DA,b as OA}from"./scheduler.5ead0948.js";import{p as Aa,t as at,b as Pa,d as nt,S as Ti,i as wi,r as Jt,u as sn,v as Kt,w as Qt,s as vs,e as Bi,c as ys,a as Hn,f as En,g as ov,h as cv,j as lv,k as UA,q as xg}from"./index.096152c6.js";import{w as ii,d as uv,r as NA}from"./index.cae1bb1e.js";import{_ as FA}from"./preload-helper.a4192956.js";function BA(r,e){for(var t=0;t<e.length;t++){const n=e[t];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in r)){const s=Object.getOwnPropertyDescriptor(n,i);s&&Object.defineProperty(r,i,s.get?s:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}))}const hv=typeof window<"u";let bg=hv?()=>window.performance.now():()=>Date.now(),fv=hv?r=>requestAnimationFrame(r):wt;const Ta=new Set;function dv(r){Ta.forEach(e=>{e.c(r)||(Ta.delete(e),e.f())}),Ta.size!==0&&fv(dv)}function zA(r){let e;return Ta.size===0&&fv(dv),{promise:new Promise(t=>{Ta.add(e={c:r,f:t})}),abort(){Ta.delete(e)}}}function pv(r,e){const t=e.token={};function n(i,s,a,o){if(e.token!==t)return;e.resolved=o;let l=e.ctx;a!==void 0&&(l=l.slice(),l[a]=o);const u=i&&(e.current=i)(l);let f=!1;e.block&&(e.blocks?e.blocks.forEach((p,d)=>{d!==s&&p&&(Aa(),at(p,1,1,()=>{e.blocks[d]===p&&(e.blocks[d]=null)}),Pa())}):e.block.d(1),u.c(),nt(u,1),u.m(e.mount(),e.anchor),f=!0),e.block=u,e.blocks&&(e.blocks[s]=u),f&&IA()}if(RA(r)){const i=Yl();if(r.then(s=>{Xc(i),n(e.then,1,e.value,s),Xc(null)},s=>{if(Xc(i),n(e.catch,2,e.error,s),Xc(null),!e.hasCatch)throw s}),e.current!==e.pending)return n(e.pending,0),!0}else{if(e.current!==e.then)return n(e.then,1,e.value,r),!0;e.resolved=r}}function mv(r,e,t){const n=e.slice(),{resolved:i}=r;r.current===r.then&&(n[r.value]=i),r.current===r.catch&&(n[r.error]=i),r.block.p(n,t)}function kA(r,e){const t={},n={},i={$$scope:1};let s=r.length;for(;s--;){const a=r[s],o=e[s];if(o){for(const l in a)l in o||(n[l]=1);for(const l in o)i[l]||(t[l]=o[l],i[l]=1);r[s]=o}else for(const l in a)i[l]=1}for(const a in n)a in t||(t[a]=void 0);return t}function HA(r){return typeof r=="object"&&r!==null?r:{}}const zU=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const $o="156",VA={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},GA={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},gv=0,jf=1,_v=2,WA=3,XA=0,Od=1,Zl=2,Li=3,ur=0,Ln=1,Oi=2,jA=2,ar=0,Ts=1,qf=2,Yf=3,$f=4,vv=5,gs=100,yv=101,xv=102,Zf=103,Jf=104,bv=200,Sv=201,Mv=202,Tv=203,Ud=204,Nd=205,wv=206,Ev=207,Av=208,Pv=209,Cv=210,Rv=0,Iv=1,Lv=2,Gl=3,Dv=4,Ov=5,Uv=6,Nv=7,Zo=0,Fv=1,Bv=2,or=0,zv=1,kv=2,Hv=3,Fd=4,Vv=5,Jl=300,hr=301,Ir=302,Ro=303,Io=304,Da=306,Lo=1e3,wn=1001,Do=1002,$t=1003,Wl=1004,qA=1004,Mo=1005,YA=1005,Zt=1006,Bd=1007,$A=1007,Lr=1008,ZA=1008,cr=1009,Gv=1010,Wv=1011,Kl=1012,zd=1013,sr=1014,Ui=1015,Ca=1016,kd=1017,Hd=1018,Pr=1020,Xv=1021,ei=1023,jv=1024,qv=1025,Cr=1026,As=1027,Yv=1028,Vd=1029,$v=1030,Gd=1031,Wd=1033,Ol=33776,Ul=33777,Nl=33778,Fl=33779,Kf=35840,Qf=35841,ed=35842,td=35843,Zv=36196,nd=37492,id=37496,rd=37808,sd=37809,ad=37810,od=37811,cd=37812,ld=37813,ud=37814,hd=37815,fd=37816,dd=37817,pd=37818,md=37819,gd=37820,_d=37821,Bl=36492,vd=36494,yd=36495,Jv=36283,xd=36284,bd=36285,Sd=36286,Kv=2200,Qv=2201,e0=2202,Oo=2300,Uo=2301,zl=2302,xs=2400,bs=2401,No=2402,Ql=2500,Xd=2501,JA=0,KA=1,QA=2,Fo=3e3,lr=3001,t0=3200,n0=3201,Or=0,i0=1,Rr="",Bt="srgb",_i="srgb-linear",Jo="display-p3",e1="display-p3-linear",t1=0,kl=7680,n1=7681,i1=7682,r1=7683,s1=34055,a1=34056,o1=5386,c1=512,l1=513,u1=514,h1=515,f1=516,d1=517,p1=518,r0=519,s0=512,a0=513,o0=514,c0=515,l0=516,u0=517,h0=518,f0=519,Bo=35044,m1=35048,g1=35040,_1=35045,v1=35049,y1=35041,x1=35046,b1=35050,S1=35042,M1="100",Md="300 es",Xl=1035,Ni=2e3,zo=2001;class dr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}const Mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Sg=1234567;const ws=Math.PI/180,Ra=180/Math.PI;function ti(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Mn[r&255]+Mn[r>>8&255]+Mn[r>>16&255]+Mn[r>>24&255]+"-"+Mn[e&255]+Mn[e>>8&255]+"-"+Mn[e>>16&15|64]+Mn[e>>24&255]+"-"+Mn[t&63|128]+Mn[t>>8&255]+"-"+Mn[t>>16&255]+Mn[t>>24&255]+Mn[n&255]+Mn[n>>8&255]+Mn[n>>16&255]+Mn[n>>24&255]).toLowerCase()}function Xt(r,e,t){return Math.max(e,Math.min(t,r))}function jd(r,e){return(r%e+e)%e}function T1(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function w1(r,e,t){return r!==e?(t-r)/(e-r):0}function To(r,e,t){return(1-t)*r+t*e}function E1(r,e,t,n){return To(r,e,1-Math.exp(-t*n))}function A1(r,e=1){return e-Math.abs(jd(r,e*2)-e)}function P1(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function C1(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function R1(r,e){return r+Math.floor(Math.random()*(e-r+1))}function I1(r,e){return r+Math.random()*(e-r)}function L1(r){return r*(.5-Math.random())}function D1(r){r!==void 0&&(Sg=r);let e=Sg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function O1(r){return r*ws}function U1(r){return r*Ra}function Td(r){return(r&r-1)===0&&r!==0}function d0(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function jl(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function N1(r,e,t,n,i){const s=Math.cos,a=Math.sin,o=s(t/2),l=a(t/2),u=s((e+n)/2),f=a((e+n)/2),p=s((e-n)/2),d=a((e-n)/2),g=s((n-e)/2),v=a((n-e)/2);switch(i){case"XYX":r.set(o*f,l*p,l*d,o*u);break;case"YZY":r.set(l*d,o*f,l*p,o*u);break;case"ZXZ":r.set(l*p,l*d,o*f,o*u);break;case"XZX":r.set(o*f,l*v,l*g,o*u);break;case"YXY":r.set(l*g,o*f,l*v,o*u);break;case"ZYZ":r.set(l*v,l*g,o*f,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function kn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ut(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const F1={DEG2RAD:ws,RAD2DEG:Ra,generateUUID:ti,clamp:Xt,euclideanModulo:jd,mapLinear:T1,inverseLerp:w1,lerp:To,damp:E1,pingpong:A1,smoothstep:P1,smootherstep:C1,randInt:R1,randFloat:I1,randFloatSpread:L1,seededRandom:D1,degToRad:O1,radToDeg:U1,isPowerOfTwo:Td,ceilPowerOfTwo:d0,floorPowerOfTwo:jl,setQuaternionFromProperEuler:N1,normalize:ut,denormalize:kn};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ft{constructor(e,t,n,i,s,a,o,l,u){ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,o,l,u)}set(e,t,n,i,s,a,o,l,u){const f=this.elements;return f[0]=e,f[1]=i,f[2]=o,f[3]=t,f[4]=s,f[5]=l,f[6]=n,f[7]=a,f[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[3],l=n[6],u=n[1],f=n[4],p=n[7],d=n[2],g=n[5],v=n[8],b=i[0],y=i[3],_=i[6],T=i[1],S=i[4],M=i[7],R=i[2],O=i[5],U=i[8];return s[0]=a*b+o*T+l*R,s[3]=a*y+o*S+l*O,s[6]=a*_+o*M+l*U,s[1]=u*b+f*T+p*R,s[4]=u*y+f*S+p*O,s[7]=u*_+f*M+p*U,s[2]=d*b+g*T+v*R,s[5]=d*y+g*S+v*O,s[8]=d*_+g*M+v*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],u=e[7],f=e[8];return t*a*f-t*o*u-n*s*f+n*o*l+i*s*u-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],u=e[7],f=e[8],p=f*a-o*u,d=o*l-f*s,g=u*s-a*l,v=t*p+n*d+i*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/v;return e[0]=p*b,e[1]=(i*u-f*n)*b,e[2]=(o*n-i*a)*b,e[3]=d*b,e[4]=(f*t-i*l)*b,e[5]=(i*s-o*t)*b,e[6]=g*b,e[7]=(n*l-u*t)*b,e[8]=(a*t-n*s)*b,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,o){const l=Math.cos(s),u=Math.sin(s);return this.set(n*l,n*u,-n*(l*a+u*o)+a+e,-i*u,i*l,-i*(-u*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(uf.makeScale(e,t)),this}rotate(e){return this.premultiply(uf.makeRotation(-e)),this}translate(e,t){return this.premultiply(uf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const uf=new ft;function p0(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const B1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function xa(r,e){return new B1[r](e)}function ko(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function m0(){const r=ko("canvas");return r.style.display="block",r}const Mg={};function wo(r){r in Mg||(Mg[r]=!0,console.warn(r))}function wa(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function hf(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const z1=new ft().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),k1=new ft().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function H1(r){return r.convertSRGBToLinear().applyMatrix3(k1)}function V1(r){return r.applyMatrix3(z1).convertLinearToSRGB()}const G1={[_i]:r=>r,[Bt]:r=>r.convertSRGBToLinear(),[Jo]:H1},W1={[_i]:r=>r,[Bt]:r=>r.convertLinearToSRGB(),[Jo]:V1},Qn={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return _i},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=G1[e],i=W1[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}};let Ks;class qd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ks===void 0&&(Ks=ko("canvas")),Ks.width=e.width,Ks.height=e.height;const n=Ks.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ks}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ko("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=wa(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(wa(t[n]/255)*255):t[n]=wa(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let X1=0;class Ss{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:X1++}),this.uuid=ti(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?s.push(ff(i[a].image)):s.push(ff(i[a]))}else s=ff(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function ff(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?qd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let j1=0;class en extends dr{constructor(e=en.DEFAULT_IMAGE,t=en.DEFAULT_MAPPING,n=wn,i=wn,s=Zt,a=Lr,o=ei,l=cr,u=en.DEFAULT_ANISOTROPY,f=Rr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:j1++}),this.uuid=ti(),this.name="",this.source=new Ss(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=u,this.format=o,this.internalFormat=null,this.type=l,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(wo("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===lr?Bt:Rr),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jl)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Lo:e.x=e.x-Math.floor(e.x);break;case wn:e.x=e.x<0?0:1;break;case Do:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Lo:e.y=e.y-Math.floor(e.y);break;case wn:e.y=e.y<0?0:1;break;case Do:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return wo("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Bt?lr:Fo}set encoding(e){wo("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===lr?Bt:Rr}}en.DEFAULT_IMAGE=null;en.DEFAULT_MAPPING=Jl;en.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,n=0,i=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,u=l[0],f=l[4],p=l[8],d=l[1],g=l[5],v=l[9],b=l[2],y=l[6],_=l[10];if(Math.abs(f-d)<.01&&Math.abs(p-b)<.01&&Math.abs(v-y)<.01){if(Math.abs(f+d)<.1&&Math.abs(p+b)<.1&&Math.abs(v+y)<.1&&Math.abs(u+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(u+1)/2,M=(g+1)/2,R=(_+1)/2,O=(f+d)/4,U=(p+b)/4,B=(v+y)/4;return S>M&&S>R?S<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(S),i=O/n,s=U/n):M>R?M<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(M),n=O/i,s=B/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=U/s,i=B/s),this.set(n,i,s,t),this}let T=Math.sqrt((y-v)*(y-v)+(p-b)*(p-b)+(d-f)*(d-f));return Math.abs(T)<.001&&(T=1),this.x=(y-v)/T,this.y=(p-b)/T,this.z=(d-f)/T,this.w=Math.acos((u+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class g0 extends dr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(wo("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===lr?Bt:Rr),this.texture=new en(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Zt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ss(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class vi extends g0{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class eu extends en{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class q1 extends vi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new eu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Yd extends en{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Y1 extends vi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Yd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class $1 extends vi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Gn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,o){let l=n[i+0],u=n[i+1],f=n[i+2],p=n[i+3];const d=s[a+0],g=s[a+1],v=s[a+2],b=s[a+3];if(o===0){e[t+0]=l,e[t+1]=u,e[t+2]=f,e[t+3]=p;return}if(o===1){e[t+0]=d,e[t+1]=g,e[t+2]=v,e[t+3]=b;return}if(p!==b||l!==d||u!==g||f!==v){let y=1-o;const _=l*d+u*g+f*v+p*b,T=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const R=Math.sqrt(S),O=Math.atan2(R,_*T);y=Math.sin(y*O)/R,o=Math.sin(o*O)/R}const M=o*T;if(l=l*y+d*M,u=u*y+g*M,f=f*y+v*M,p=p*y+b*M,y===1-o){const R=1/Math.sqrt(l*l+u*u+f*f+p*p);l*=R,u*=R,f*=R,p*=R}}e[t]=l,e[t+1]=u,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,a){const o=n[i],l=n[i+1],u=n[i+2],f=n[i+3],p=s[a],d=s[a+1],g=s[a+2],v=s[a+3];return e[t]=o*v+f*p+l*g-u*d,e[t+1]=l*v+f*d+u*p-o*g,e[t+2]=u*v+f*g+o*d-l*p,e[t+3]=f*v-o*p-l*d-u*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,u=o(n/2),f=o(i/2),p=o(s/2),d=l(n/2),g=l(i/2),v=l(s/2);switch(a){case"XYZ":this._x=d*f*p+u*g*v,this._y=u*g*p-d*f*v,this._z=u*f*v+d*g*p,this._w=u*f*p-d*g*v;break;case"YXZ":this._x=d*f*p+u*g*v,this._y=u*g*p-d*f*v,this._z=u*f*v-d*g*p,this._w=u*f*p+d*g*v;break;case"ZXY":this._x=d*f*p-u*g*v,this._y=u*g*p+d*f*v,this._z=u*f*v+d*g*p,this._w=u*f*p-d*g*v;break;case"ZYX":this._x=d*f*p-u*g*v,this._y=u*g*p+d*f*v,this._z=u*f*v-d*g*p,this._w=u*f*p+d*g*v;break;case"YZX":this._x=d*f*p+u*g*v,this._y=u*g*p+d*f*v,this._z=u*f*v-d*g*p,this._w=u*f*p-d*g*v;break;case"XZY":this._x=d*f*p-u*g*v,this._y=u*g*p-d*f*v,this._z=u*f*v+d*g*p,this._w=u*f*p+d*g*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],o=t[5],l=t[9],u=t[2],f=t[6],p=t[10],d=n+o+p;if(d>0){const g=.5/Math.sqrt(d+1);this._w=.25/g,this._x=(f-l)*g,this._y=(s-u)*g,this._z=(a-i)*g}else if(n>o&&n>p){const g=2*Math.sqrt(1+n-o-p);this._w=(f-l)/g,this._x=.25*g,this._y=(i+a)/g,this._z=(s+u)/g}else if(o>p){const g=2*Math.sqrt(1+o-n-p);this._w=(s-u)/g,this._x=(i+a)/g,this._y=.25*g,this._z=(l+f)/g}else{const g=2*Math.sqrt(1+p-n-o);this._w=(a-i)/g,this._x=(s+u)/g,this._y=(l+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Xt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,o=t._x,l=t._y,u=t._z,f=t._w;return this._x=n*f+a*o+i*u-s*l,this._y=i*f+a*l+s*o-n*u,this._z=s*f+a*u+n*l-i*o,this._w=a*f-n*o-i*l-s*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),f=Math.atan2(u,o),p=Math.sin((1-t)*f)/u,d=Math.sin(t*f)/u;return this._w=a*p+this._w*d,this._x=n*p+this._x*d,this._y=i*p+this._y*d,this._z=s*p+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Tg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Tg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,o=e.z,l=e.w,u=l*t+a*i-o*n,f=l*n+o*t-s*i,p=l*i+s*n-a*t,d=-s*t-a*n-o*i;return this.x=u*l+d*-s+f*-o-p*-a,this.y=f*l+d*-a+p*-s-u*-o,this.z=p*l+d*-o+u*-a-f*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-s*o,this.y=s*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return df.copy(this).projectOnVector(e),this.sub(df)}reflect(e){return this.sub(df.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const df=new N,Tg=new Gn;class ki{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ji.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ji.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ji.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Qs.copy(e.boundingBox),Qs.applyMatrix4(e.matrixWorld),this.union(Qs);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let a=0,o=s.count;a<o;a++)Ji.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ji)}else i.boundingBox===null&&i.computeBoundingBox(),Qs.copy(i.boundingBox),Qs.applyMatrix4(e.matrixWorld),this.union(Qs)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ji),Ji.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(uo),jc.subVectors(this.max,uo),ea.subVectors(e.a,uo),ta.subVectors(e.b,uo),na.subVectors(e.c,uo),Sr.subVectors(ta,ea),Mr.subVectors(na,ta),as.subVectors(ea,na);let t=[0,-Sr.z,Sr.y,0,-Mr.z,Mr.y,0,-as.z,as.y,Sr.z,0,-Sr.x,Mr.z,0,-Mr.x,as.z,0,-as.x,-Sr.y,Sr.x,0,-Mr.y,Mr.x,0,-as.y,as.x,0];return!pf(t,ea,ta,na,jc)||(t=[1,0,0,0,1,0,0,0,1],!pf(t,ea,ta,na,jc))?!1:(qc.crossVectors(Sr,Mr),t=[qc.x,qc.y,qc.z],pf(t,ea,ta,na,jc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ji).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ji).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zi=[new N,new N,new N,new N,new N,new N,new N,new N],Ji=new N,Qs=new ki,ea=new N,ta=new N,na=new N,Sr=new N,Mr=new N,as=new N,uo=new N,jc=new N,qc=new N,os=new N;function pf(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){os.fromArray(r,s);const o=i.x*Math.abs(os.x)+i.y*Math.abs(os.y)+i.z*Math.abs(os.z),l=e.dot(os),u=t.dot(os),f=n.dot(os);if(Math.max(-Math.max(l,u,f),Math.min(l,u,f))>o)return!1}return!0}const Z1=new ki,ho=new N,mf=new N;class Ei{constructor(e=new N,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Z1.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ho.subVectors(e,this.center);const t=ho.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ho,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(mf.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ho.copy(e.center).add(mf)),this.expandByPoint(ho.copy(e.center).sub(mf))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ki=new N,gf=new N,Yc=new N,Tr=new N,_f=new N,$c=new N,vf=new N;class Oa{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ki)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ki.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ki.copy(this.origin).addScaledVector(this.direction,t),Ki.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){gf.copy(e).add(t).multiplyScalar(.5),Yc.copy(t).sub(e).normalize(),Tr.copy(this.origin).sub(gf);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Yc),o=Tr.dot(this.direction),l=-Tr.dot(Yc),u=Tr.lengthSq(),f=Math.abs(1-a*a);let p,d,g,v;if(f>0)if(p=a*l-o,d=a*o-l,v=s*f,p>=0)if(d>=-v)if(d<=v){const b=1/f;p*=b,d*=b,g=p*(p+a*d+2*o)+d*(a*p+d+2*l)+u}else d=s,p=Math.max(0,-(a*d+o)),g=-p*p+d*(d+2*l)+u;else d=-s,p=Math.max(0,-(a*d+o)),g=-p*p+d*(d+2*l)+u;else d<=-v?(p=Math.max(0,-(-a*s+o)),d=p>0?-s:Math.min(Math.max(-s,-l),s),g=-p*p+d*(d+2*l)+u):d<=v?(p=0,d=Math.min(Math.max(-s,-l),s),g=d*(d+2*l)+u):(p=Math.max(0,-(a*s+o)),d=p>0?s:Math.min(Math.max(-s,-l),s),g=-p*p+d*(d+2*l)+u);else d=a>0?-s:s,p=Math.max(0,-(a*d+o)),g=-p*p+d*(d+2*l)+u;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(gf).addScaledVector(Yc,d),g}intersectSphere(e,t){Ki.subVectors(e.center,this.origin);const n=Ki.dot(this.direction),i=Ki.dot(Ki)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,o,l;const u=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,d=this.origin;return u>=0?(n=(e.min.x-d.x)*u,i=(e.max.x-d.x)*u):(n=(e.max.x-d.x)*u,i=(e.min.x-d.x)*u),f>=0?(s=(e.min.y-d.y)*f,a=(e.max.y-d.y)*f):(s=(e.max.y-d.y)*f,a=(e.min.y-d.y)*f),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),p>=0?(o=(e.min.z-d.z)*p,l=(e.max.z-d.z)*p):(o=(e.max.z-d.z)*p,l=(e.min.z-d.z)*p),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ki)!==null}intersectTriangle(e,t,n,i,s){_f.subVectors(t,e),$c.subVectors(n,e),vf.crossVectors(_f,$c);let a=this.direction.dot(vf),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Tr.subVectors(this.origin,e);const l=o*this.direction.dot($c.crossVectors(Tr,$c));if(l<0)return null;const u=o*this.direction.dot(_f.cross(Tr));if(u<0||l+u>a)return null;const f=-o*Tr.dot(vf);return f<0?null:this.at(f/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class it{constructor(e,t,n,i,s,a,o,l,u,f,p,d,g,v,b,y){it.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,o,l,u,f,p,d,g,v,b,y)}set(e,t,n,i,s,a,o,l,u,f,p,d,g,v,b,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=a,_[9]=o,_[13]=l,_[2]=u,_[6]=f,_[10]=p,_[14]=d,_[3]=g,_[7]=v,_[11]=b,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new it().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ia.setFromMatrixColumn(e,0).length(),s=1/ia.setFromMatrixColumn(e,1).length(),a=1/ia.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),u=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const d=a*f,g=a*p,v=o*f,b=o*p;t[0]=l*f,t[4]=-l*p,t[8]=u,t[1]=g+v*u,t[5]=d-b*u,t[9]=-o*l,t[2]=b-d*u,t[6]=v+g*u,t[10]=a*l}else if(e.order==="YXZ"){const d=l*f,g=l*p,v=u*f,b=u*p;t[0]=d+b*o,t[4]=v*o-g,t[8]=a*u,t[1]=a*p,t[5]=a*f,t[9]=-o,t[2]=g*o-v,t[6]=b+d*o,t[10]=a*l}else if(e.order==="ZXY"){const d=l*f,g=l*p,v=u*f,b=u*p;t[0]=d-b*o,t[4]=-a*p,t[8]=v+g*o,t[1]=g+v*o,t[5]=a*f,t[9]=b-d*o,t[2]=-a*u,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const d=a*f,g=a*p,v=o*f,b=o*p;t[0]=l*f,t[4]=v*u-g,t[8]=d*u+b,t[1]=l*p,t[5]=b*u+d,t[9]=g*u-v,t[2]=-u,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const d=a*l,g=a*u,v=o*l,b=o*u;t[0]=l*f,t[4]=b-d*p,t[8]=v*p+g,t[1]=p,t[5]=a*f,t[9]=-o*f,t[2]=-u*f,t[6]=g*p+v,t[10]=d-b*p}else if(e.order==="XZY"){const d=a*l,g=a*u,v=o*l,b=o*u;t[0]=l*f,t[4]=-p,t[8]=u*f,t[1]=d*p+b,t[5]=a*f,t[9]=g*p-v,t[2]=v*p-g,t[6]=o*f,t[10]=b*p+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(J1,e,K1)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),wr.crossVectors(n,Jn),wr.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),wr.crossVectors(n,Jn)),wr.normalize(),Zc.crossVectors(Jn,wr),i[0]=wr.x,i[4]=Zc.x,i[8]=Jn.x,i[1]=wr.y,i[5]=Zc.y,i[9]=Jn.y,i[2]=wr.z,i[6]=Zc.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[4],l=n[8],u=n[12],f=n[1],p=n[5],d=n[9],g=n[13],v=n[2],b=n[6],y=n[10],_=n[14],T=n[3],S=n[7],M=n[11],R=n[15],O=i[0],U=i[4],B=i[8],A=i[12],L=i[1],Q=i[5],he=i[9],$=i[13],Z=i[2],W=i[6],ie=i[10],ae=i[14],ce=i[3],de=i[7],ue=i[11],q=i[15];return s[0]=a*O+o*L+l*Z+u*ce,s[4]=a*U+o*Q+l*W+u*de,s[8]=a*B+o*he+l*ie+u*ue,s[12]=a*A+o*$+l*ae+u*q,s[1]=f*O+p*L+d*Z+g*ce,s[5]=f*U+p*Q+d*W+g*de,s[9]=f*B+p*he+d*ie+g*ue,s[13]=f*A+p*$+d*ae+g*q,s[2]=v*O+b*L+y*Z+_*ce,s[6]=v*U+b*Q+y*W+_*de,s[10]=v*B+b*he+y*ie+_*ue,s[14]=v*A+b*$+y*ae+_*q,s[3]=T*O+S*L+M*Z+R*ce,s[7]=T*U+S*Q+M*W+R*de,s[11]=T*B+S*he+M*ie+R*ue,s[15]=T*A+S*$+M*ae+R*q,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],o=e[5],l=e[9],u=e[13],f=e[2],p=e[6],d=e[10],g=e[14],v=e[3],b=e[7],y=e[11],_=e[15];return v*(+s*l*p-i*u*p-s*o*d+n*u*d+i*o*g-n*l*g)+b*(+t*l*g-t*u*d+s*a*d-i*a*g+i*u*f-s*l*f)+y*(+t*u*p-t*o*g-s*a*p+n*a*g+s*o*f-n*u*f)+_*(-i*o*f-t*l*p+t*o*d+i*a*p-n*a*d+n*l*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],u=e[7],f=e[8],p=e[9],d=e[10],g=e[11],v=e[12],b=e[13],y=e[14],_=e[15],T=p*y*u-b*d*u+b*l*g-o*y*g-p*l*_+o*d*_,S=v*d*u-f*y*u-v*l*g+a*y*g+f*l*_-a*d*_,M=f*b*u-v*p*u+v*o*g-a*b*g-f*o*_+a*p*_,R=v*p*l-f*b*l-v*o*d+a*b*d+f*o*y-a*p*y,O=t*T+n*S+i*M+s*R;if(O===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/O;return e[0]=T*U,e[1]=(b*d*s-p*y*s-b*i*g+n*y*g+p*i*_-n*d*_)*U,e[2]=(o*y*s-b*l*s+b*i*u-n*y*u-o*i*_+n*l*_)*U,e[3]=(p*l*s-o*d*s-p*i*u+n*d*u+o*i*g-n*l*g)*U,e[4]=S*U,e[5]=(f*y*s-v*d*s+v*i*g-t*y*g-f*i*_+t*d*_)*U,e[6]=(v*l*s-a*y*s-v*i*u+t*y*u+a*i*_-t*l*_)*U,e[7]=(a*d*s-f*l*s+f*i*u-t*d*u-a*i*g+t*l*g)*U,e[8]=M*U,e[9]=(v*p*s-f*b*s-v*n*g+t*b*g+f*n*_-t*p*_)*U,e[10]=(a*b*s-v*o*s+v*n*u-t*b*u-a*n*_+t*o*_)*U,e[11]=(f*o*s-a*p*s-f*n*u+t*p*u+a*n*g-t*o*g)*U,e[12]=R*U,e[13]=(f*b*i-v*p*i+v*n*d-t*b*d-f*n*y+t*p*y)*U,e[14]=(v*o*i-a*b*i-v*n*l+t*b*l+a*n*y-t*o*y)*U,e[15]=(a*p*i-f*o*i+f*n*l-t*p*l-a*n*d+t*o*d)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,o=e.y,l=e.z,u=s*a,f=s*o;return this.set(u*a+n,u*o-i*l,u*l+i*o,0,u*o+i*l,f*o+n,f*l-i*a,0,u*l-i*o,f*l+i*a,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,u=s+s,f=a+a,p=o+o,d=s*u,g=s*f,v=s*p,b=a*f,y=a*p,_=o*p,T=l*u,S=l*f,M=l*p,R=n.x,O=n.y,U=n.z;return i[0]=(1-(b+_))*R,i[1]=(g+M)*R,i[2]=(v-S)*R,i[3]=0,i[4]=(g-M)*O,i[5]=(1-(d+_))*O,i[6]=(y+T)*O,i[7]=0,i[8]=(v+S)*U,i[9]=(y-T)*U,i[10]=(1-(d+b))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ia.set(i[0],i[1],i[2]).length();const a=ia.set(i[4],i[5],i[6]).length(),o=ia.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],di.copy(this);const u=1/s,f=1/a,p=1/o;return di.elements[0]*=u,di.elements[1]*=u,di.elements[2]*=u,di.elements[4]*=f,di.elements[5]*=f,di.elements[6]*=f,di.elements[8]*=p,di.elements[9]*=p,di.elements[10]*=p,t.setFromRotationMatrix(di),n.x=s,n.y=a,n.z=o,this}makePerspective(e,t,n,i,s,a,o=Ni){const l=this.elements,u=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),d=(n+i)/(n-i);let g,v;if(o===Ni)g=-(a+s)/(a-s),v=-2*a*s/(a-s);else if(o===zo)g=-a/(a-s),v=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=u,l[4]=0,l[8]=p,l[12]=0,l[1]=0,l[5]=f,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=g,l[14]=v,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,s,a,o=Ni){const l=this.elements,u=1/(t-e),f=1/(n-i),p=1/(a-s),d=(t+e)*u,g=(n+i)*f;let v,b;if(o===Ni)v=(a+s)*p,b=-2*p;else if(o===zo)v=s*p,b=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*f,l[9]=0,l[13]=-g,l[2]=0,l[6]=0,l[10]=b,l[14]=-v,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ia=new N,di=new it,J1=new N(0,0,0),K1=new N(1,1,1),wr=new N,Zc=new N,Jn=new N,wg=new it,Eg=new Gn;class Ko{constructor(e=0,t=0,n=0,i=Ko.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],o=i[8],l=i[1],u=i[5],f=i[9],p=i[2],d=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(Xt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(d,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Xt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(o,g),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Xt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Xt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(d,g),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(Xt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,u),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(o,g));break;case"XZY":this._z=Math.asin(-Xt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return wg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(wg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Eg.setFromEuler(this),this.setFromQuaternion(Eg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ko.DEFAULT_ORDER="XYZ";class tu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Q1=0;const Ag=new N,ra=new Gn,Qi=new it,Jc=new N,fo=new N,eP=new N,tP=new Gn,Pg=new N(1,0,0),Cg=new N(0,1,0),Rg=new N(0,0,1),nP={type:"added"},iP={type:"removed"};class St extends dr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Q1++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=St.DEFAULT_UP.clone();const e=new N,t=new Ko,n=new Gn,i=new N(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new it},normalMatrix:{value:new ft}}),this.matrix=new it,this.matrixWorld=new it,this.matrixAutoUpdate=St.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=St.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new tu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ra.setFromAxisAngle(e,t),this.quaternion.multiply(ra),this}rotateOnWorldAxis(e,t){return ra.setFromAxisAngle(e,t),this.quaternion.premultiply(ra),this}rotateX(e){return this.rotateOnAxis(Pg,e)}rotateY(e){return this.rotateOnAxis(Cg,e)}rotateZ(e){return this.rotateOnAxis(Rg,e)}translateOnAxis(e,t){return Ag.copy(e).applyQuaternion(this.quaternion),this.position.add(Ag.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Pg,e)}translateY(e){return this.translateOnAxis(Cg,e)}translateZ(e){return this.translateOnAxis(Rg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Qi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Jc.copy(e):Jc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),fo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qi.lookAt(fo,Jc,this.up):Qi.lookAt(Jc,fo,this.up),this.quaternion.setFromRotationMatrix(Qi),i&&(Qi.extractRotation(i.matrixWorld),ra.setFromRotationMatrix(Qi),this.quaternion.premultiply(ra.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(nP)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(iP)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Qi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Qi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fo,e,eP),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fo,tP,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++){const o=i[s];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let u=0,f=l.length;u<f;u++){const p=l[u];s(e.shapes,p)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,u=this.material.length;l<u;l++)o.push(s(e.materials,this.material[l]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),u=a(e.textures),f=a(e.images),p=a(e.shapes),d=a(e.skeletons),g=a(e.animations),v=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),u.length>0&&(n.textures=u),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),d.length>0&&(n.skeletons=d),g.length>0&&(n.animations=g),v.length>0&&(n.nodes=v)}return n.object=i,n;function a(o){const l=[];for(const u in o){const f=o[u];delete f.metadata,l.push(f)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}St.DEFAULT_UP=new N(0,1,0);St.DEFAULT_MATRIX_AUTO_UPDATE=!0;St.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const pi=new N,er=new N,yf=new N,tr=new N,sa=new N,aa=new N,Ig=new N,xf=new N,bf=new N,Sf=new N;let Kc=!1;class zn{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),pi.subVectors(e,t),i.cross(pi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){pi.subVectors(i,t),er.subVectors(n,t),yf.subVectors(e,t);const a=pi.dot(pi),o=pi.dot(er),l=pi.dot(yf),u=er.dot(er),f=er.dot(yf),p=a*u-o*o;if(p===0)return s.set(-2,-1,-1);const d=1/p,g=(u*l-o*f)*d,v=(a*f-o*l)*d;return s.set(1-g-v,v,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,tr),tr.x>=0&&tr.y>=0&&tr.x+tr.y<=1}static getUV(e,t,n,i,s,a,o,l){return Kc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kc=!0),this.getInterpolation(e,t,n,i,s,a,o,l)}static getInterpolation(e,t,n,i,s,a,o,l){return this.getBarycoord(e,t,n,i,tr),l.setScalar(0),l.addScaledVector(s,tr.x),l.addScaledVector(a,tr.y),l.addScaledVector(o,tr.z),l}static isFrontFacing(e,t,n,i){return pi.subVectors(n,t),er.subVectors(e,t),pi.cross(er).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return pi.subVectors(this.c,this.b),er.subVectors(this.a,this.b),pi.cross(er).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Kc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kc=!0),zn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return zn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return zn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,o;sa.subVectors(i,n),aa.subVectors(s,n),xf.subVectors(e,n);const l=sa.dot(xf),u=aa.dot(xf);if(l<=0&&u<=0)return t.copy(n);bf.subVectors(e,i);const f=sa.dot(bf),p=aa.dot(bf);if(f>=0&&p<=f)return t.copy(i);const d=l*p-f*u;if(d<=0&&l>=0&&f<=0)return a=l/(l-f),t.copy(n).addScaledVector(sa,a);Sf.subVectors(e,s);const g=sa.dot(Sf),v=aa.dot(Sf);if(v>=0&&g<=v)return t.copy(s);const b=g*u-l*v;if(b<=0&&u>=0&&v<=0)return o=u/(u-v),t.copy(n).addScaledVector(aa,o);const y=f*v-g*p;if(y<=0&&p-f>=0&&g-v>=0)return Ig.subVectors(s,i),o=(p-f)/(p-f+(g-v)),t.copy(i).addScaledVector(Ig,o);const _=1/(y+b+d);return a=b*_,o=d*_,t.copy(n).addScaledVector(sa,a).addScaledVector(aa,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rP=0;class An extends dr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rP++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=Ts,this.side=ur,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ud,this.blendDst=Nd,this.blendEquation=gs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Gl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=r0,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=kl,this.stencilZFail=kl,this.stencilZPass=kl,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ts&&(n.blending=this.blending),this.side!==ur&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const _0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mi={h:0,s:0,l:0},Qc={h:0,s:0,l:0};function Mf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Bt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Qn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Qn.workingColorSpace){return this.r=e,this.g=t,this.b=n,Qn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Qn.workingColorSpace){if(e=jd(e,1),t=Xt(t,0,1),n=Xt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=Mf(a,s,e+1/3),this.g=Mf(a,s,e),this.b=Mf(a,s,e-1/3)}return Qn.toWorkingColorSpace(this,i),this}setStyle(e,t=Bt){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Bt){const n=_0[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=wa(e.r),this.g=wa(e.g),this.b=wa(e.b),this}copyLinearToSRGB(e){return this.r=hf(e.r),this.g=hf(e.g),this.b=hf(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bt){return Qn.fromWorkingColorSpace(Tn.copy(this),e),Math.round(Xt(Tn.r*255,0,255))*65536+Math.round(Xt(Tn.g*255,0,255))*256+Math.round(Xt(Tn.b*255,0,255))}getHexString(e=Bt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Qn.workingColorSpace){Qn.fromWorkingColorSpace(Tn.copy(this),t);const n=Tn.r,i=Tn.g,s=Tn.b,a=Math.max(n,i,s),o=Math.min(n,i,s);let l,u;const f=(o+a)/2;if(o===a)l=0,u=0;else{const p=a-o;switch(u=f<=.5?p/(a+o):p/(2-a-o),a){case n:l=(i-s)/p+(i<s?6:0);break;case i:l=(s-n)/p+2;break;case s:l=(n-i)/p+4;break}l/=6}return e.h=l,e.s=u,e.l=f,e}getRGB(e,t=Qn.workingColorSpace){return Qn.fromWorkingColorSpace(Tn.copy(this),t),e.r=Tn.r,e.g=Tn.g,e.b=Tn.b,e}getStyle(e=Bt){Qn.fromWorkingColorSpace(Tn.copy(this),e);const t=Tn.r,n=Tn.g,i=Tn.b;return e!==Bt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(mi),mi.h+=e,mi.s+=t,mi.l+=n,this.setHSL(mi.h,mi.s,mi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(mi),e.getHSL(Qc);const n=To(mi.h,Qc.h,t),i=To(mi.s,Qc.s,t),s=To(mi.l,Qc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Tn=new Le;Le.NAMES=_0;class Ur extends An{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Zo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ir=sP();function sP(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const u=l-127;u<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):u<-14?(n[l]=1024>>-u-14,n[l|256]=1024>>-u-14|32768,i[l]=-u-1,i[l|256]=-u-1):u<=15?(n[l]=u+15<<10,n[l|256]=u+15<<10|32768,i[l]=13,i[l|256]=13):u<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let u=l<<13,f=0;for(;!(u&8388608);)u<<=1,f-=8388608;u&=-8388609,f+=947912704,s[l]=u|f}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:o}}function Fn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Xt(r,-65504,65504),ir.floatView[0]=r;const e=ir.uint32View[0],t=e>>23&511;return ir.baseTable[t]+((e&8388607)>>ir.shiftTable[t])}function bo(r){const e=r>>10;return ir.uint32View[0]=ir.mantissaTable[ir.offsetTable[e]+(r&1023)]+ir.exponentTable[e],ir.floatView[0]}const aP={toHalfFloat:Fn,fromHalfFloat:bo},nn=new N,el=new fe;class Lt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Bo,this.updateRange={offset:0,count:-1},this.gpuType=Ui,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)el.fromBufferAttribute(this,t),el.applyMatrix3(e),this.setXY(t,el.x,el.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix3(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix4(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyNormalMatrix(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.transformDirection(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=kn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Bo&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class oP extends Lt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class cP extends Lt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class lP extends Lt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class uP extends Lt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class $d extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class hP extends Lt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Zd extends Lt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class fP extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=bo(this.array[e*this.itemSize]);return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=Fn(t),this}getY(e){let t=bo(this.array[e*this.itemSize+1]);return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=Fn(t),this}getZ(e){let t=bo(this.array[e*this.itemSize+2]);return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=Fn(t),this}getW(e){let t=bo(this.array[e*this.itemSize+3]);return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=Fn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this.array[e+2]=Fn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this.array[e+2]=Fn(i),this.array[e+3]=Fn(s),this}}class ke extends Lt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class dP extends Lt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let pP=0;const ci=new it,Tf=new St,oa=new N,Kn=new ki,po=new ki,dn=new N;class pt extends dr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:pP++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(p0(e)?Zd:$d)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ci.makeRotationFromQuaternion(e),this.applyMatrix4(ci),this}rotateX(e){return ci.makeRotationX(e),this.applyMatrix4(ci),this}rotateY(e){return ci.makeRotationY(e),this.applyMatrix4(ci),this}rotateZ(e){return ci.makeRotationZ(e),this.applyMatrix4(ci),this}translate(e,t,n){return ci.makeTranslation(e,t,n),this.applyMatrix4(ci),this}scale(e,t,n){return ci.makeScale(e,t,n),this.applyMatrix4(ci),this}lookAt(e){return Tf.lookAt(e),Tf.updateMatrix(),this.applyMatrix4(Tf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(oa).negate(),this.translate(oa.x,oa.y,oa.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ke(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ki);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Kn.setFromBufferAttribute(s),this.morphTargetsRelative?(dn.addVectors(this.boundingBox.min,Kn.min),this.boundingBox.expandByPoint(dn),dn.addVectors(this.boundingBox.max,Kn.max),this.boundingBox.expandByPoint(dn)):(this.boundingBox.expandByPoint(Kn.min),this.boundingBox.expandByPoint(Kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ei);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(Kn.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];po.setFromBufferAttribute(o),this.morphTargetsRelative?(dn.addVectors(Kn.min,po.min),Kn.expandByPoint(dn),dn.addVectors(Kn.max,po.max),Kn.expandByPoint(dn)):(Kn.expandByPoint(po.min),Kn.expandByPoint(po.max))}Kn.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)dn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(dn));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let u=0,f=o.count;u<f;u++)dn.fromBufferAttribute(o,u),l&&(oa.fromBufferAttribute(e,u),dn.add(oa)),i=Math.max(i,n.distanceToSquared(dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Lt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,u=[],f=[];for(let L=0;L<o;L++)u[L]=new N,f[L]=new N;const p=new N,d=new N,g=new N,v=new fe,b=new fe,y=new fe,_=new N,T=new N;function S(L,Q,he){p.fromArray(i,L*3),d.fromArray(i,Q*3),g.fromArray(i,he*3),v.fromArray(a,L*2),b.fromArray(a,Q*2),y.fromArray(a,he*2),d.sub(p),g.sub(p),b.sub(v),y.sub(v);const $=1/(b.x*y.y-y.x*b.y);isFinite($)&&(_.copy(d).multiplyScalar(y.y).addScaledVector(g,-b.y).multiplyScalar($),T.copy(g).multiplyScalar(b.x).addScaledVector(d,-y.x).multiplyScalar($),u[L].add(_),u[Q].add(_),u[he].add(_),f[L].add(T),f[Q].add(T),f[he].add(T))}let M=this.groups;M.length===0&&(M=[{start:0,count:n.length}]);for(let L=0,Q=M.length;L<Q;++L){const he=M[L],$=he.start,Z=he.count;for(let W=$,ie=$+Z;W<ie;W+=3)S(n[W+0],n[W+1],n[W+2])}const R=new N,O=new N,U=new N,B=new N;function A(L){U.fromArray(s,L*3),B.copy(U);const Q=u[L];R.copy(Q),R.sub(U.multiplyScalar(U.dot(Q))).normalize(),O.crossVectors(B,Q);const $=O.dot(f[L])<0?-1:1;l[L*4]=R.x,l[L*4+1]=R.y,l[L*4+2]=R.z,l[L*4+3]=$}for(let L=0,Q=M.length;L<Q;++L){const he=M[L],$=he.start,Z=he.count;for(let W=$,ie=$+Z;W<ie;W+=3)A(n[W+0]),A(n[W+1]),A(n[W+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Lt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,g=n.count;d<g;d++)n.setXYZ(d,0,0,0);const i=new N,s=new N,a=new N,o=new N,l=new N,u=new N,f=new N,p=new N;if(e)for(let d=0,g=e.count;d<g;d+=3){const v=e.getX(d+0),b=e.getX(d+1),y=e.getX(d+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,b),a.fromBufferAttribute(t,y),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),o.fromBufferAttribute(n,v),l.fromBufferAttribute(n,b),u.fromBufferAttribute(n,y),o.add(f),l.add(f),u.add(f),n.setXYZ(v,o.x,o.y,o.z),n.setXYZ(b,l.x,l.y,l.z),n.setXYZ(y,u.x,u.y,u.z)}else for(let d=0,g=t.count;d<g;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),n.setXYZ(d+0,f.x,f.y,f.z),n.setXYZ(d+1,f.x,f.y,f.z),n.setXYZ(d+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dn.fromBufferAttribute(e,t),dn.normalize(),e.setXYZ(t,dn.x,dn.y,dn.z)}toNonIndexed(){function e(o,l){const u=o.array,f=o.itemSize,p=o.normalized,d=new u.constructor(l.length*f);let g=0,v=0;for(let b=0,y=l.length;b<y;b++){o.isInterleavedBufferAttribute?g=l[b]*o.data.stride+o.offset:g=l[b]*f;for(let _=0;_<f;_++)d[v++]=u[g++]}return new Lt(d,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new pt,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],u=e(l,n);t.setAttribute(o,u)}const s=this.morphAttributes;for(const o in s){const l=[],u=s[o];for(let f=0,p=u.length;f<p;f++){const d=u[f],g=e(d,n);l.push(g)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const u=a[o];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const u=n[l];e.data.attributes[l]=u.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],f=[];for(let p=0,d=u.length;p<d;p++){const g=u[p];f.push(g.toJSON(e.data))}f.length>0&&(i[l]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const u in i){const f=i[u];this.setAttribute(u,f.clone(t))}const s=e.morphAttributes;for(const u in s){const f=[],p=s[u];for(let d=0,g=p.length;d<g;d++)f.push(p[d].clone(t));this.morphAttributes[u]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,f=a.length;u<f;u++){const p=a[u];this.addGroup(p.start,p.count,p.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Lg=new it,cs=new Oa,tl=new Ei,Dg=new N,ca=new N,la=new N,ua=new N,wf=new N,nl=new N,il=new fe,rl=new fe,sl=new fe,Og=new N,Ug=new N,Ng=new N,al=new N,ol=new N;class mn extends St{constructor(e=new pt,t=new Ur){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(s&&o){nl.set(0,0,0);for(let l=0,u=s.length;l<u;l++){const f=o[l],p=s[l];f!==0&&(wf.fromBufferAttribute(p,e),a?nl.addScaledVector(wf,f):nl.addScaledVector(wf.sub(t),f))}t.add(nl)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),tl.copy(n.boundingSphere),tl.applyMatrix4(s),cs.copy(e.ray).recast(e.near),!(tl.containsPoint(cs.origin)===!1&&(cs.intersectSphere(tl,Dg)===null||cs.origin.distanceToSquared(Dg)>(e.far-e.near)**2))&&(Lg.copy(s).invert(),cs.copy(e.ray).applyMatrix4(Lg),!(n.boundingBox!==null&&cs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,cs)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,u=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,d=s.groups,g=s.drawRange;if(o!==null)if(Array.isArray(a))for(let v=0,b=d.length;v<b;v++){const y=d[v],_=a[y.materialIndex],T=Math.max(y.start,g.start),S=Math.min(o.count,Math.min(y.start+y.count,g.start+g.count));for(let M=T,R=S;M<R;M+=3){const O=o.getX(M),U=o.getX(M+1),B=o.getX(M+2);i=cl(this,_,e,n,u,f,p,O,U,B),i&&(i.faceIndex=Math.floor(M/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),b=Math.min(o.count,g.start+g.count);for(let y=v,_=b;y<_;y+=3){const T=o.getX(y),S=o.getX(y+1),M=o.getX(y+2);i=cl(this,a,e,n,u,f,p,T,S,M),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(a))for(let v=0,b=d.length;v<b;v++){const y=d[v],_=a[y.materialIndex],T=Math.max(y.start,g.start),S=Math.min(l.count,Math.min(y.start+y.count,g.start+g.count));for(let M=T,R=S;M<R;M+=3){const O=M,U=M+1,B=M+2;i=cl(this,_,e,n,u,f,p,O,U,B),i&&(i.faceIndex=Math.floor(M/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),b=Math.min(l.count,g.start+g.count);for(let y=v,_=b;y<_;y+=3){const T=y,S=y+1,M=y+2;i=cl(this,a,e,n,u,f,p,T,S,M),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function mP(r,e,t,n,i,s,a,o){let l;if(e.side===Ln?l=n.intersectTriangle(a,s,i,!0,o):l=n.intersectTriangle(i,s,a,e.side===ur,o),l===null)return null;ol.copy(o),ol.applyMatrix4(r.matrixWorld);const u=t.ray.origin.distanceTo(ol);return u<t.near||u>t.far?null:{distance:u,point:ol.clone(),object:r}}function cl(r,e,t,n,i,s,a,o,l,u){r.getVertexPosition(o,ca),r.getVertexPosition(l,la),r.getVertexPosition(u,ua);const f=mP(r,e,t,n,ca,la,ua,al);if(f){i&&(il.fromBufferAttribute(i,o),rl.fromBufferAttribute(i,l),sl.fromBufferAttribute(i,u),f.uv=zn.getInterpolation(al,ca,la,ua,il,rl,sl,new fe)),s&&(il.fromBufferAttribute(s,o),rl.fromBufferAttribute(s,l),sl.fromBufferAttribute(s,u),f.uv1=zn.getInterpolation(al,ca,la,ua,il,rl,sl,new fe),f.uv2=f.uv1),a&&(Og.fromBufferAttribute(a,o),Ug.fromBufferAttribute(a,l),Ng.fromBufferAttribute(a,u),f.normal=zn.getInterpolation(al,ca,la,ua,Og,Ug,Ng,new N),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:o,b:l,c:u,normal:new N,materialIndex:0};zn.getNormal(ca,la,ua,p.normal),f.face=p}return f}class Is extends pt{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const o=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const l=[],u=[],f=[],p=[];let d=0,g=0;v("z","y","x",-1,-1,n,t,e,a,s,0),v("z","y","x",1,-1,n,t,-e,a,s,1),v("x","z","y",1,1,e,n,t,i,a,2),v("x","z","y",1,-1,e,n,-t,i,a,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(f,3)),this.setAttribute("uv",new ke(p,2));function v(b,y,_,T,S,M,R,O,U,B,A){const L=M/U,Q=R/B,he=M/2,$=R/2,Z=O/2,W=U+1,ie=B+1;let ae=0,ce=0;const de=new N;for(let ue=0;ue<ie;ue++){const q=ue*Q-$;for(let oe=0;oe<W;oe++){const Ae=oe*L-he;de[b]=Ae*T,de[y]=q*S,de[_]=Z,u.push(de.x,de.y,de.z),de[b]=0,de[y]=0,de[_]=O>0?1:-1,f.push(de.x,de.y,de.z),p.push(oe/U),p.push(1-ue/B),ae+=1}}for(let ue=0;ue<B;ue++)for(let q=0;q<U;q++){const oe=d+q+W*ue,Ae=d+q+W*(ue+1),Ce=d+(q+1)+W*(ue+1),we=d+(q+1)+W*ue;l.push(oe,Ae,we),l.push(Ae,Ce,we),ce+=6}o.addGroup(g,ce,A),g+=ce,d+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Is(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ia(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Rn(r){const e={};for(let t=0;t<r.length;t++){const n=Ia(r[t]);for(const i in n)e[i]=n[i]}return e}function gP(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function v0(r){return r.getRenderTarget()===null?r.outputColorSpace:_i}const y0={clone:Ia,merge:Rn};var _P=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,vP=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class zi extends An{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=_P,this.fragmentShader=vP,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ia(e.uniforms),this.uniformsGroups=gP(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class nu extends St{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new it,this.projectionMatrix=new it,this.projectionMatrixInverse=new it,this.coordinateSystem=Ni}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class pn extends nu{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ra*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ws*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ra*2*Math.atan(Math.tan(ws*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ws*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,u=a.fullHeight;s+=a.offsetX*i/l,t-=a.offsetY*n/u,i*=a.width/l,n*=a.height/u}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ha=-90,fa=1;class x0 extends St{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new pn(ha,fa,e,t);i.layers=this.layers,this.add(i);const s=new pn(ha,fa,e,t);s.layers=this.layers,this.add(s);const a=new pn(ha,fa,e,t);a.layers=this.layers,this.add(a);const o=new pn(ha,fa,e,t);o.layers=this.layers,this.add(o);const l=new pn(ha,fa,e,t);l.layers=this.layers,this.add(l);const u=new pn(ha,fa,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,o,l]=t;for(const u of t)this.remove(u);if(e===Ni)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===zo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,s,a,o,l,u]=this.children,f=e.getRenderTarget(),p=e.xr.enabled;e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,u),e.setRenderTarget(f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Qo extends en{constructor(e,t,n,i,s,a,o,l,u,f){e=e!==void 0?e:[],t=t!==void 0?t:hr,super(e,t,n,i,s,a,o,l,u,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class b0 extends vi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(wo("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===lr?Bt:Rr),this.texture=new Qo(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Zt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Is(5,5,5),s=new zi({name:"CubemapFromEquirect",uniforms:Ia(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ln,blending:ar});s.uniforms.tEquirect.value=t;const a=new mn(i,s),o=t.minFilter;return t.minFilter===Lr&&(t.minFilter=Zt),new x0(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}const Ef=new N,yP=new N,xP=new ft;class Ar{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ef.subVectors(n,t).cross(yP.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Ef),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||xP.getNormalMatrix(e),i=this.coplanarPoint(Ef).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ls=new Ei,ll=new N;class iu{constructor(e=new Ar,t=new Ar,n=new Ar,i=new Ar,s=new Ar,a=new Ar){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ni){const n=this.planes,i=e.elements,s=i[0],a=i[1],o=i[2],l=i[3],u=i[4],f=i[5],p=i[6],d=i[7],g=i[8],v=i[9],b=i[10],y=i[11],_=i[12],T=i[13],S=i[14],M=i[15];if(n[0].setComponents(l-s,d-u,y-g,M-_).normalize(),n[1].setComponents(l+s,d+u,y+g,M+_).normalize(),n[2].setComponents(l+a,d+f,y+v,M+T).normalize(),n[3].setComponents(l-a,d-f,y-v,M-T).normalize(),n[4].setComponents(l-o,d-p,y-b,M-S).normalize(),t===Ni)n[5].setComponents(l+o,d+p,y+b,M+S).normalize();else if(t===zo)n[5].setComponents(o,p,b,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ls.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ls.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ls)}intersectsSprite(e){return ls.center.set(0,0,0),ls.radius=.7071067811865476,ls.applyMatrix4(e.matrixWorld),this.intersectsSphere(ls)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ll.x=i.normal.x>0?e.max.x:e.min.x,ll.y=i.normal.y>0?e.max.y:e.min.y,ll.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ll)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function S0(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function bP(r,e){const t=e.isWebGL2,n=new WeakMap;function i(u,f){const p=u.array,d=u.usage,g=r.createBuffer();r.bindBuffer(f,g),r.bufferData(f,p,d),u.onUploadCallback();let v;if(p instanceof Float32Array)v=r.FLOAT;else if(p instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)v=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)v=r.SHORT;else if(p instanceof Uint32Array)v=r.UNSIGNED_INT;else if(p instanceof Int32Array)v=r.INT;else if(p instanceof Int8Array)v=r.BYTE;else if(p instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:g,type:v,bytesPerElement:p.BYTES_PER_ELEMENT,version:u.version}}function s(u,f,p){const d=f.array,g=f.updateRange;r.bindBuffer(p,u),g.count===-1?r.bufferSubData(p,0,d):(t?r.bufferSubData(p,g.offset*d.BYTES_PER_ELEMENT,d,g.offset,g.count):r.bufferSubData(p,g.offset*d.BYTES_PER_ELEMENT,d.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function a(u){return u.isInterleavedBufferAttribute&&(u=u.data),n.get(u)}function o(u){u.isInterleavedBufferAttribute&&(u=u.data);const f=n.get(u);f&&(r.deleteBuffer(f.buffer),n.delete(u))}function l(u,f){if(u.isGLBufferAttribute){const d=n.get(u);(!d||d.version<u.version)&&n.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const p=n.get(u);p===void 0?n.set(u,i(u,f)):p.version<u.version&&(s(p.buffer,u,f),p.version=u.version)}return{get:a,remove:o,update:l}}class ec extends pt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),u=o+1,f=l+1,p=e/o,d=t/l,g=[],v=[],b=[],y=[];for(let _=0;_<f;_++){const T=_*d-a;for(let S=0;S<u;S++){const M=S*p-s;v.push(M,-T,0),b.push(0,0,1),y.push(S/o),y.push(1-_/l)}}for(let _=0;_<l;_++)for(let T=0;T<o;T++){const S=T+u*_,M=T+u*(_+1),R=T+1+u*(_+1),O=T+1+u*_;g.push(S,M,O),g.push(M,R,O)}this.setIndex(g),this.setAttribute("position",new ke(v,3)),this.setAttribute("normal",new ke(b,3)),this.setAttribute("uv",new ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ec(e.width,e.height,e.widthSegments,e.heightSegments)}}var SP=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,MP=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,TP=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,wP=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,EP=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,AP=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,PP=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,CP=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,RP=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,IP=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,LP=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,DP=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,OP=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,UP=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,NP=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,FP=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,BP=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zP=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kP=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,HP=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,VP=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,GP=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,WP=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,XP=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,jP=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,qP=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,YP=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,$P=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ZP="gl_FragColor = linearToOutputTexel( gl_FragColor );",JP=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,KP=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,QP=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,eC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,tC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,nC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,iC=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,rC=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,sC=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,aC=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,oC=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,cC=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lC=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,uC=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,hC=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,fC=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,dC=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,pC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,mC=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,gC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,_C=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,vC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,yC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,xC=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,bC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,SC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,MC=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,TC=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,EC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,AC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,PC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,CC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,RC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,IC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,LC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,DC=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,OC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,UC=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,NC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,FC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,BC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,zC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,kC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,HC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,VC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,GC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,WC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,XC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,jC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,qC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,YC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,$C=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ZC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,JC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,KC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,QC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,eR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,tR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,nR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,iR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,rR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,sR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,aR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,oR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,cR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,lR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,uR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,hR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,fR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,dR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,pR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,mR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,gR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,_R=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,vR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const yR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,xR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,bR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,SR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,MR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,TR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wR=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ER=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,AR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,PR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,CR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,RR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,IR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,LR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,DR=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,OR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,UR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,NR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,BR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,HR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,WR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,YR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$R=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,JR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,KR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,tt={alphahash_fragment:SP,alphahash_pars_fragment:MP,alphamap_fragment:TP,alphamap_pars_fragment:wP,alphatest_fragment:EP,alphatest_pars_fragment:AP,aomap_fragment:PP,aomap_pars_fragment:CP,begin_vertex:RP,beginnormal_vertex:IP,bsdfs:LP,iridescence_fragment:DP,bumpmap_pars_fragment:OP,clipping_planes_fragment:UP,clipping_planes_pars_fragment:NP,clipping_planes_pars_vertex:FP,clipping_planes_vertex:BP,color_fragment:zP,color_pars_fragment:kP,color_pars_vertex:HP,color_vertex:VP,common:GP,cube_uv_reflection_fragment:WP,defaultnormal_vertex:XP,displacementmap_pars_vertex:jP,displacementmap_vertex:qP,emissivemap_fragment:YP,emissivemap_pars_fragment:$P,colorspace_fragment:ZP,colorspace_pars_fragment:JP,envmap_fragment:KP,envmap_common_pars_fragment:QP,envmap_pars_fragment:eC,envmap_pars_vertex:tC,envmap_physical_pars_fragment:dC,envmap_vertex:nC,fog_vertex:iC,fog_pars_vertex:rC,fog_fragment:sC,fog_pars_fragment:aC,gradientmap_pars_fragment:oC,lightmap_fragment:cC,lightmap_pars_fragment:lC,lights_lambert_fragment:uC,lights_lambert_pars_fragment:hC,lights_pars_begin:fC,lights_toon_fragment:pC,lights_toon_pars_fragment:mC,lights_phong_fragment:gC,lights_phong_pars_fragment:_C,lights_physical_fragment:vC,lights_physical_pars_fragment:yC,lights_fragment_begin:xC,lights_fragment_maps:bC,lights_fragment_end:SC,logdepthbuf_fragment:MC,logdepthbuf_pars_fragment:TC,logdepthbuf_pars_vertex:wC,logdepthbuf_vertex:EC,map_fragment:AC,map_pars_fragment:PC,map_particle_fragment:CC,map_particle_pars_fragment:RC,metalnessmap_fragment:IC,metalnessmap_pars_fragment:LC,morphcolor_vertex:DC,morphnormal_vertex:OC,morphtarget_pars_vertex:UC,morphtarget_vertex:NC,normal_fragment_begin:FC,normal_fragment_maps:BC,normal_pars_fragment:zC,normal_pars_vertex:kC,normal_vertex:HC,normalmap_pars_fragment:VC,clearcoat_normal_fragment_begin:GC,clearcoat_normal_fragment_maps:WC,clearcoat_pars_fragment:XC,iridescence_pars_fragment:jC,opaque_fragment:qC,packing:YC,premultiplied_alpha_fragment:$C,project_vertex:ZC,dithering_fragment:JC,dithering_pars_fragment:KC,roughnessmap_fragment:QC,roughnessmap_pars_fragment:eR,shadowmap_pars_fragment:tR,shadowmap_pars_vertex:nR,shadowmap_vertex:iR,shadowmask_pars_fragment:rR,skinbase_vertex:sR,skinning_pars_vertex:aR,skinning_vertex:oR,skinnormal_vertex:cR,specularmap_fragment:lR,specularmap_pars_fragment:uR,tonemapping_fragment:hR,tonemapping_pars_fragment:fR,transmission_fragment:dR,transmission_pars_fragment:pR,uv_pars_fragment:mR,uv_pars_vertex:gR,uv_vertex:_R,worldpos_vertex:vR,background_vert:yR,background_frag:xR,backgroundCube_vert:bR,backgroundCube_frag:SR,cube_vert:MR,cube_frag:TR,depth_vert:wR,depth_frag:ER,distanceRGBA_vert:AR,distanceRGBA_frag:PR,equirect_vert:CR,equirect_frag:RR,linedashed_vert:IR,linedashed_frag:LR,meshbasic_vert:DR,meshbasic_frag:OR,meshlambert_vert:UR,meshlambert_frag:NR,meshmatcap_vert:FR,meshmatcap_frag:BR,meshnormal_vert:zR,meshnormal_frag:kR,meshphong_vert:HR,meshphong_frag:VR,meshphysical_vert:GR,meshphysical_frag:WR,meshtoon_vert:XR,meshtoon_frag:jR,points_vert:qR,points_frag:YR,shadow_vert:$R,shadow_frag:ZR,sprite_vert:JR,sprite_frag:KR},Ee={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},gi={basic:{uniforms:Rn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:tt.meshbasic_vert,fragmentShader:tt.meshbasic_frag},lambert:{uniforms:Rn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Le(0)}}]),vertexShader:tt.meshlambert_vert,fragmentShader:tt.meshlambert_frag},phong:{uniforms:Rn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:tt.meshphong_vert,fragmentShader:tt.meshphong_frag},standard:{uniforms:Rn([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag},toon:{uniforms:Rn([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Le(0)}}]),vertexShader:tt.meshtoon_vert,fragmentShader:tt.meshtoon_frag},matcap:{uniforms:Rn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:tt.meshmatcap_vert,fragmentShader:tt.meshmatcap_frag},points:{uniforms:Rn([Ee.points,Ee.fog]),vertexShader:tt.points_vert,fragmentShader:tt.points_frag},dashed:{uniforms:Rn([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:tt.linedashed_vert,fragmentShader:tt.linedashed_frag},depth:{uniforms:Rn([Ee.common,Ee.displacementmap]),vertexShader:tt.depth_vert,fragmentShader:tt.depth_frag},normal:{uniforms:Rn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:tt.meshnormal_vert,fragmentShader:tt.meshnormal_frag},sprite:{uniforms:Rn([Ee.sprite,Ee.fog]),vertexShader:tt.sprite_vert,fragmentShader:tt.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:tt.background_vert,fragmentShader:tt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:tt.backgroundCube_vert,fragmentShader:tt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:tt.cube_vert,fragmentShader:tt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:tt.equirect_vert,fragmentShader:tt.equirect_frag},distanceRGBA:{uniforms:Rn([Ee.common,Ee.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:tt.distanceRGBA_vert,fragmentShader:tt.distanceRGBA_frag},shadow:{uniforms:Rn([Ee.lights,Ee.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:tt.shadow_vert,fragmentShader:tt.shadow_frag}};gi.physical={uniforms:Rn([gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag};const ul={r:0,b:0,g:0};function QR(r,e,t,n,i,s,a){const o=new Le(0);let l=s===!0?0:1,u,f,p=null,d=0,g=null;function v(y,_){let T=!1,S=_.isScene===!0?_.background:null;S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?b(o,l):S&&S.isColor&&(b(S,1),T=!0);const M=r.xr.getEnvironmentBlendMode();M==="additive"?n.buffers.color.setClear(0,0,0,1,a):M==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||T)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Da)?(f===void 0&&(f=new mn(new Is(1,1,1),new zi({name:"BackgroundCubeMaterial",uniforms:Ia(gi.backgroundCube.uniforms),vertexShader:gi.backgroundCube.vertexShader,fragmentShader:gi.backgroundCube.fragmentShader,side:Ln,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(R,O,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=S,f.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.toneMapped=S.colorSpace!==Bt,(p!==S||d!==S.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,p=S,d=S.version,g=r.toneMapping),f.layers.enableAll(),y.unshift(f,f.geometry,f.material,0,0,null)):S&&S.isTexture&&(u===void 0&&(u=new mn(new ec(2,2),new zi({name:"BackgroundMaterial",uniforms:Ia(gi.background.uniforms),vertexShader:gi.background.vertexShader,fragmentShader:gi.background.fragmentShader,side:ur,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(u)),u.material.uniforms.t2D.value=S,u.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,u.material.toneMapped=S.colorSpace!==Bt,S.matrixAutoUpdate===!0&&S.updateMatrix(),u.material.uniforms.uvTransform.value.copy(S.matrix),(p!==S||d!==S.version||g!==r.toneMapping)&&(u.material.needsUpdate=!0,p=S,d=S.version,g=r.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null))}function b(y,_){y.getRGB(ul,v0(r)),n.buffers.color.setClear(ul.r,ul.g,ul.b,_,a)}return{getClearColor:function(){return o},setClearColor:function(y,_=1){o.set(y),l=_,b(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,b(o,l)},render:v}}function eI(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||s!==null,o={},l=y(null);let u=l,f=!1;function p(Z,W,ie,ae,ce){let de=!1;if(a){const ue=b(ae,ie,W);u!==ue&&(u=ue,g(u.object)),de=_(Z,ae,ie,ce),de&&T(Z,ae,ie,ce)}else{const ue=W.wireframe===!0;(u.geometry!==ae.id||u.program!==ie.id||u.wireframe!==ue)&&(u.geometry=ae.id,u.program=ie.id,u.wireframe=ue,de=!0)}ce!==null&&t.update(ce,r.ELEMENT_ARRAY_BUFFER),(de||f)&&(f=!1,B(Z,W,ie,ae),ce!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(ce).buffer))}function d(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function g(Z){return n.isWebGL2?r.bindVertexArray(Z):s.bindVertexArrayOES(Z)}function v(Z){return n.isWebGL2?r.deleteVertexArray(Z):s.deleteVertexArrayOES(Z)}function b(Z,W,ie){const ae=ie.wireframe===!0;let ce=o[Z.id];ce===void 0&&(ce={},o[Z.id]=ce);let de=ce[W.id];de===void 0&&(de={},ce[W.id]=de);let ue=de[ae];return ue===void 0&&(ue=y(d()),de[ae]=ue),ue}function y(Z){const W=[],ie=[],ae=[];for(let ce=0;ce<i;ce++)W[ce]=0,ie[ce]=0,ae[ce]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:ie,attributeDivisors:ae,object:Z,attributes:{},index:null}}function _(Z,W,ie,ae){const ce=u.attributes,de=W.attributes;let ue=0;const q=ie.getAttributes();for(const oe in q)if(q[oe].location>=0){const Ce=ce[oe];let we=de[oe];if(we===void 0&&(oe==="instanceMatrix"&&Z.instanceMatrix&&(we=Z.instanceMatrix),oe==="instanceColor"&&Z.instanceColor&&(we=Z.instanceColor)),Ce===void 0||Ce.attribute!==we||we&&Ce.data!==we.data)return!0;ue++}return u.attributesNum!==ue||u.index!==ae}function T(Z,W,ie,ae){const ce={},de=W.attributes;let ue=0;const q=ie.getAttributes();for(const oe in q)if(q[oe].location>=0){let Ce=de[oe];Ce===void 0&&(oe==="instanceMatrix"&&Z.instanceMatrix&&(Ce=Z.instanceMatrix),oe==="instanceColor"&&Z.instanceColor&&(Ce=Z.instanceColor));const we={};we.attribute=Ce,Ce&&Ce.data&&(we.data=Ce.data),ce[oe]=we,ue++}u.attributes=ce,u.attributesNum=ue,u.index=ae}function S(){const Z=u.newAttributes;for(let W=0,ie=Z.length;W<ie;W++)Z[W]=0}function M(Z){R(Z,0)}function R(Z,W){const ie=u.newAttributes,ae=u.enabledAttributes,ce=u.attributeDivisors;ie[Z]=1,ae[Z]===0&&(r.enableVertexAttribArray(Z),ae[Z]=1),ce[Z]!==W&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Z,W),ce[Z]=W)}function O(){const Z=u.newAttributes,W=u.enabledAttributes;for(let ie=0,ae=W.length;ie<ae;ie++)W[ie]!==Z[ie]&&(r.disableVertexAttribArray(ie),W[ie]=0)}function U(Z,W,ie,ae,ce,de,ue){ue===!0?r.vertexAttribIPointer(Z,W,ie,ce,de):r.vertexAttribPointer(Z,W,ie,ae,ce,de)}function B(Z,W,ie,ae){if(n.isWebGL2===!1&&(Z.isInstancedMesh||ae.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const ce=ae.attributes,de=ie.getAttributes(),ue=W.defaultAttributeValues;for(const q in de){const oe=de[q];if(oe.location>=0){let Ae=ce[q];if(Ae===void 0&&(q==="instanceMatrix"&&Z.instanceMatrix&&(Ae=Z.instanceMatrix),q==="instanceColor"&&Z.instanceColor&&(Ae=Z.instanceColor)),Ae!==void 0){const Ce=Ae.normalized,we=Ae.itemSize,Ye=t.get(Ae);if(Ye===void 0)continue;const Ne=Ye.buffer,Ge=Ye.type,gt=Ye.bytesPerElement,Et=n.isWebGL2===!0&&(Ge===r.INT||Ge===r.UNSIGNED_INT||Ae.gpuType===zd);if(Ae.isInterleavedBufferAttribute){const Xe=Ae.data,k=Xe.stride,Me=Ae.offset;if(Xe.isInstancedInterleavedBuffer){for(let le=0;le<oe.locationSize;le++)R(oe.location+le,Xe.meshPerAttribute);Z.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=Xe.meshPerAttribute*Xe.count)}else for(let le=0;le<oe.locationSize;le++)M(oe.location+le);r.bindBuffer(r.ARRAY_BUFFER,Ne);for(let le=0;le<oe.locationSize;le++)U(oe.location+le,we/oe.locationSize,Ge,Ce,k*gt,(Me+we/oe.locationSize*le)*gt,Et)}else{if(Ae.isInstancedBufferAttribute){for(let Xe=0;Xe<oe.locationSize;Xe++)R(oe.location+Xe,Ae.meshPerAttribute);Z.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=Ae.meshPerAttribute*Ae.count)}else for(let Xe=0;Xe<oe.locationSize;Xe++)M(oe.location+Xe);r.bindBuffer(r.ARRAY_BUFFER,Ne);for(let Xe=0;Xe<oe.locationSize;Xe++)U(oe.location+Xe,we/oe.locationSize,Ge,Ce,we*gt,we/oe.locationSize*Xe*gt,Et)}}else if(ue!==void 0){const Ce=ue[q];if(Ce!==void 0)switch(Ce.length){case 2:r.vertexAttrib2fv(oe.location,Ce);break;case 3:r.vertexAttrib3fv(oe.location,Ce);break;case 4:r.vertexAttrib4fv(oe.location,Ce);break;default:r.vertexAttrib1fv(oe.location,Ce)}}}}O()}function A(){he();for(const Z in o){const W=o[Z];for(const ie in W){const ae=W[ie];for(const ce in ae)v(ae[ce].object),delete ae[ce];delete W[ie]}delete o[Z]}}function L(Z){if(o[Z.id]===void 0)return;const W=o[Z.id];for(const ie in W){const ae=W[ie];for(const ce in ae)v(ae[ce].object),delete ae[ce];delete W[ie]}delete o[Z.id]}function Q(Z){for(const W in o){const ie=o[W];if(ie[Z.id]===void 0)continue;const ae=ie[Z.id];for(const ce in ae)v(ae[ce].object),delete ae[ce];delete ie[Z.id]}}function he(){$(),f=!0,u!==l&&(u=l,g(u.object))}function $(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:p,reset:he,resetDefaultState:$,dispose:A,releaseStatesOfGeometry:L,releaseStatesOfProgram:Q,initAttributes:S,enableAttribute:M,disableUnusedAttributes:O}}function tI(r,e,t,n){const i=n.isWebGL2;let s;function a(u){s=u}function o(u,f){r.drawArrays(s,u,f),t.update(f,s,1)}function l(u,f,p){if(p===0)return;let d,g;if(i)d=r,g="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[g](s,u,f,p),t.update(f,s,p)}this.setMode=a,this.render=o,this.renderInstances=l}function nI(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=a||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=r.getParameter(r.MAX_TEXTURE_SIZE),v=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),b=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),S=d>0,M=a||e.has("OES_texture_float"),R=S&&M,O=a?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:i,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:d,maxTextureSize:g,maxCubemapSize:v,maxAttributes:b,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:T,vertexTextures:S,floatFragmentTextures:M,floatVertexTextures:R,maxSamples:O}}function iI(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Ar,o=new ft,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(p,d){const g=p.length!==0||d||n!==0||i;return i=d,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,d){t=f(p,d,0)},this.setState=function(p,d,g){const v=p.clippingPlanes,b=p.clipIntersection,y=p.clipShadows,_=r.get(p);if(!i||v===null||v.length===0||s&&!y)s?f(null):u();else{const T=s?0:n,S=T*4;let M=_.clippingState||null;l.value=M,M=f(v,d,S,g);for(let R=0;R!==S;++R)M[R]=t[R];_.clippingState=M,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=T}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,d,g,v){const b=p!==null?p.length:0;let y=null;if(b!==0){if(y=l.value,v!==!0||y===null){const _=g+b*4,T=d.matrixWorldInverse;o.getNormalMatrix(T),(y===null||y.length<_)&&(y=new Float32Array(_));for(let S=0,M=g;S!==b;++S,M+=4)a.copy(p[S]).applyMatrix4(T,o),a.normal.toArray(y,M),y[M+3]=a.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,y}}function rI(r){let e=new WeakMap;function t(a,o){return o===Ro?a.mapping=hr:o===Io&&(a.mapping=Ir),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Ro||o===Io)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const u=new b0(l.height/2);return u.fromEquirectangularTexture(r,a),e.set(a,u),a.addEventListener("dispose",i),t(u.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class ru extends nu{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=u*this.view.offsetX,a=s+u*this.view.width,o-=f*this.view.offsetY,l=o-f*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const ba=4,Fg=[.125,.215,.35,.446,.526,.582],_s=20,Af=new ru,Bg=new Le;let Pf=null;const ms=(1+Math.sqrt(5))/2,da=1/ms,zg=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,ms,da),new N(0,ms,-da),new N(da,0,ms),new N(-da,0,ms),new N(ms,da,0),new N(-ms,da,0)];class wd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Pf=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Vg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Hg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pf),e.scissorTest=!1,hl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===hr||e.mapping===Ir?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pf=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Zt,minFilter:Zt,generateMipmaps:!1,type:Ca,format:ei,colorSpace:_i,depthBuffer:!1},i=kg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=kg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=sI(s)),this._blurMaterial=aI(s,e,t)}return i}_compileMaterial(e){const t=new mn(this._lodPlanes[0],e);this._renderer.compile(t,Af)}_sceneToCubeUV(e,t,n,i){const o=new pn(90,1,t,n),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,d=f.toneMapping;f.getClearColor(Bg),f.toneMapping=or,f.autoClear=!1;const g=new Ur({name:"PMREM.Background",side:Ln,depthWrite:!1,depthTest:!1}),v=new mn(new Is,g);let b=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,b=!0):(g.color.copy(Bg),b=!0);for(let _=0;_<6;_++){const T=_%3;T===0?(o.up.set(0,l[_],0),o.lookAt(u[_],0,0)):T===1?(o.up.set(0,0,l[_]),o.lookAt(0,u[_],0)):(o.up.set(0,l[_],0),o.lookAt(0,0,u[_]));const S=this._cubeSize;hl(i,T*S,_>2?S:0,S,S),f.setRenderTarget(i),b&&f.render(v,o),f.render(e,o)}v.geometry.dispose(),v.material.dispose(),f.toneMapping=d,f.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===hr||e.mapping===Ir;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Vg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Hg());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new mn(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;hl(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,Af)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=zg[(i-1)%zg.length];this._blur(e,i-1,i,s,a)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,o){const l=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new mn(this._lodPlanes[i],u),d=u.uniforms,g=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*_s-1),b=s/v,y=isFinite(s)?1+Math.floor(f*b):_s;y>_s&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${_s}`);const _=[];let T=0;for(let U=0;U<_s;++U){const B=U/b,A=Math.exp(-B*B/2);_.push(A),U===0?T+=A:U<y&&(T+=2*A)}for(let U=0;U<_.length;U++)_[U]=_[U]/T;d.envMap.value=e.texture,d.samples.value=y,d.weights.value=_,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:S}=this;d.dTheta.value=v,d.mipInt.value=S-n;const M=this._sizeLods[i],R=3*M*(i>S-ba?i-S+ba:0),O=4*(this._cubeSize-M);hl(t,R,O,3*M,2*M),l.setRenderTarget(t),l.render(p,Af)}}function sI(r){const e=[],t=[],n=[];let i=r;const s=r-ba+1+Fg.length;for(let a=0;a<s;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>r-ba?l=Fg[a-r+ba-1]:a===0&&(l=0),n.push(l);const u=1/(o-2),f=-u,p=1+u,d=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,v=6,b=3,y=2,_=1,T=new Float32Array(b*v*g),S=new Float32Array(y*v*g),M=new Float32Array(_*v*g);for(let O=0;O<g;O++){const U=O%3*2/3-1,B=O>2?0:-1,A=[U,B,0,U+2/3,B,0,U+2/3,B+1,0,U,B,0,U+2/3,B+1,0,U,B+1,0];T.set(A,b*v*O),S.set(d,y*v*O);const L=[O,O,O,O,O,O];M.set(L,_*v*O)}const R=new pt;R.setAttribute("position",new Lt(T,b)),R.setAttribute("uv",new Lt(S,y)),R.setAttribute("faceIndex",new Lt(M,_)),e.push(R),i>ba&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function kg(r,e,t){const n=new vi(r,e,t);return n.texture.mapping=Da,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function hl(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function aI(r,e,t){const n=new Float32Array(_s),i=new N(0,1,0);return new zi({name:"SphericalGaussianBlur",defines:{n:_s,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function Hg(){return new zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function Vg(){return new zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function Jd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function oI(r){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,u=l===Ro||l===Io,f=l===hr||l===Ir;if(u||f)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let p=e.get(o);return t===null&&(t=new wd(r)),p=u?t.fromEquirectangular(o,p):t.fromCubemap(o,p),e.set(o,p),p.texture}else{if(e.has(o))return e.get(o).texture;{const p=o.image;if(u&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new wd(r));const d=u?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,d),o.addEventListener("dispose",s),d.texture}else return null}}}return o}function i(o){let l=0;const u=6;for(let f=0;f<u;f++)o[f]!==void 0&&l++;return l===u}function s(o){const l=o.target;l.removeEventListener("dispose",s);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function cI(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function lI(r,e,t,n){const i={},s=new WeakMap;function a(p){const d=p.target;d.index!==null&&e.remove(d.index);for(const v in d.attributes)e.remove(d.attributes[v]);for(const v in d.morphAttributes){const b=d.morphAttributes[v];for(let y=0,_=b.length;y<_;y++)e.remove(b[y])}d.removeEventListener("dispose",a),delete i[d.id];const g=s.get(d);g&&(e.remove(g),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(p,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function l(p){const d=p.attributes;for(const v in d)e.update(d[v],r.ARRAY_BUFFER);const g=p.morphAttributes;for(const v in g){const b=g[v];for(let y=0,_=b.length;y<_;y++)e.update(b[y],r.ARRAY_BUFFER)}}function u(p){const d=[],g=p.index,v=p.attributes.position;let b=0;if(g!==null){const T=g.array;b=g.version;for(let S=0,M=T.length;S<M;S+=3){const R=T[S+0],O=T[S+1],U=T[S+2];d.push(R,O,O,U,U,R)}}else if(v!==void 0){const T=v.array;b=v.version;for(let S=0,M=T.length/3-1;S<M;S+=3){const R=S+0,O=S+1,U=S+2;d.push(R,O,O,U,U,R)}}else return;const y=new(p0(d)?Zd:$d)(d,1);y.version=b;const _=s.get(p);_&&e.remove(_),s.set(p,y)}function f(p){const d=s.get(p);if(d){const g=p.index;g!==null&&d.version<g.version&&u(p)}else u(p);return s.get(p)}return{get:o,update:l,getWireframeAttribute:f}}function uI(r,e,t,n){const i=n.isWebGL2;let s;function a(d){s=d}let o,l;function u(d){o=d.type,l=d.bytesPerElement}function f(d,g){r.drawElements(s,g,o,d*l),t.update(g,s,1)}function p(d,g,v){if(v===0)return;let b,y;if(i)b=r,y="drawElementsInstanced";else if(b=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",b===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}b[y](s,g,o,d*l,v),t.update(g,s,v)}this.setMode=a,this.setIndex=u,this.render=f,this.renderInstances=p}function hI(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=o*(s/3);break;case r.LINES:t.lines+=o*(s/2);break;case r.LINE_STRIP:t.lines+=o*(s-1);break;case r.LINE_LOOP:t.lines+=o*s;break;case r.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function fI(r,e){return r[0]-e[0]}function dI(r,e){return Math.abs(e[1])-Math.abs(r[1])}function pI(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,a=new Ct,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(u,f,p){const d=u.morphTargetInfluences;if(e.isWebGL2===!0){const g=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,v=g!==void 0?g.length:0;let b=s.get(f);if(b===void 0||b.count!==v){let Z=function(){he.dispose(),s.delete(f),f.removeEventListener("dispose",Z)};b!==void 0&&b.texture.dispose();const T=f.morphAttributes.position!==void 0,S=f.morphAttributes.normal!==void 0,M=f.morphAttributes.color!==void 0,R=f.morphAttributes.position||[],O=f.morphAttributes.normal||[],U=f.morphAttributes.color||[];let B=0;T===!0&&(B=1),S===!0&&(B=2),M===!0&&(B=3);let A=f.attributes.position.count*B,L=1;A>e.maxTextureSize&&(L=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const Q=new Float32Array(A*L*4*v),he=new eu(Q,A,L,v);he.type=Ui,he.needsUpdate=!0;const $=B*4;for(let W=0;W<v;W++){const ie=R[W],ae=O[W],ce=U[W],de=A*L*4*W;for(let ue=0;ue<ie.count;ue++){const q=ue*$;T===!0&&(a.fromBufferAttribute(ie,ue),Q[de+q+0]=a.x,Q[de+q+1]=a.y,Q[de+q+2]=a.z,Q[de+q+3]=0),S===!0&&(a.fromBufferAttribute(ae,ue),Q[de+q+4]=a.x,Q[de+q+5]=a.y,Q[de+q+6]=a.z,Q[de+q+7]=0),M===!0&&(a.fromBufferAttribute(ce,ue),Q[de+q+8]=a.x,Q[de+q+9]=a.y,Q[de+q+10]=a.z,Q[de+q+11]=ce.itemSize===4?a.w:1)}}b={count:v,texture:he,size:new fe(A,L)},s.set(f,b),f.addEventListener("dispose",Z)}let y=0;for(let T=0;T<d.length;T++)y+=d[T];const _=f.morphTargetsRelative?1:1-y;p.getUniforms().setValue(r,"morphTargetBaseInfluence",_),p.getUniforms().setValue(r,"morphTargetInfluences",d),p.getUniforms().setValue(r,"morphTargetsTexture",b.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",b.size)}else{const g=d===void 0?0:d.length;let v=n[f.id];if(v===void 0||v.length!==g){v=[];for(let S=0;S<g;S++)v[S]=[S,0];n[f.id]=v}for(let S=0;S<g;S++){const M=v[S];M[0]=S,M[1]=d[S]}v.sort(dI);for(let S=0;S<8;S++)S<g&&v[S][1]?(o[S][0]=v[S][0],o[S][1]=v[S][1]):(o[S][0]=Number.MAX_SAFE_INTEGER,o[S][1]=0);o.sort(fI);const b=f.morphAttributes.position,y=f.morphAttributes.normal;let _=0;for(let S=0;S<8;S++){const M=o[S],R=M[0],O=M[1];R!==Number.MAX_SAFE_INTEGER&&O?(b&&f.getAttribute("morphTarget"+S)!==b[R]&&f.setAttribute("morphTarget"+S,b[R]),y&&f.getAttribute("morphNormal"+S)!==y[R]&&f.setAttribute("morphNormal"+S,y[R]),i[S]=O,_+=O):(b&&f.hasAttribute("morphTarget"+S)===!0&&f.deleteAttribute("morphTarget"+S),y&&f.hasAttribute("morphNormal"+S)===!0&&f.deleteAttribute("morphNormal"+S),i[S]=0)}const T=f.morphTargetsRelative?1:1-_;p.getUniforms().setValue(r,"morphTargetBaseInfluence",T),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function mI(r,e,t,n){let i=new WeakMap;function s(l){const u=n.render.frame,f=l.geometry,p=e.get(l,f);if(i.get(p)!==u&&(e.update(p),i.set(p,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==u&&(t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER),i.set(l,u))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==u&&(d.update(),i.set(d,u))}return p}function a(){i=new WeakMap}function o(l){const u=l.target;u.removeEventListener("dispose",o),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:s,dispose:a}}const M0=new en,T0=new eu,w0=new Yd,E0=new Qo,Gg=[],Wg=[],Xg=new Float32Array(16),jg=new Float32Array(9),qg=new Float32Array(4);function Ua(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Gg[i];if(s===void 0&&(s=new Float32Array(i),Gg[i]=s),e!==0){n.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function un(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function hn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function su(r,e){let t=Wg[e];t===void 0&&(t=new Int32Array(e),Wg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function gI(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function _I(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2fv(this.addr,e),hn(t,e)}}function vI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(un(t,e))return;r.uniform3fv(this.addr,e),hn(t,e)}}function yI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4fv(this.addr,e),hn(t,e)}}function xI(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;qg.set(n),r.uniformMatrix2fv(this.addr,!1,qg),hn(t,n)}}function bI(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;jg.set(n),r.uniformMatrix3fv(this.addr,!1,jg),hn(t,n)}}function SI(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),hn(t,e)}else{if(un(t,n))return;Xg.set(n),r.uniformMatrix4fv(this.addr,!1,Xg),hn(t,n)}}function MI(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function TI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2iv(this.addr,e),hn(t,e)}}function wI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(un(t,e))return;r.uniform3iv(this.addr,e),hn(t,e)}}function EI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4iv(this.addr,e),hn(t,e)}}function AI(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function PI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2uiv(this.addr,e),hn(t,e)}}function CI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(un(t,e))return;r.uniform3uiv(this.addr,e),hn(t,e)}}function RI(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4uiv(this.addr,e),hn(t,e)}}function II(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||M0,i)}function LI(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||w0,i)}function DI(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||E0,i)}function OI(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||T0,i)}function UI(r){switch(r){case 5126:return gI;case 35664:return _I;case 35665:return vI;case 35666:return yI;case 35674:return xI;case 35675:return bI;case 35676:return SI;case 5124:case 35670:return MI;case 35667:case 35671:return TI;case 35668:case 35672:return wI;case 35669:case 35673:return EI;case 5125:return AI;case 36294:return PI;case 36295:return CI;case 36296:return RI;case 35678:case 36198:case 36298:case 36306:case 35682:return II;case 35679:case 36299:case 36307:return LI;case 35680:case 36300:case 36308:case 36293:return DI;case 36289:case 36303:case 36311:case 36292:return OI}}function NI(r,e){r.uniform1fv(this.addr,e)}function FI(r,e){const t=Ua(e,this.size,2);r.uniform2fv(this.addr,t)}function BI(r,e){const t=Ua(e,this.size,3);r.uniform3fv(this.addr,t)}function zI(r,e){const t=Ua(e,this.size,4);r.uniform4fv(this.addr,t)}function kI(r,e){const t=Ua(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function HI(r,e){const t=Ua(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function VI(r,e){const t=Ua(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function GI(r,e){r.uniform1iv(this.addr,e)}function WI(r,e){r.uniform2iv(this.addr,e)}function XI(r,e){r.uniform3iv(this.addr,e)}function jI(r,e){r.uniform4iv(this.addr,e)}function qI(r,e){r.uniform1uiv(this.addr,e)}function YI(r,e){r.uniform2uiv(this.addr,e)}function $I(r,e){r.uniform3uiv(this.addr,e)}function ZI(r,e){r.uniform4uiv(this.addr,e)}function JI(r,e,t){const n=this.cache,i=e.length,s=su(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||M0,s[a])}function KI(r,e,t){const n=this.cache,i=e.length,s=su(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||w0,s[a])}function QI(r,e,t){const n=this.cache,i=e.length,s=su(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||E0,s[a])}function eL(r,e,t){const n=this.cache,i=e.length,s=su(t,i);un(n,s)||(r.uniform1iv(this.addr,s),hn(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||T0,s[a])}function tL(r){switch(r){case 5126:return NI;case 35664:return FI;case 35665:return BI;case 35666:return zI;case 35674:return kI;case 35675:return HI;case 35676:return VI;case 5124:case 35670:return GI;case 35667:case 35671:return WI;case 35668:case 35672:return XI;case 35669:case 35673:return jI;case 5125:return qI;case 36294:return YI;case 36295:return $I;case 36296:return ZI;case 35678:case 36198:case 36298:case 36306:case 35682:return JI;case 35679:case 36299:case 36307:return KI;case 35680:case 36300:case 36308:case 36293:return QI;case 36289:case 36303:case 36311:case 36292:return eL}}class nL{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=UI(t.type)}}class iL{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=tL(t.type)}}class rL{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const o=i[s];o.setValue(e,t[o.id],n)}}}const Cf=/(\w+)(\])?(\[|\.)?/g;function Yg(r,e){r.seq.push(e),r.map[e.id]=e}function sL(r,e,t){const n=r.name,i=n.length;for(Cf.lastIndex=0;;){const s=Cf.exec(n),a=Cf.lastIndex;let o=s[1];const l=s[2]==="]",u=s[3];if(l&&(o=o|0),u===void 0||u==="["&&a+2===i){Yg(t,u===void 0?new nL(o,r,e):new iL(o,r,e));break}else{let p=t.map[o];p===void 0&&(p=new rL(o),Yg(t,p)),t=p}}}class Hl{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);sL(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function $g(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let aL=0;function oL(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function cL(r){switch(r){case _i:return["Linear","( value )"];case Bt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function Zg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+oL(r.getShaderSource(e),a)}else return i}function lL(r,e){const t=cL(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function uL(r,e){let t;switch(e){case zv:t="Linear";break;case kv:t="Reinhard";break;case Hv:t="OptimizedCineon";break;case Fd:t="ACESFilmic";break;case Vv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function hL(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(So).join(`
`)}function fL(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function dL(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let o=1;s.type===r.FLOAT_MAT2&&(o=2),s.type===r.FLOAT_MAT3&&(o=3),s.type===r.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:o}}return t}function So(r){return r!==""}function Jg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Kg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const pL=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ed(r){return r.replace(pL,gL)}const mL=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function gL(r,e){let t=tt[e];if(t===void 0){const n=mL.get(e);if(n!==void 0)t=tt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Ed(t)}const _L=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qg(r){return r.replace(_L,vL)}function vL(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function e_(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function yL(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Od?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Zl?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Li&&(e="SHADOWMAP_TYPE_VSM"),e}function xL(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case hr:case Ir:e="ENVMAP_TYPE_CUBE";break;case Da:e="ENVMAP_TYPE_CUBE_UV";break}return e}function bL(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ir:e="ENVMAP_MODE_REFRACTION";break}return e}function SL(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Zo:e="ENVMAP_BLENDING_MULTIPLY";break;case Fv:e="ENVMAP_BLENDING_MIX";break;case Bv:e="ENVMAP_BLENDING_ADD";break}return e}function ML(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function TL(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=yL(t),u=xL(t),f=bL(t),p=SL(t),d=ML(t),g=t.isWebGL2?"":hL(t),v=fL(s),b=i.createProgram();let y,_,T=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(So).join(`
`),y.length>0&&(y+=`
`),_=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(So).join(`
`),_.length>0&&(_+=`
`)):(y=[e_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(So).join(`
`),_=[g,e_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==or?"#define TONE_MAPPING":"",t.toneMapping!==or?tt.tonemapping_pars_fragment:"",t.toneMapping!==or?uL("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",tt.colorspace_pars_fragment,lL("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(So).join(`
`)),a=Ed(a),a=Jg(a,t),a=Kg(a,t),o=Ed(o),o=Jg(o,t),o=Kg(o,t),a=Qg(a),o=Qg(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(T=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",t.glslVersion===Md?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Md?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const S=T+y+a,M=T+_+o,R=$g(i,i.VERTEX_SHADER,S),O=$g(i,i.FRAGMENT_SHADER,M);if(i.attachShader(b,R),i.attachShader(b,O),t.index0AttributeName!==void 0?i.bindAttribLocation(b,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b),r.debug.checkShaderErrors){const A=i.getProgramInfoLog(b).trim(),L=i.getShaderInfoLog(R).trim(),Q=i.getShaderInfoLog(O).trim();let he=!0,$=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(he=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,b,R,O);else{const Z=Zg(i,R,"vertex"),W=Zg(i,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Program Info Log: `+A+`
`+Z+`
`+W)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(L===""||Q==="")&&($=!1);$&&(this.diagnostics={runnable:he,programLog:A,vertexShader:{log:L,prefix:y},fragmentShader:{log:Q,prefix:_}})}i.deleteShader(R),i.deleteShader(O);let U;this.getUniforms=function(){return U===void 0&&(U=new Hl(i,b)),U};let B;return this.getAttributes=function(){return B===void 0&&(B=dL(i,b)),B},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=aL++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=R,this.fragmentShader=O,this}let wL=0;class EL{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new AL(e),t.set(e,n)),n}}class AL{constructor(e){this.id=wL++,this.code=e,this.usedTimes=0}}function PL(r,e,t,n,i,s,a){const o=new tu,l=new EL,u=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,d=i.vertexTextures;let g=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(A){return A===0?"uv":`uv${A}`}function y(A,L,Q,he,$){const Z=he.fog,W=$.geometry,ie=A.isMeshStandardMaterial?he.environment:null,ae=(A.isMeshStandardMaterial?t:e).get(A.envMap||ie),ce=ae&&ae.mapping===Da?ae.image.height:null,de=v[A.type];A.precision!==null&&(g=i.getMaxPrecision(A.precision),g!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",g,"instead."));const ue=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,q=ue!==void 0?ue.length:0;let oe=0;W.morphAttributes.position!==void 0&&(oe=1),W.morphAttributes.normal!==void 0&&(oe=2),W.morphAttributes.color!==void 0&&(oe=3);let Ae,Ce,we,Ye;if(de){const vt=gi[de];Ae=vt.vertexShader,Ce=vt.fragmentShader}else Ae=A.vertexShader,Ce=A.fragmentShader,l.update(A),we=l.getVertexShaderID(A),Ye=l.getFragmentShaderID(A);const Ne=r.getRenderTarget(),Ge=$.isInstancedMesh===!0,gt=!!A.map,Et=!!A.matcap,Xe=!!ae,k=!!A.aoMap,Me=!!A.lightMap,le=!!A.bumpMap,xe=!!A.normalMap,pe=!!A.displacementMap,Ve=!!A.emissiveMap,Ie=!!A.metalnessMap,Ue=!!A.roughnessMap,et=A.anisotropy>0,dt=A.clearcoat>0,xt=A.iridescence>0,F=A.sheen>0,P=A.transmission>0,J=et&&!!A.anisotropyMap,ve=dt&&!!A.clearcoatMap,me=dt&&!!A.clearcoatNormalMap,ye=dt&&!!A.clearcoatRoughnessMap,He=xt&&!!A.iridescenceMap,be=xt&&!!A.iridescenceThicknessMap,K=F&&!!A.sheenColorMap,qe=F&&!!A.sheenRoughnessMap,De=!!A.specularMap,je=!!A.specularColorMap,Fe=!!A.specularIntensityMap,Be=P&&!!A.transmissionMap,ct=P&&!!A.thicknessMap,Mt=!!A.gradientMap,V=!!A.alphaMap,Te=A.alphaTest>0,ee=!!A.alphaHash,Se=!!A.extensions,Re=!!W.attributes.uv1,_t=!!W.attributes.uv2,Rt=!!W.attributes.uv3;let Ht=or;return A.toneMapped&&(Ne===null||Ne.isXRRenderTarget===!0)&&(Ht=r.toneMapping),{isWebGL2:f,shaderID:de,shaderType:A.type,shaderName:A.name,vertexShader:Ae,fragmentShader:Ce,defines:A.defines,customVertexShaderID:we,customFragmentShaderID:Ye,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:g,instancing:Ge,instancingColor:Ge&&$.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:Ne===null?r.outputColorSpace:Ne.isXRRenderTarget===!0?Ne.texture.colorSpace:_i,map:gt,matcap:Et,envMap:Xe,envMapMode:Xe&&ae.mapping,envMapCubeUVHeight:ce,aoMap:k,lightMap:Me,bumpMap:le,normalMap:xe,displacementMap:d&&pe,emissiveMap:Ve,normalMapObjectSpace:xe&&A.normalMapType===i0,normalMapTangentSpace:xe&&A.normalMapType===Or,metalnessMap:Ie,roughnessMap:Ue,anisotropy:et,anisotropyMap:J,clearcoat:dt,clearcoatMap:ve,clearcoatNormalMap:me,clearcoatRoughnessMap:ye,iridescence:xt,iridescenceMap:He,iridescenceThicknessMap:be,sheen:F,sheenColorMap:K,sheenRoughnessMap:qe,specularMap:De,specularColorMap:je,specularIntensityMap:Fe,transmission:P,transmissionMap:Be,thicknessMap:ct,gradientMap:Mt,opaque:A.transparent===!1&&A.blending===Ts,alphaMap:V,alphaTest:Te,alphaHash:ee,combine:A.combine,mapUv:gt&&b(A.map.channel),aoMapUv:k&&b(A.aoMap.channel),lightMapUv:Me&&b(A.lightMap.channel),bumpMapUv:le&&b(A.bumpMap.channel),normalMapUv:xe&&b(A.normalMap.channel),displacementMapUv:pe&&b(A.displacementMap.channel),emissiveMapUv:Ve&&b(A.emissiveMap.channel),metalnessMapUv:Ie&&b(A.metalnessMap.channel),roughnessMapUv:Ue&&b(A.roughnessMap.channel),anisotropyMapUv:J&&b(A.anisotropyMap.channel),clearcoatMapUv:ve&&b(A.clearcoatMap.channel),clearcoatNormalMapUv:me&&b(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ye&&b(A.clearcoatRoughnessMap.channel),iridescenceMapUv:He&&b(A.iridescenceMap.channel),iridescenceThicknessMapUv:be&&b(A.iridescenceThicknessMap.channel),sheenColorMapUv:K&&b(A.sheenColorMap.channel),sheenRoughnessMapUv:qe&&b(A.sheenRoughnessMap.channel),specularMapUv:De&&b(A.specularMap.channel),specularColorMapUv:je&&b(A.specularColorMap.channel),specularIntensityMapUv:Fe&&b(A.specularIntensityMap.channel),transmissionMapUv:Be&&b(A.transmissionMap.channel),thicknessMapUv:ct&&b(A.thicknessMap.channel),alphaMapUv:V&&b(A.alphaMap.channel),vertexTangents:!!W.attributes.tangent&&(xe||et),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUv1s:Re,vertexUv2s:_t,vertexUv3s:Rt,pointsUvs:$.isPoints===!0&&!!W.attributes.uv&&(gt||V),fog:!!Z,useFog:A.fog===!0,fogExp2:Z&&Z.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:$.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:q,morphTextureStride:oe,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:r.shadowMap.enabled&&Q.length>0,shadowMapType:r.shadowMap.type,toneMapping:Ht,useLegacyLights:r._useLegacyLights,decodeVideoTexture:gt&&A.map.isVideoTexture===!0&&A.map.colorSpace===Bt,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Oi,flipSided:A.side===Ln,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:Se&&A.extensions.derivatives===!0,extensionFragDepth:Se&&A.extensions.fragDepth===!0,extensionDrawBuffers:Se&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:Se&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function _(A){const L=[];if(A.shaderID?L.push(A.shaderID):(L.push(A.customVertexShaderID),L.push(A.customFragmentShaderID)),A.defines!==void 0)for(const Q in A.defines)L.push(Q),L.push(A.defines[Q]);return A.isRawShaderMaterial===!1&&(T(L,A),S(L,A),L.push(r.outputColorSpace)),L.push(A.customProgramCacheKey),L.join()}function T(A,L){A.push(L.precision),A.push(L.outputColorSpace),A.push(L.envMapMode),A.push(L.envMapCubeUVHeight),A.push(L.mapUv),A.push(L.alphaMapUv),A.push(L.lightMapUv),A.push(L.aoMapUv),A.push(L.bumpMapUv),A.push(L.normalMapUv),A.push(L.displacementMapUv),A.push(L.emissiveMapUv),A.push(L.metalnessMapUv),A.push(L.roughnessMapUv),A.push(L.anisotropyMapUv),A.push(L.clearcoatMapUv),A.push(L.clearcoatNormalMapUv),A.push(L.clearcoatRoughnessMapUv),A.push(L.iridescenceMapUv),A.push(L.iridescenceThicknessMapUv),A.push(L.sheenColorMapUv),A.push(L.sheenRoughnessMapUv),A.push(L.specularMapUv),A.push(L.specularColorMapUv),A.push(L.specularIntensityMapUv),A.push(L.transmissionMapUv),A.push(L.thicknessMapUv),A.push(L.combine),A.push(L.fogExp2),A.push(L.sizeAttenuation),A.push(L.morphTargetsCount),A.push(L.morphAttributeCount),A.push(L.numDirLights),A.push(L.numPointLights),A.push(L.numSpotLights),A.push(L.numSpotLightMaps),A.push(L.numHemiLights),A.push(L.numRectAreaLights),A.push(L.numDirLightShadows),A.push(L.numPointLightShadows),A.push(L.numSpotLightShadows),A.push(L.numSpotLightShadowsWithMaps),A.push(L.shadowMapType),A.push(L.toneMapping),A.push(L.numClippingPlanes),A.push(L.numClipIntersection),A.push(L.depthPacking)}function S(A,L){o.disableAll(),L.isWebGL2&&o.enable(0),L.supportsVertexTextures&&o.enable(1),L.instancing&&o.enable(2),L.instancingColor&&o.enable(3),L.matcap&&o.enable(4),L.envMap&&o.enable(5),L.normalMapObjectSpace&&o.enable(6),L.normalMapTangentSpace&&o.enable(7),L.clearcoat&&o.enable(8),L.iridescence&&o.enable(9),L.alphaTest&&o.enable(10),L.vertexColors&&o.enable(11),L.vertexAlphas&&o.enable(12),L.vertexUv1s&&o.enable(13),L.vertexUv2s&&o.enable(14),L.vertexUv3s&&o.enable(15),L.vertexTangents&&o.enable(16),L.anisotropy&&o.enable(17),A.push(o.mask),o.disableAll(),L.fog&&o.enable(0),L.useFog&&o.enable(1),L.flatShading&&o.enable(2),L.logarithmicDepthBuffer&&o.enable(3),L.skinning&&o.enable(4),L.morphTargets&&o.enable(5),L.morphNormals&&o.enable(6),L.morphColors&&o.enable(7),L.premultipliedAlpha&&o.enable(8),L.shadowMapEnabled&&o.enable(9),L.useLegacyLights&&o.enable(10),L.doubleSided&&o.enable(11),L.flipSided&&o.enable(12),L.useDepthPacking&&o.enable(13),L.dithering&&o.enable(14),L.transmission&&o.enable(15),L.sheen&&o.enable(16),L.opaque&&o.enable(17),L.pointsUvs&&o.enable(18),L.decodeVideoTexture&&o.enable(19),A.push(o.mask)}function M(A){const L=v[A.type];let Q;if(L){const he=gi[L];Q=y0.clone(he.uniforms)}else Q=A.uniforms;return Q}function R(A,L){let Q;for(let he=0,$=u.length;he<$;he++){const Z=u[he];if(Z.cacheKey===L){Q=Z,++Q.usedTimes;break}}return Q===void 0&&(Q=new TL(r,L,A,s),u.push(Q)),Q}function O(A){if(--A.usedTimes===0){const L=u.indexOf(A);u[L]=u[u.length-1],u.pop(),A.destroy()}}function U(A){l.remove(A)}function B(){l.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:M,acquireProgram:R,releaseProgram:O,releaseShaderCache:U,programs:u,dispose:B}}function CL(){let r=new WeakMap;function e(s){let a=r.get(s);return a===void 0&&(a={},r.set(s,a)),a}function t(s){r.delete(s)}function n(s,a,o){r.get(s)[a]=o}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function RL(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function t_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function n_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(p,d,g,v,b,y){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:d,material:g,groupOrder:v,renderOrder:p.renderOrder,z:b,group:y},r[e]=_):(_.id=p.id,_.object=p,_.geometry=d,_.material=g,_.groupOrder=v,_.renderOrder=p.renderOrder,_.z=b,_.group=y),e++,_}function o(p,d,g,v,b,y){const _=a(p,d,g,v,b,y);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function l(p,d,g,v,b,y){const _=a(p,d,g,v,b,y);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function u(p,d){t.length>1&&t.sort(p||RL),n.length>1&&n.sort(d||t_),i.length>1&&i.sort(d||t_)}function f(){for(let p=e,d=r.length;p<d;p++){const g=r[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:o,unshift:l,finish:f,sort:u}}function IL(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new n_,r.set(n,[a])):i>=s.length?(a=new n_,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function LL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Le};break;case"SpotLight":t={position:new N,direction:new N,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new N,halfWidth:new N,halfHeight:new N};break}return r[e.id]=t,t}}}function DL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let OL=0;function UL(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function NL(r,e){const t=new LL,n=DL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)i.probe.push(new N);const s=new N,a=new it,o=new it;function l(f,p){let d=0,g=0,v=0;for(let Q=0;Q<9;Q++)i.probe[Q].set(0,0,0);let b=0,y=0,_=0,T=0,S=0,M=0,R=0,O=0,U=0,B=0;f.sort(UL);const A=p===!0?Math.PI:1;for(let Q=0,he=f.length;Q<he;Q++){const $=f[Q],Z=$.color,W=$.intensity,ie=$.distance,ae=$.shadow&&$.shadow.map?$.shadow.map.texture:null;if($.isAmbientLight)d+=Z.r*W*A,g+=Z.g*W*A,v+=Z.b*W*A;else if($.isLightProbe)for(let ce=0;ce<9;ce++)i.probe[ce].addScaledVector($.sh.coefficients[ce],W);else if($.isDirectionalLight){const ce=t.get($);if(ce.color.copy($.color).multiplyScalar($.intensity*A),$.castShadow){const de=$.shadow,ue=n.get($);ue.shadowBias=de.bias,ue.shadowNormalBias=de.normalBias,ue.shadowRadius=de.radius,ue.shadowMapSize=de.mapSize,i.directionalShadow[b]=ue,i.directionalShadowMap[b]=ae,i.directionalShadowMatrix[b]=$.shadow.matrix,M++}i.directional[b]=ce,b++}else if($.isSpotLight){const ce=t.get($);ce.position.setFromMatrixPosition($.matrixWorld),ce.color.copy(Z).multiplyScalar(W*A),ce.distance=ie,ce.coneCos=Math.cos($.angle),ce.penumbraCos=Math.cos($.angle*(1-$.penumbra)),ce.decay=$.decay,i.spot[_]=ce;const de=$.shadow;if($.map&&(i.spotLightMap[U]=$.map,U++,de.updateMatrices($),$.castShadow&&B++),i.spotLightMatrix[_]=de.matrix,$.castShadow){const ue=n.get($);ue.shadowBias=de.bias,ue.shadowNormalBias=de.normalBias,ue.shadowRadius=de.radius,ue.shadowMapSize=de.mapSize,i.spotShadow[_]=ue,i.spotShadowMap[_]=ae,O++}_++}else if($.isRectAreaLight){const ce=t.get($);ce.color.copy(Z).multiplyScalar(W),ce.halfWidth.set($.width*.5,0,0),ce.halfHeight.set(0,$.height*.5,0),i.rectArea[T]=ce,T++}else if($.isPointLight){const ce=t.get($);if(ce.color.copy($.color).multiplyScalar($.intensity*A),ce.distance=$.distance,ce.decay=$.decay,$.castShadow){const de=$.shadow,ue=n.get($);ue.shadowBias=de.bias,ue.shadowNormalBias=de.normalBias,ue.shadowRadius=de.radius,ue.shadowMapSize=de.mapSize,ue.shadowCameraNear=de.camera.near,ue.shadowCameraFar=de.camera.far,i.pointShadow[y]=ue,i.pointShadowMap[y]=ae,i.pointShadowMatrix[y]=$.shadow.matrix,R++}i.point[y]=ce,y++}else if($.isHemisphereLight){const ce=t.get($);ce.skyColor.copy($.color).multiplyScalar(W*A),ce.groundColor.copy($.groundColor).multiplyScalar(W*A),i.hemi[S]=ce,S++}}T>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=g,i.ambient[2]=v;const L=i.hash;(L.directionalLength!==b||L.pointLength!==y||L.spotLength!==_||L.rectAreaLength!==T||L.hemiLength!==S||L.numDirectionalShadows!==M||L.numPointShadows!==R||L.numSpotShadows!==O||L.numSpotMaps!==U)&&(i.directional.length=b,i.spot.length=_,i.rectArea.length=T,i.point.length=y,i.hemi.length=S,i.directionalShadow.length=M,i.directionalShadowMap.length=M,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=O,i.spotShadowMap.length=O,i.directionalShadowMatrix.length=M,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=O+U-B,i.spotLightMap.length=U,i.numSpotLightShadowsWithMaps=B,L.directionalLength=b,L.pointLength=y,L.spotLength=_,L.rectAreaLength=T,L.hemiLength=S,L.numDirectionalShadows=M,L.numPointShadows=R,L.numSpotShadows=O,L.numSpotMaps=U,i.version=OL++)}function u(f,p){let d=0,g=0,v=0,b=0,y=0;const _=p.matrixWorldInverse;for(let T=0,S=f.length;T<S;T++){const M=f[T];if(M.isDirectionalLight){const R=i.directional[d];R.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),d++}else if(M.isSpotLight){const R=i.spot[v];R.position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(_),R.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),v++}else if(M.isRectAreaLight){const R=i.rectArea[b];R.position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(_),o.identity(),a.copy(M.matrixWorld),a.premultiply(_),o.extractRotation(a),R.halfWidth.set(M.width*.5,0,0),R.halfHeight.set(0,M.height*.5,0),R.halfWidth.applyMatrix4(o),R.halfHeight.applyMatrix4(o),b++}else if(M.isPointLight){const R=i.point[g];R.position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(_),g++}else if(M.isHemisphereLight){const R=i.hemi[y];R.direction.setFromMatrixPosition(M.matrixWorld),R.direction.transformDirection(_),y++}}}return{setup:l,setupView:u,state:i}}function i_(r,e){const t=new NL(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function a(p){n.push(p)}function o(p){i.push(p)}function l(p){t.setup(n,p)}function u(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:u,pushLight:a,pushShadow:o}}function FL(r,e){let t=new WeakMap;function n(s,a=0){const o=t.get(s);let l;return o===void 0?(l=new i_(r,e),t.set(s,[l])):a>=o.length?(l=new i_(r,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class Kd extends An{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=t0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Qd extends An{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const BL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,zL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kL(r,e,t){let n=new iu;const i=new fe,s=new fe,a=new Ct,o=new Kd({depthPacking:n0}),l=new Qd,u={},f=t.maxTextureSize,p={[ur]:Ln,[Ln]:ur,[Oi]:Oi},d=new zi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:BL,fragmentShader:zL}),g=d.clone();g.defines.HORIZONTAL_PASS=1;const v=new pt;v.setAttribute("position",new Lt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new mn(v,d),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Od;let _=this.type;this.render=function(R,O,U){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||R.length===0)return;const B=r.getRenderTarget(),A=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),Q=r.state;Q.setBlending(ar),Q.buffers.color.setClear(1,1,1,1),Q.buffers.depth.setTest(!0),Q.setScissorTest(!1);const he=_!==Li&&this.type===Li,$=_===Li&&this.type!==Li;for(let Z=0,W=R.length;Z<W;Z++){const ie=R[Z],ae=ie.shadow;if(ae===void 0){console.warn("THREE.WebGLShadowMap:",ie,"has no shadow.");continue}if(ae.autoUpdate===!1&&ae.needsUpdate===!1)continue;i.copy(ae.mapSize);const ce=ae.getFrameExtents();if(i.multiply(ce),s.copy(ae.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/ce.x),i.x=s.x*ce.x,ae.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/ce.y),i.y=s.y*ce.y,ae.mapSize.y=s.y)),ae.map===null||he===!0||$===!0){const ue=this.type!==Li?{minFilter:$t,magFilter:$t}:{};ae.map!==null&&ae.map.dispose(),ae.map=new vi(i.x,i.y,ue),ae.map.texture.name=ie.name+".shadowMap",ae.camera.updateProjectionMatrix()}r.setRenderTarget(ae.map),r.clear();const de=ae.getViewportCount();for(let ue=0;ue<de;ue++){const q=ae.getViewport(ue);a.set(s.x*q.x,s.y*q.y,s.x*q.z,s.y*q.w),Q.viewport(a),ae.updateMatrices(ie,ue),n=ae.getFrustum(),M(O,U,ae.camera,ie,this.type)}ae.isPointLightShadow!==!0&&this.type===Li&&T(ae,U),ae.needsUpdate=!1}_=this.type,y.needsUpdate=!1,r.setRenderTarget(B,A,L)};function T(R,O){const U=e.update(b);d.defines.VSM_SAMPLES!==R.blurSamples&&(d.defines.VSM_SAMPLES=R.blurSamples,g.defines.VSM_SAMPLES=R.blurSamples,d.needsUpdate=!0,g.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new vi(i.x,i.y)),d.uniforms.shadow_pass.value=R.map.texture,d.uniforms.resolution.value=R.mapSize,d.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(O,null,U,d,b,null),g.uniforms.shadow_pass.value=R.mapPass.texture,g.uniforms.resolution.value=R.mapSize,g.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(O,null,U,g,b,null)}function S(R,O,U,B){let A=null;const L=U.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)A=L;else if(A=U.isPointLight===!0?l:o,r.localClippingEnabled&&O.clipShadows===!0&&Array.isArray(O.clippingPlanes)&&O.clippingPlanes.length!==0||O.displacementMap&&O.displacementScale!==0||O.alphaMap&&O.alphaTest>0||O.map&&O.alphaTest>0){const Q=A.uuid,he=O.uuid;let $=u[Q];$===void 0&&($={},u[Q]=$);let Z=$[he];Z===void 0&&(Z=A.clone(),$[he]=Z),A=Z}if(A.visible=O.visible,A.wireframe=O.wireframe,B===Li?A.side=O.shadowSide!==null?O.shadowSide:O.side:A.side=O.shadowSide!==null?O.shadowSide:p[O.side],A.alphaMap=O.alphaMap,A.alphaTest=O.alphaTest,A.map=O.map,A.clipShadows=O.clipShadows,A.clippingPlanes=O.clippingPlanes,A.clipIntersection=O.clipIntersection,A.displacementMap=O.displacementMap,A.displacementScale=O.displacementScale,A.displacementBias=O.displacementBias,A.wireframeLinewidth=O.wireframeLinewidth,A.linewidth=O.linewidth,U.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const Q=r.properties.get(A);Q.light=U}return A}function M(R,O,U,B,A){if(R.visible===!1)return;if(R.layers.test(O.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&A===Li)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,R.matrixWorld);const he=e.update(R),$=R.material;if(Array.isArray($)){const Z=he.groups;for(let W=0,ie=Z.length;W<ie;W++){const ae=Z[W],ce=$[ae.materialIndex];if(ce&&ce.visible){const de=S(R,ce,B,A);r.renderBufferDirect(U,null,he,de,R,ae)}}}else if($.visible){const Z=S(R,$,B,A);r.renderBufferDirect(U,null,he,Z,R,null)}}const Q=R.children;for(let he=0,$=Q.length;he<$;he++)M(Q[he],O,U,B,A)}}function HL(r,e,t){const n=t.isWebGL2;function i(){let V=!1;const Te=new Ct;let ee=null;const Se=new Ct(0,0,0,0);return{setMask:function(Re){ee!==Re&&!V&&(r.colorMask(Re,Re,Re,Re),ee=Re)},setLocked:function(Re){V=Re},setClear:function(Re,_t,Rt,Ht,ri){ri===!0&&(Re*=Ht,_t*=Ht,Rt*=Ht),Te.set(Re,_t,Rt,Ht),Se.equals(Te)===!1&&(r.clearColor(Re,_t,Rt,Ht),Se.copy(Te))},reset:function(){V=!1,ee=null,Se.set(-1,0,0,0)}}}function s(){let V=!1,Te=null,ee=null,Se=null;return{setTest:function(Re){Re?Ne(r.DEPTH_TEST):Ge(r.DEPTH_TEST)},setMask:function(Re){Te!==Re&&!V&&(r.depthMask(Re),Te=Re)},setFunc:function(Re){if(ee!==Re){switch(Re){case Rv:r.depthFunc(r.NEVER);break;case Iv:r.depthFunc(r.ALWAYS);break;case Lv:r.depthFunc(r.LESS);break;case Gl:r.depthFunc(r.LEQUAL);break;case Dv:r.depthFunc(r.EQUAL);break;case Ov:r.depthFunc(r.GEQUAL);break;case Uv:r.depthFunc(r.GREATER);break;case Nv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ee=Re}},setLocked:function(Re){V=Re},setClear:function(Re){Se!==Re&&(r.clearDepth(Re),Se=Re)},reset:function(){V=!1,Te=null,ee=null,Se=null}}}function a(){let V=!1,Te=null,ee=null,Se=null,Re=null,_t=null,Rt=null,Ht=null,ri=null;return{setTest:function(vt){V||(vt?Ne(r.STENCIL_TEST):Ge(r.STENCIL_TEST))},setMask:function(vt){Te!==vt&&!V&&(r.stencilMask(vt),Te=vt)},setFunc:function(vt,On,an){(ee!==vt||Se!==On||Re!==an)&&(r.stencilFunc(vt,On,an),ee=vt,Se=On,Re=an)},setOp:function(vt,On,an){(_t!==vt||Rt!==On||Ht!==an)&&(r.stencilOp(vt,On,an),_t=vt,Rt=On,Ht=an)},setLocked:function(vt){V=vt},setClear:function(vt){ri!==vt&&(r.clearStencil(vt),ri=vt)},reset:function(){V=!1,Te=null,ee=null,Se=null,Re=null,_t=null,Rt=null,Ht=null,ri=null}}}const o=new i,l=new s,u=new a,f=new WeakMap,p=new WeakMap;let d={},g={},v=new WeakMap,b=[],y=null,_=!1,T=null,S=null,M=null,R=null,O=null,U=null,B=null,A=!1,L=null,Q=null,he=null,$=null,Z=null;const W=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ie=!1,ae=0;const ce=r.getParameter(r.VERSION);ce.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(ce)[1]),ie=ae>=1):ce.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(ce)[1]),ie=ae>=2);let de=null,ue={};const q=r.getParameter(r.SCISSOR_BOX),oe=r.getParameter(r.VIEWPORT),Ae=new Ct().fromArray(q),Ce=new Ct().fromArray(oe);function we(V,Te,ee,Se){const Re=new Uint8Array(4),_t=r.createTexture();r.bindTexture(V,_t),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Rt=0;Rt<ee;Rt++)n&&(V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY)?r.texImage3D(Te,0,r.RGBA,1,1,Se,0,r.RGBA,r.UNSIGNED_BYTE,Re):r.texImage2D(Te+Rt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Re);return _t}const Ye={};Ye[r.TEXTURE_2D]=we(r.TEXTURE_2D,r.TEXTURE_2D,1),Ye[r.TEXTURE_CUBE_MAP]=we(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ye[r.TEXTURE_2D_ARRAY]=we(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ye[r.TEXTURE_3D]=we(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),u.setClear(0),Ne(r.DEPTH_TEST),l.setFunc(Gl),pe(!1),Ve(jf),Ne(r.CULL_FACE),le(ar);function Ne(V){d[V]!==!0&&(r.enable(V),d[V]=!0)}function Ge(V){d[V]!==!1&&(r.disable(V),d[V]=!1)}function gt(V,Te){return g[V]!==Te?(r.bindFramebuffer(V,Te),g[V]=Te,n&&(V===r.DRAW_FRAMEBUFFER&&(g[r.FRAMEBUFFER]=Te),V===r.FRAMEBUFFER&&(g[r.DRAW_FRAMEBUFFER]=Te)),!0):!1}function Et(V,Te){let ee=b,Se=!1;if(V)if(ee=v.get(Te),ee===void 0&&(ee=[],v.set(Te,ee)),V.isWebGLMultipleRenderTargets){const Re=V.texture;if(ee.length!==Re.length||ee[0]!==r.COLOR_ATTACHMENT0){for(let _t=0,Rt=Re.length;_t<Rt;_t++)ee[_t]=r.COLOR_ATTACHMENT0+_t;ee.length=Re.length,Se=!0}}else ee[0]!==r.COLOR_ATTACHMENT0&&(ee[0]=r.COLOR_ATTACHMENT0,Se=!0);else ee[0]!==r.BACK&&(ee[0]=r.BACK,Se=!0);Se&&(t.isWebGL2?r.drawBuffers(ee):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ee))}function Xe(V){return y!==V?(r.useProgram(V),y=V,!0):!1}const k={[gs]:r.FUNC_ADD,[yv]:r.FUNC_SUBTRACT,[xv]:r.FUNC_REVERSE_SUBTRACT};if(n)k[Zf]=r.MIN,k[Jf]=r.MAX;else{const V=e.get("EXT_blend_minmax");V!==null&&(k[Zf]=V.MIN_EXT,k[Jf]=V.MAX_EXT)}const Me={[bv]:r.ZERO,[Sv]:r.ONE,[Mv]:r.SRC_COLOR,[Ud]:r.SRC_ALPHA,[Cv]:r.SRC_ALPHA_SATURATE,[Av]:r.DST_COLOR,[wv]:r.DST_ALPHA,[Tv]:r.ONE_MINUS_SRC_COLOR,[Nd]:r.ONE_MINUS_SRC_ALPHA,[Pv]:r.ONE_MINUS_DST_COLOR,[Ev]:r.ONE_MINUS_DST_ALPHA};function le(V,Te,ee,Se,Re,_t,Rt,Ht){if(V===ar){_===!0&&(Ge(r.BLEND),_=!1);return}if(_===!1&&(Ne(r.BLEND),_=!0),V!==vv){if(V!==T||Ht!==A){if((S!==gs||O!==gs)&&(r.blendEquation(r.FUNC_ADD),S=gs,O=gs),Ht)switch(V){case Ts:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.ONE,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case $f:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Ts:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case $f:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}M=null,R=null,U=null,B=null,T=V,A=Ht}return}Re=Re||Te,_t=_t||ee,Rt=Rt||Se,(Te!==S||Re!==O)&&(r.blendEquationSeparate(k[Te],k[Re]),S=Te,O=Re),(ee!==M||Se!==R||_t!==U||Rt!==B)&&(r.blendFuncSeparate(Me[ee],Me[Se],Me[_t],Me[Rt]),M=ee,R=Se,U=_t,B=Rt),T=V,A=!1}function xe(V,Te){V.side===Oi?Ge(r.CULL_FACE):Ne(r.CULL_FACE);let ee=V.side===Ln;Te&&(ee=!ee),pe(ee),V.blending===Ts&&V.transparent===!1?le(ar):le(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),o.setMask(V.colorWrite);const Se=V.stencilWrite;u.setTest(Se),Se&&(u.setMask(V.stencilWriteMask),u.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),u.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),Ue(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Ne(r.SAMPLE_ALPHA_TO_COVERAGE):Ge(r.SAMPLE_ALPHA_TO_COVERAGE)}function pe(V){L!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),L=V)}function Ve(V){V!==gv?(Ne(r.CULL_FACE),V!==Q&&(V===jf?r.cullFace(r.BACK):V===_v?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ge(r.CULL_FACE),Q=V}function Ie(V){V!==he&&(ie&&r.lineWidth(V),he=V)}function Ue(V,Te,ee){V?(Ne(r.POLYGON_OFFSET_FILL),($!==Te||Z!==ee)&&(r.polygonOffset(Te,ee),$=Te,Z=ee)):Ge(r.POLYGON_OFFSET_FILL)}function et(V){V?Ne(r.SCISSOR_TEST):Ge(r.SCISSOR_TEST)}function dt(V){V===void 0&&(V=r.TEXTURE0+W-1),de!==V&&(r.activeTexture(V),de=V)}function xt(V,Te,ee){ee===void 0&&(de===null?ee=r.TEXTURE0+W-1:ee=de);let Se=ue[ee];Se===void 0&&(Se={type:void 0,texture:void 0},ue[ee]=Se),(Se.type!==V||Se.texture!==Te)&&(de!==ee&&(r.activeTexture(ee),de=ee),r.bindTexture(V,Te||Ye[V]),Se.type=V,Se.texture=Te)}function F(){const V=ue[de];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function P(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function J(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ve(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function me(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ye(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function He(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function be(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function K(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function qe(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function De(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function je(V){Ae.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Ae.copy(V))}function Fe(V){Ce.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),Ce.copy(V))}function Be(V,Te){let ee=p.get(Te);ee===void 0&&(ee=new WeakMap,p.set(Te,ee));let Se=ee.get(V);Se===void 0&&(Se=r.getUniformBlockIndex(Te,V.name),ee.set(V,Se))}function ct(V,Te){const Se=p.get(Te).get(V);f.get(Te)!==Se&&(r.uniformBlockBinding(Te,Se,V.__bindingPointIndex),f.set(Te,Se))}function Mt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),d={},de=null,ue={},g={},v=new WeakMap,b=[],y=null,_=!1,T=null,S=null,M=null,R=null,O=null,U=null,B=null,A=!1,L=null,Q=null,he=null,$=null,Z=null,Ae.set(0,0,r.canvas.width,r.canvas.height),Ce.set(0,0,r.canvas.width,r.canvas.height),o.reset(),l.reset(),u.reset()}return{buffers:{color:o,depth:l,stencil:u},enable:Ne,disable:Ge,bindFramebuffer:gt,drawBuffers:Et,useProgram:Xe,setBlending:le,setMaterial:xe,setFlipSided:pe,setCullFace:Ve,setLineWidth:Ie,setPolygonOffset:Ue,setScissorTest:et,activeTexture:dt,bindTexture:xt,unbindTexture:F,compressedTexImage2D:P,compressedTexImage3D:J,texImage2D:qe,texImage3D:De,updateUBOMapping:Be,uniformBlockBinding:ct,texStorage2D:be,texStorage3D:K,texSubImage2D:ve,texSubImage3D:me,compressedTexSubImage2D:ye,compressedTexSubImage3D:He,scissor:je,viewport:Fe,reset:Mt}}function VL(r,e,t,n,i,s,a){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,f=i.maxTextureSize,p=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let b;const y=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function T(F,P){return _?new OffscreenCanvas(F,P):ko("canvas")}function S(F,P,J,ve){let me=1;if((F.width>ve||F.height>ve)&&(me=ve/Math.max(F.width,F.height)),me<1||P===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const ye=P?jl:Math.floor,He=ye(me*F.width),be=ye(me*F.height);b===void 0&&(b=T(He,be));const K=J?T(He,be):b;return K.width=He,K.height=be,K.getContext("2d").drawImage(F,0,0,He,be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+He+"x"+be+")."),K}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function M(F){return Td(F.width)&&Td(F.height)}function R(F){return o?!1:F.wrapS!==wn||F.wrapT!==wn||F.minFilter!==$t&&F.minFilter!==Zt}function O(F,P){return F.generateMipmaps&&P&&F.minFilter!==$t&&F.minFilter!==Zt}function U(F){r.generateMipmap(F)}function B(F,P,J,ve,me=!1){if(o===!1)return P;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let ye=P;return P===r.RED&&(J===r.FLOAT&&(ye=r.R32F),J===r.HALF_FLOAT&&(ye=r.R16F),J===r.UNSIGNED_BYTE&&(ye=r.R8)),P===r.RED_INTEGER&&(J===r.UNSIGNED_BYTE&&(ye=r.R8UI),J===r.UNSIGNED_SHORT&&(ye=r.R16UI),J===r.UNSIGNED_INT&&(ye=r.R32UI),J===r.BYTE&&(ye=r.R8I),J===r.SHORT&&(ye=r.R16I),J===r.INT&&(ye=r.R32I)),P===r.RG&&(J===r.FLOAT&&(ye=r.RG32F),J===r.HALF_FLOAT&&(ye=r.RG16F),J===r.UNSIGNED_BYTE&&(ye=r.RG8)),P===r.RGBA&&(J===r.FLOAT&&(ye=r.RGBA32F),J===r.HALF_FLOAT&&(ye=r.RGBA16F),J===r.UNSIGNED_BYTE&&(ye=ve===Bt&&me===!1?r.SRGB8_ALPHA8:r.RGBA8),J===r.UNSIGNED_SHORT_4_4_4_4&&(ye=r.RGBA4),J===r.UNSIGNED_SHORT_5_5_5_1&&(ye=r.RGB5_A1)),(ye===r.R16F||ye===r.R32F||ye===r.RG16F||ye===r.RG32F||ye===r.RGBA16F||ye===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ye}function A(F,P,J){return O(F,J)===!0||F.isFramebufferTexture&&F.minFilter!==$t&&F.minFilter!==Zt?Math.log2(Math.max(P.width,P.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?P.mipmaps.length:1}function L(F){return F===$t||F===Wl||F===Mo?r.NEAREST:r.LINEAR}function Q(F){const P=F.target;P.removeEventListener("dispose",Q),$(P),P.isVideoTexture&&v.delete(P)}function he(F){const P=F.target;P.removeEventListener("dispose",he),W(P)}function $(F){const P=n.get(F);if(P.__webglInit===void 0)return;const J=F.source,ve=y.get(J);if(ve){const me=ve[P.__cacheKey];me.usedTimes--,me.usedTimes===0&&Z(F),Object.keys(ve).length===0&&y.delete(J)}n.remove(F)}function Z(F){const P=n.get(F);r.deleteTexture(P.__webglTexture);const J=F.source,ve=y.get(J);delete ve[P.__cacheKey],a.memory.textures--}function W(F){const P=F.texture,J=n.get(F),ve=n.get(P);if(ve.__webglTexture!==void 0&&(r.deleteTexture(ve.__webglTexture),a.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let me=0;me<6;me++){if(Array.isArray(J.__webglFramebuffer[me]))for(let ye=0;ye<J.__webglFramebuffer[me].length;ye++)r.deleteFramebuffer(J.__webglFramebuffer[me][ye]);else r.deleteFramebuffer(J.__webglFramebuffer[me]);J.__webglDepthbuffer&&r.deleteRenderbuffer(J.__webglDepthbuffer[me])}else{if(Array.isArray(J.__webglFramebuffer))for(let me=0;me<J.__webglFramebuffer.length;me++)r.deleteFramebuffer(J.__webglFramebuffer[me]);else r.deleteFramebuffer(J.__webglFramebuffer);if(J.__webglDepthbuffer&&r.deleteRenderbuffer(J.__webglDepthbuffer),J.__webglMultisampledFramebuffer&&r.deleteFramebuffer(J.__webglMultisampledFramebuffer),J.__webglColorRenderbuffer)for(let me=0;me<J.__webglColorRenderbuffer.length;me++)J.__webglColorRenderbuffer[me]&&r.deleteRenderbuffer(J.__webglColorRenderbuffer[me]);J.__webglDepthRenderbuffer&&r.deleteRenderbuffer(J.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let me=0,ye=P.length;me<ye;me++){const He=n.get(P[me]);He.__webglTexture&&(r.deleteTexture(He.__webglTexture),a.memory.textures--),n.remove(P[me])}n.remove(P),n.remove(F)}let ie=0;function ae(){ie=0}function ce(){const F=ie;return F>=l&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+l),ie+=1,F}function de(F){const P=[];return P.push(F.wrapS),P.push(F.wrapT),P.push(F.wrapR||0),P.push(F.magFilter),P.push(F.minFilter),P.push(F.anisotropy),P.push(F.internalFormat),P.push(F.format),P.push(F.type),P.push(F.generateMipmaps),P.push(F.premultiplyAlpha),P.push(F.flipY),P.push(F.unpackAlignment),P.push(F.colorSpace),P.join()}function ue(F,P){const J=n.get(F);if(F.isVideoTexture&&dt(F),F.isRenderTargetTexture===!1&&F.version>0&&J.__version!==F.version){const ve=F.image;if(ve===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ve.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{gt(J,F,P);return}}t.bindTexture(r.TEXTURE_2D,J.__webglTexture,r.TEXTURE0+P)}function q(F,P){const J=n.get(F);if(F.version>0&&J.__version!==F.version){gt(J,F,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,J.__webglTexture,r.TEXTURE0+P)}function oe(F,P){const J=n.get(F);if(F.version>0&&J.__version!==F.version){gt(J,F,P);return}t.bindTexture(r.TEXTURE_3D,J.__webglTexture,r.TEXTURE0+P)}function Ae(F,P){const J=n.get(F);if(F.version>0&&J.__version!==F.version){Et(J,F,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,J.__webglTexture,r.TEXTURE0+P)}const Ce={[Lo]:r.REPEAT,[wn]:r.CLAMP_TO_EDGE,[Do]:r.MIRRORED_REPEAT},we={[$t]:r.NEAREST,[Wl]:r.NEAREST_MIPMAP_NEAREST,[Mo]:r.NEAREST_MIPMAP_LINEAR,[Zt]:r.LINEAR,[Bd]:r.LINEAR_MIPMAP_NEAREST,[Lr]:r.LINEAR_MIPMAP_LINEAR},Ye={[s0]:r.NEVER,[f0]:r.ALWAYS,[a0]:r.LESS,[c0]:r.LEQUAL,[o0]:r.EQUAL,[h0]:r.GEQUAL,[l0]:r.GREATER,[u0]:r.NOTEQUAL};function Ne(F,P,J){if(J?(r.texParameteri(F,r.TEXTURE_WRAP_S,Ce[P.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,Ce[P.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,Ce[P.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,we[P.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,we[P.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==wn||P.wrapT!==wn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,L(P.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,L(P.minFilter)),P.minFilter!==$t&&P.minFilter!==Zt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(F,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(F,r.TEXTURE_COMPARE_FUNC,Ye[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ve=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===$t||P.minFilter!==Mo&&P.minFilter!==Lr||P.type===Ui&&e.has("OES_texture_float_linear")===!1||o===!1&&P.type===Ca&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(F,ve.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function Ge(F,P){let J=!1;F.__webglInit===void 0&&(F.__webglInit=!0,P.addEventListener("dispose",Q));const ve=P.source;let me=y.get(ve);me===void 0&&(me={},y.set(ve,me));const ye=de(P);if(ye!==F.__cacheKey){me[ye]===void 0&&(me[ye]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,J=!0),me[ye].usedTimes++;const He=me[F.__cacheKey];He!==void 0&&(me[F.__cacheKey].usedTimes--,He.usedTimes===0&&Z(P)),F.__cacheKey=ye,F.__webglTexture=me[ye].texture}return J}function gt(F,P,J){let ve=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(ve=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(ve=r.TEXTURE_3D);const me=Ge(F,P),ye=P.source;t.bindTexture(ve,F.__webglTexture,r.TEXTURE0+J);const He=n.get(ye);if(ye.version!==He.__version||me===!0){t.activeTexture(r.TEXTURE0+J),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const be=R(P)&&M(P.image)===!1;let K=S(P.image,be,!1,f);K=xt(P,K);const qe=M(K)||o,De=s.convert(P.format,P.colorSpace);let je=s.convert(P.type),Fe=B(P.internalFormat,De,je,P.colorSpace,P.isVideoTexture);Ne(ve,P,qe);let Be;const ct=P.mipmaps,Mt=o&&P.isVideoTexture!==!0,V=He.__version===void 0||me===!0,Te=A(P,K,qe);if(P.isDepthTexture)Fe=r.DEPTH_COMPONENT,o?P.type===Ui?Fe=r.DEPTH_COMPONENT32F:P.type===sr?Fe=r.DEPTH_COMPONENT24:P.type===Pr?Fe=r.DEPTH24_STENCIL8:Fe=r.DEPTH_COMPONENT16:P.type===Ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Cr&&Fe===r.DEPTH_COMPONENT&&P.type!==Kl&&P.type!==sr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=sr,je=s.convert(P.type)),P.format===As&&Fe===r.DEPTH_COMPONENT&&(Fe=r.DEPTH_STENCIL,P.type!==Pr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Pr,je=s.convert(P.type))),V&&(Mt?t.texStorage2D(r.TEXTURE_2D,1,Fe,K.width,K.height):t.texImage2D(r.TEXTURE_2D,0,Fe,K.width,K.height,0,De,je,null));else if(P.isDataTexture)if(ct.length>0&&qe){Mt&&V&&t.texStorage2D(r.TEXTURE_2D,Te,Fe,ct[0].width,ct[0].height);for(let ee=0,Se=ct.length;ee<Se;ee++)Be=ct[ee],Mt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Be.width,Be.height,De,je,Be.data):t.texImage2D(r.TEXTURE_2D,ee,Fe,Be.width,Be.height,0,De,je,Be.data);P.generateMipmaps=!1}else Mt?(V&&t.texStorage2D(r.TEXTURE_2D,Te,Fe,K.width,K.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,K.width,K.height,De,je,K.data)):t.texImage2D(r.TEXTURE_2D,0,Fe,K.width,K.height,0,De,je,K.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){Mt&&V&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Te,Fe,ct[0].width,ct[0].height,K.depth);for(let ee=0,Se=ct.length;ee<Se;ee++)Be=ct[ee],P.format!==ei?De!==null?Mt?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Be.width,Be.height,K.depth,De,Be.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ee,Fe,Be.width,Be.height,K.depth,0,Be.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Mt?t.texSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Be.width,Be.height,K.depth,De,je,Be.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ee,Fe,Be.width,Be.height,K.depth,0,De,je,Be.data)}else{Mt&&V&&t.texStorage2D(r.TEXTURE_2D,Te,Fe,ct[0].width,ct[0].height);for(let ee=0,Se=ct.length;ee<Se;ee++)Be=ct[ee],P.format!==ei?De!==null?Mt?t.compressedTexSubImage2D(r.TEXTURE_2D,ee,0,0,Be.width,Be.height,De,Be.data):t.compressedTexImage2D(r.TEXTURE_2D,ee,Fe,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Mt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Be.width,Be.height,De,je,Be.data):t.texImage2D(r.TEXTURE_2D,ee,Fe,Be.width,Be.height,0,De,je,Be.data)}else if(P.isDataArrayTexture)Mt?(V&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Te,Fe,K.width,K.height,K.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,K.width,K.height,K.depth,De,je,K.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Fe,K.width,K.height,K.depth,0,De,je,K.data);else if(P.isData3DTexture)Mt?(V&&t.texStorage3D(r.TEXTURE_3D,Te,Fe,K.width,K.height,K.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,K.width,K.height,K.depth,De,je,K.data)):t.texImage3D(r.TEXTURE_3D,0,Fe,K.width,K.height,K.depth,0,De,je,K.data);else if(P.isFramebufferTexture){if(V)if(Mt)t.texStorage2D(r.TEXTURE_2D,Te,Fe,K.width,K.height);else{let ee=K.width,Se=K.height;for(let Re=0;Re<Te;Re++)t.texImage2D(r.TEXTURE_2D,Re,Fe,ee,Se,0,De,je,null),ee>>=1,Se>>=1}}else if(ct.length>0&&qe){Mt&&V&&t.texStorage2D(r.TEXTURE_2D,Te,Fe,ct[0].width,ct[0].height);for(let ee=0,Se=ct.length;ee<Se;ee++)Be=ct[ee],Mt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,De,je,Be):t.texImage2D(r.TEXTURE_2D,ee,Fe,De,je,Be);P.generateMipmaps=!1}else Mt?(V&&t.texStorage2D(r.TEXTURE_2D,Te,Fe,K.width,K.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,De,je,K)):t.texImage2D(r.TEXTURE_2D,0,Fe,De,je,K);O(P,qe)&&U(ve),He.__version=ye.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function Et(F,P,J){if(P.image.length!==6)return;const ve=Ge(F,P),me=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+J);const ye=n.get(me);if(me.version!==ye.__version||ve===!0){t.activeTexture(r.TEXTURE0+J),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const He=P.isCompressedTexture||P.image[0].isCompressedTexture,be=P.image[0]&&P.image[0].isDataTexture,K=[];for(let ee=0;ee<6;ee++)!He&&!be?K[ee]=S(P.image[ee],!1,!0,u):K[ee]=be?P.image[ee].image:P.image[ee],K[ee]=xt(P,K[ee]);const qe=K[0],De=M(qe)||o,je=s.convert(P.format,P.colorSpace),Fe=s.convert(P.type),Be=B(P.internalFormat,je,Fe,P.colorSpace),ct=o&&P.isVideoTexture!==!0,Mt=ye.__version===void 0||ve===!0;let V=A(P,qe,De);Ne(r.TEXTURE_CUBE_MAP,P,De);let Te;if(He){ct&&Mt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,V,Be,qe.width,qe.height);for(let ee=0;ee<6;ee++){Te=K[ee].mipmaps;for(let Se=0;Se<Te.length;Se++){const Re=Te[Se];P.format!==ei?je!==null?ct?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se,0,0,Re.width,Re.height,je,Re.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se,Be,Re.width,Re.height,0,Re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ct?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se,0,0,Re.width,Re.height,je,Fe,Re.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se,Be,Re.width,Re.height,0,je,Fe,Re.data)}}}else{Te=P.mipmaps,ct&&Mt&&(Te.length>0&&V++,t.texStorage2D(r.TEXTURE_CUBE_MAP,V,Be,K[0].width,K[0].height));for(let ee=0;ee<6;ee++)if(be){ct?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,K[ee].width,K[ee].height,je,Fe,K[ee].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Be,K[ee].width,K[ee].height,0,je,Fe,K[ee].data);for(let Se=0;Se<Te.length;Se++){const _t=Te[Se].image[ee].image;ct?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se+1,0,0,_t.width,_t.height,je,Fe,_t.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se+1,Be,_t.width,_t.height,0,je,Fe,_t.data)}}else{ct?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,je,Fe,K[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Be,je,Fe,K[ee]);for(let Se=0;Se<Te.length;Se++){const Re=Te[Se];ct?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se+1,0,0,je,Fe,Re.image[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Se+1,Be,je,Fe,Re.image[ee])}}}O(P,De)&&U(r.TEXTURE_CUBE_MAP),ye.__version=me.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function Xe(F,P,J,ve,me,ye){const He=s.convert(J.format,J.colorSpace),be=s.convert(J.type),K=B(J.internalFormat,He,be,J.colorSpace);if(!n.get(P).__hasExternalTextures){const De=Math.max(1,P.width>>ye),je=Math.max(1,P.height>>ye);me===r.TEXTURE_3D||me===r.TEXTURE_2D_ARRAY?t.texImage3D(me,ye,K,De,je,P.depth,0,He,be,null):t.texImage2D(me,ye,K,De,je,0,He,be,null)}t.bindFramebuffer(r.FRAMEBUFFER,F),et(P)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ve,me,n.get(J).__webglTexture,0,Ue(P)):(me===r.TEXTURE_2D||me>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&me<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ve,me,n.get(J).__webglTexture,ye),t.bindFramebuffer(r.FRAMEBUFFER,null)}function k(F,P,J){if(r.bindRenderbuffer(r.RENDERBUFFER,F),P.depthBuffer&&!P.stencilBuffer){let ve=r.DEPTH_COMPONENT16;if(J||et(P)){const me=P.depthTexture;me&&me.isDepthTexture&&(me.type===Ui?ve=r.DEPTH_COMPONENT32F:me.type===sr&&(ve=r.DEPTH_COMPONENT24));const ye=Ue(P);et(P)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ye,ve,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,ye,ve,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,ve,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(P.depthBuffer&&P.stencilBuffer){const ve=Ue(P);J&&et(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ve,r.DEPTH24_STENCIL8,P.width,P.height):et(P)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ve,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const ve=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let me=0;me<ve.length;me++){const ye=ve[me],He=s.convert(ye.format,ye.colorSpace),be=s.convert(ye.type),K=B(ye.internalFormat,He,be,ye.colorSpace),qe=Ue(P);J&&et(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,qe,K,P.width,P.height):et(P)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,qe,K,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,K,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Me(F,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),ue(P.depthTexture,0);const ve=n.get(P.depthTexture).__webglTexture,me=Ue(P);if(P.depthTexture.format===Cr)et(P)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ve,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ve,0);else if(P.depthTexture.format===As)et(P)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ve,0,me):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ve,0);else throw new Error("Unknown depthTexture format")}function le(F){const P=n.get(F),J=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!P.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");Me(P.__webglFramebuffer,F)}else if(J){P.__webglDepthbuffer=[];for(let ve=0;ve<6;ve++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[ve]),P.__webglDepthbuffer[ve]=r.createRenderbuffer(),k(P.__webglDepthbuffer[ve],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),k(P.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function xe(F,P,J){const ve=n.get(F);P!==void 0&&Xe(ve.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),J!==void 0&&le(F)}function pe(F){const P=F.texture,J=n.get(F),ve=n.get(P);F.addEventListener("dispose",he),F.isWebGLMultipleRenderTargets!==!0&&(ve.__webglTexture===void 0&&(ve.__webglTexture=r.createTexture()),ve.__version=P.version,a.memory.textures++);const me=F.isWebGLCubeRenderTarget===!0,ye=F.isWebGLMultipleRenderTargets===!0,He=M(F)||o;if(me){J.__webglFramebuffer=[];for(let be=0;be<6;be++)if(o&&P.mipmaps&&P.mipmaps.length>0){J.__webglFramebuffer[be]=[];for(let K=0;K<P.mipmaps.length;K++)J.__webglFramebuffer[be][K]=r.createFramebuffer()}else J.__webglFramebuffer[be]=r.createFramebuffer()}else{if(o&&P.mipmaps&&P.mipmaps.length>0){J.__webglFramebuffer=[];for(let be=0;be<P.mipmaps.length;be++)J.__webglFramebuffer[be]=r.createFramebuffer()}else J.__webglFramebuffer=r.createFramebuffer();if(ye)if(i.drawBuffers){const be=F.texture;for(let K=0,qe=be.length;K<qe;K++){const De=n.get(be[K]);De.__webglTexture===void 0&&(De.__webglTexture=r.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&F.samples>0&&et(F)===!1){const be=ye?P:[P];J.__webglMultisampledFramebuffer=r.createFramebuffer(),J.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let K=0;K<be.length;K++){const qe=be[K];J.__webglColorRenderbuffer[K]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,J.__webglColorRenderbuffer[K]);const De=s.convert(qe.format,qe.colorSpace),je=s.convert(qe.type),Fe=B(qe.internalFormat,De,je,qe.colorSpace,F.isXRRenderTarget===!0),Be=Ue(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,Be,Fe,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+K,r.RENDERBUFFER,J.__webglColorRenderbuffer[K])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(J.__webglDepthRenderbuffer=r.createRenderbuffer(),k(J.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(me){t.bindTexture(r.TEXTURE_CUBE_MAP,ve.__webglTexture),Ne(r.TEXTURE_CUBE_MAP,P,He);for(let be=0;be<6;be++)if(o&&P.mipmaps&&P.mipmaps.length>0)for(let K=0;K<P.mipmaps.length;K++)Xe(J.__webglFramebuffer[be][K],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,K);else Xe(J.__webglFramebuffer[be],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);O(P,He)&&U(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(ye){const be=F.texture;for(let K=0,qe=be.length;K<qe;K++){const De=be[K],je=n.get(De);t.bindTexture(r.TEXTURE_2D,je.__webglTexture),Ne(r.TEXTURE_2D,De,He),Xe(J.__webglFramebuffer,F,De,r.COLOR_ATTACHMENT0+K,r.TEXTURE_2D,0),O(De,He)&&U(r.TEXTURE_2D)}t.unbindTexture()}else{let be=r.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(o?be=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(be,ve.__webglTexture),Ne(be,P,He),o&&P.mipmaps&&P.mipmaps.length>0)for(let K=0;K<P.mipmaps.length;K++)Xe(J.__webglFramebuffer[K],F,P,r.COLOR_ATTACHMENT0,be,K);else Xe(J.__webglFramebuffer,F,P,r.COLOR_ATTACHMENT0,be,0);O(P,He)&&U(be),t.unbindTexture()}F.depthBuffer&&le(F)}function Ve(F){const P=M(F)||o,J=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let ve=0,me=J.length;ve<me;ve++){const ye=J[ve];if(O(ye,P)){const He=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,be=n.get(ye).__webglTexture;t.bindTexture(He,be),U(He),t.unbindTexture()}}}function Ie(F){if(o&&F.samples>0&&et(F)===!1){const P=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],J=F.width,ve=F.height;let me=r.COLOR_BUFFER_BIT;const ye=[],He=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,be=n.get(F),K=F.isWebGLMultipleRenderTargets===!0;if(K)for(let qe=0;qe<P.length;qe++)t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,be.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglFramebuffer);for(let qe=0;qe<P.length;qe++){ye.push(r.COLOR_ATTACHMENT0+qe),F.depthBuffer&&ye.push(He);const De=be.__ignoreDepthValues!==void 0?be.__ignoreDepthValues:!1;if(De===!1&&(F.depthBuffer&&(me|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(me|=r.STENCIL_BUFFER_BIT)),K&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,be.__webglColorRenderbuffer[qe]),De===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[He]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[He])),K){const je=n.get(P[qe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,je,0)}r.blitFramebuffer(0,0,J,ve,0,0,J,ve,me,r.NEAREST),g&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ye)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),K)for(let qe=0;qe<P.length;qe++){t.bindFramebuffer(r.FRAMEBUFFER,be.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,be.__webglColorRenderbuffer[qe]);const De=n.get(P[qe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,be.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,De,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,be.__webglMultisampledFramebuffer)}}function Ue(F){return Math.min(p,F.samples)}function et(F){const P=n.get(F);return o&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function dt(F){const P=a.render.frame;v.get(F)!==P&&(v.set(F,P),F.update())}function xt(F,P){const J=F.colorSpace,ve=F.format,me=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===Xl||J!==_i&&J!==Rr&&(J===Bt||J===Jo?o===!1?e.has("EXT_sRGB")===!0&&ve===ei?(F.format=Xl,F.minFilter=Zt,F.generateMipmaps=!1):P=qd.sRGBToLinear(P):(ve!==ei||me!==cr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),P}this.allocateTextureUnit=ce,this.resetTextureUnits=ae,this.setTexture2D=ue,this.setTexture2DArray=q,this.setTexture3D=oe,this.setTextureCube=Ae,this.rebindTextures=xe,this.setupRenderTarget=pe,this.updateRenderTargetMipmap=Ve,this.updateMultisampleRenderTarget=Ie,this.setupDepthRenderbuffer=le,this.setupFrameBufferTexture=Xe,this.useMultisampledRTT=et}const GL=0,ln=1;function A0(r,e,t){const n=t.isWebGL2;function i(s,a=Rr){let o;const l=a===Bt||a===Jo?ln:GL;if(s===cr)return r.UNSIGNED_BYTE;if(s===kd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Hd)return r.UNSIGNED_SHORT_5_5_5_1;if(s===Gv)return r.BYTE;if(s===Wv)return r.SHORT;if(s===Kl)return r.UNSIGNED_SHORT;if(s===zd)return r.INT;if(s===sr)return r.UNSIGNED_INT;if(s===Ui)return r.FLOAT;if(s===Ca)return n?r.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===Xv)return r.ALPHA;if(s===ei)return r.RGBA;if(s===jv)return r.LUMINANCE;if(s===qv)return r.LUMINANCE_ALPHA;if(s===Cr)return r.DEPTH_COMPONENT;if(s===As)return r.DEPTH_STENCIL;if(s===Xl)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===Yv)return r.RED;if(s===Vd)return r.RED_INTEGER;if(s===$v)return r.RG;if(s===Gd)return r.RG_INTEGER;if(s===Wd)return r.RGBA_INTEGER;if(s===Ol||s===Ul||s===Nl||s===Fl)if(l===ln)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Ol)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Ul)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Nl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Fl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Ol)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Ul)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Nl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Fl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Kf||s===Qf||s===ed||s===td)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Kf)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Qf)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===ed)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===td)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Zv)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===nd||s===id)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===nd)return l===ln?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===id)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===rd||s===sd||s===ad||s===od||s===cd||s===ld||s===ud||s===hd||s===fd||s===dd||s===pd||s===md||s===gd||s===_d)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===rd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===sd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===ad)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===od)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===cd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===ld)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ud)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===hd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===fd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===dd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===pd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===md)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===gd)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===_d)return l===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Bl||s===vd||s===yd)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===Bl)return l===ln?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===vd)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===yd)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Jv||s===xd||s===bd||s===Sd)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(s===Bl)return o.COMPRESSED_RED_RGTC1_EXT;if(s===xd)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===bd)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Sd)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Pr?n?r.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class P0 extends pn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Sa extends St{constructor(){super(),this.isGroup=!0,this.type="Group"}}const WL={type:"move"};class Rf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Sa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Sa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Sa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const o=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const b of e.hand.values()){const y=t.getJointPose(b,n),_=this._getHandJoint(u,b);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const f=u.joints["index-finger-tip"],p=u.joints["thumb-tip"],d=f.position.distanceTo(p.position),g=.02,v=.005;u.inputState.pinching&&d>g+v?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&d<=g-v&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(WL)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=s!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Sa;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class C0 extends en{constructor(e,t,n,i,s,a,o,l,u,f){if(f=f!==void 0?f:Cr,f!==Cr&&f!==As)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Cr&&(n=sr),n===void 0&&f===As&&(n=Pr),super(null,i,s,a,o,l,f,n,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:$t,this.minFilter=l!==void 0?l:$t,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class XL extends dr{constructor(e,t){super();const n=this;let i=null,s=1,a=null,o="local-floor",l=1,u=null,f=null,p=null,d=null,g=null,v=null;const b=t.getContextAttributes();let y=null,_=null;const T=[],S=[],M=new pn;M.layers.enable(1),M.viewport=new Ct;const R=new pn;R.layers.enable(2),R.viewport=new Ct;const O=[M,R],U=new P0;U.layers.enable(1),U.layers.enable(2);let B=null,A=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let oe=T[q];return oe===void 0&&(oe=new Rf,T[q]=oe),oe.getTargetRaySpace()},this.getControllerGrip=function(q){let oe=T[q];return oe===void 0&&(oe=new Rf,T[q]=oe),oe.getGripSpace()},this.getHand=function(q){let oe=T[q];return oe===void 0&&(oe=new Rf,T[q]=oe),oe.getHandSpace()};function L(q){const oe=S.indexOf(q.inputSource);if(oe===-1)return;const Ae=T[oe];Ae!==void 0&&(Ae.update(q.inputSource,q.frame,u||a),Ae.dispatchEvent({type:q.type,data:q.inputSource}))}function Q(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",Q),i.removeEventListener("inputsourceschange",he);for(let q=0;q<T.length;q++){const oe=S[q];oe!==null&&(S[q]=null,T[q].disconnect(oe))}B=null,A=null,e.setRenderTarget(y),g=null,d=null,p=null,i=null,_=null,ue.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(q){s=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){o=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(q){u=q},this.getBaseLayer=function(){return d!==null?d:g},this.getBinding=function(){return p},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(q){if(i=q,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",Q),i.addEventListener("inputsourceschange",he),b.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const oe={antialias:i.renderState.layers===void 0?b.antialias:!0,alpha:!0,depth:b.depth,stencil:b.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,oe),i.updateRenderState({baseLayer:g}),_=new vi(g.framebufferWidth,g.framebufferHeight,{format:ei,type:cr,colorSpace:e.outputColorSpace,stencilBuffer:b.stencil})}else{let oe=null,Ae=null,Ce=null;b.depth&&(Ce=b.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,oe=b.stencil?As:Cr,Ae=b.stencil?Pr:sr);const we={colorFormat:t.RGBA8,depthFormat:Ce,scaleFactor:s};p=new XRWebGLBinding(i,t),d=p.createProjectionLayer(we),i.updateRenderState({layers:[d]}),_=new vi(d.textureWidth,d.textureHeight,{format:ei,type:cr,depthTexture:new C0(d.textureWidth,d.textureHeight,Ae,void 0,void 0,void 0,void 0,void 0,void 0,oe),stencilBuffer:b.stencil,colorSpace:e.outputColorSpace,samples:b.antialias?4:0});const Ye=e.properties.get(_);Ye.__ignoreDepthValues=d.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(l),u=null,a=await i.requestReferenceSpace(o),ue.setContext(i),ue.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function he(q){for(let oe=0;oe<q.removed.length;oe++){const Ae=q.removed[oe],Ce=S.indexOf(Ae);Ce>=0&&(S[Ce]=null,T[Ce].disconnect(Ae))}for(let oe=0;oe<q.added.length;oe++){const Ae=q.added[oe];let Ce=S.indexOf(Ae);if(Ce===-1){for(let Ye=0;Ye<T.length;Ye++)if(Ye>=S.length){S.push(Ae),Ce=Ye;break}else if(S[Ye]===null){S[Ye]=Ae,Ce=Ye;break}if(Ce===-1)break}const we=T[Ce];we&&we.connect(Ae)}}const $=new N,Z=new N;function W(q,oe,Ae){$.setFromMatrixPosition(oe.matrixWorld),Z.setFromMatrixPosition(Ae.matrixWorld);const Ce=$.distanceTo(Z),we=oe.projectionMatrix.elements,Ye=Ae.projectionMatrix.elements,Ne=we[14]/(we[10]-1),Ge=we[14]/(we[10]+1),gt=(we[9]+1)/we[5],Et=(we[9]-1)/we[5],Xe=(we[8]-1)/we[0],k=(Ye[8]+1)/Ye[0],Me=Ne*Xe,le=Ne*k,xe=Ce/(-Xe+k),pe=xe*-Xe;oe.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(pe),q.translateZ(xe),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert();const Ve=Ne+xe,Ie=Ge+xe,Ue=Me-pe,et=le+(Ce-pe),dt=gt*Ge/Ie*Ve,xt=Et*Ge/Ie*Ve;q.projectionMatrix.makePerspective(Ue,et,dt,xt,Ve,Ie),q.projectionMatrixInverse.copy(q.projectionMatrix).invert()}function ie(q,oe){oe===null?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(oe.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(i===null)return;U.near=R.near=M.near=q.near,U.far=R.far=M.far=q.far,(B!==U.near||A!==U.far)&&(i.updateRenderState({depthNear:U.near,depthFar:U.far}),B=U.near,A=U.far);const oe=q.parent,Ae=U.cameras;ie(U,oe);for(let Ce=0;Ce<Ae.length;Ce++)ie(Ae[Ce],oe);Ae.length===2?W(U,M,R):U.projectionMatrix.copy(M.projectionMatrix),ae(q,U,oe)};function ae(q,oe,Ae){Ae===null?q.matrix.copy(oe.matrixWorld):(q.matrix.copy(Ae.matrixWorld),q.matrix.invert(),q.matrix.multiply(oe.matrixWorld)),q.matrix.decompose(q.position,q.quaternion,q.scale),q.updateMatrixWorld(!0),q.projectionMatrix.copy(oe.projectionMatrix),q.projectionMatrixInverse.copy(oe.projectionMatrixInverse),q.isPerspectiveCamera&&(q.fov=Ra*2*Math.atan(1/q.projectionMatrix.elements[5]),q.zoom=1)}this.getCamera=function(){return U},this.getFoveation=function(){if(!(d===null&&g===null))return l},this.setFoveation=function(q){l=q,d!==null&&(d.fixedFoveation=q),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=q)};let ce=null;function de(q,oe){if(f=oe.getViewerPose(u||a),v=oe,f!==null){const Ae=f.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let Ce=!1;Ae.length!==U.cameras.length&&(U.cameras.length=0,Ce=!0);for(let we=0;we<Ae.length;we++){const Ye=Ae[we];let Ne=null;if(g!==null)Ne=g.getViewport(Ye);else{const gt=p.getViewSubImage(d,Ye);Ne=gt.viewport,we===0&&(e.setRenderTargetTextures(_,gt.colorTexture,d.ignoreDepthValues?void 0:gt.depthStencilTexture),e.setRenderTarget(_))}let Ge=O[we];Ge===void 0&&(Ge=new pn,Ge.layers.enable(we),Ge.viewport=new Ct,O[we]=Ge),Ge.matrix.fromArray(Ye.transform.matrix),Ge.matrix.decompose(Ge.position,Ge.quaternion,Ge.scale),Ge.projectionMatrix.fromArray(Ye.projectionMatrix),Ge.projectionMatrixInverse.copy(Ge.projectionMatrix).invert(),Ge.viewport.set(Ne.x,Ne.y,Ne.width,Ne.height),we===0&&(U.matrix.copy(Ge.matrix),U.matrix.decompose(U.position,U.quaternion,U.scale)),Ce===!0&&U.cameras.push(Ge)}}for(let Ae=0;Ae<T.length;Ae++){const Ce=S[Ae],we=T[Ae];Ce!==null&&we!==void 0&&we.update(Ce,oe,u||a)}ce&&ce(q,oe),oe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:oe}),v=null}const ue=new S0;ue.setAnimationLoop(de),this.setAnimationLoop=function(q){ce=q},this.dispose=function(){}}}function jL(r,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,v0(r)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,T,S,M){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(y,_):_.isMeshToonMaterial?(s(y,_),p(y,_)):_.isMeshPhongMaterial?(s(y,_),f(y,_)):_.isMeshStandardMaterial?(s(y,_),d(y,_),_.isMeshPhysicalMaterial&&g(y,_,M)):_.isMeshMatcapMaterial?(s(y,_),v(y,_)):_.isMeshDepthMaterial?s(y,_):_.isMeshDistanceMaterial?(s(y,_),b(y,_)):_.isMeshNormalMaterial?s(y,_):_.isLineBasicMaterial?(a(y,_),_.isLineDashedMaterial&&o(y,_)):_.isPointsMaterial?l(y,_,T,S):_.isSpriteMaterial?u(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===Ln&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===Ln&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const T=e.get(_).envMap;if(T&&(y.envMap.value=T,y.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const S=r._useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*S,t(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function a(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function o(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function l(y,_,T,S){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*T,y.scale.value=S*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function u(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function f(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function d(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),e.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,T){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Ln&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=T.texture,y.transmissionSamplerSize.value.set(T.width,T.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function v(y,_){_.matcap&&(y.matcap.value=_.matcap)}function b(y,_){const T=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(T.matrixWorld),y.nearDistance.value=T.shadow.camera.near,y.farDistance.value=T.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function qL(r,e,t,n){let i={},s={},a=[];const o=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(T,S){const M=S.program;n.uniformBlockBinding(T,M)}function u(T,S){let M=i[T.id];M===void 0&&(v(T),M=f(T),i[T.id]=M,T.addEventListener("dispose",y));const R=S.program;n.updateUBOMapping(T,R);const O=e.render.frame;s[T.id]!==O&&(d(T),s[T.id]=O)}function f(T){const S=p();T.__bindingPointIndex=S;const M=r.createBuffer(),R=T.__size,O=T.usage;return r.bindBuffer(r.UNIFORM_BUFFER,M),r.bufferData(r.UNIFORM_BUFFER,R,O),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,S,M),M}function p(){for(let T=0;T<o;T++)if(a.indexOf(T)===-1)return a.push(T),T;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(T){const S=i[T.id],M=T.uniforms,R=T.__cache;r.bindBuffer(r.UNIFORM_BUFFER,S);for(let O=0,U=M.length;O<U;O++){const B=M[O];if(g(B,O,R)===!0){const A=B.__offset,L=Array.isArray(B.value)?B.value:[B.value];let Q=0;for(let he=0;he<L.length;he++){const $=L[he],Z=b($);typeof $=="number"?(B.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,A+Q,B.__data)):$.isMatrix3?(B.__data[0]=$.elements[0],B.__data[1]=$.elements[1],B.__data[2]=$.elements[2],B.__data[3]=$.elements[0],B.__data[4]=$.elements[3],B.__data[5]=$.elements[4],B.__data[6]=$.elements[5],B.__data[7]=$.elements[0],B.__data[8]=$.elements[6],B.__data[9]=$.elements[7],B.__data[10]=$.elements[8],B.__data[11]=$.elements[0]):($.toArray(B.__data,Q),Q+=Z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,A,B.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(T,S,M){const R=T.value;if(M[S]===void 0){if(typeof R=="number")M[S]=R;else{const O=Array.isArray(R)?R:[R],U=[];for(let B=0;B<O.length;B++)U.push(O[B].clone());M[S]=U}return!0}else if(typeof R=="number"){if(M[S]!==R)return M[S]=R,!0}else{const O=Array.isArray(M[S])?M[S]:[M[S]],U=Array.isArray(R)?R:[R];for(let B=0;B<O.length;B++){const A=O[B];if(A.equals(U[B])===!1)return A.copy(U[B]),!0}}return!1}function v(T){const S=T.uniforms;let M=0;const R=16;let O=0;for(let U=0,B=S.length;U<B;U++){const A=S[U],L={boundary:0,storage:0},Q=Array.isArray(A.value)?A.value:[A.value];for(let he=0,$=Q.length;he<$;he++){const Z=Q[he],W=b(Z);L.boundary+=W.boundary,L.storage+=W.storage}if(A.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=M,U>0){O=M%R;const he=R-O;O!==0&&he-L.boundary<0&&(M+=R-O,A.__offset=M)}M+=L.storage}return O=M%R,O>0&&(M+=R-O),T.__size=M,T.__cache={},this}function b(T){const S={boundary:0,storage:0};return typeof T=="number"?(S.boundary=4,S.storage=4):T.isVector2?(S.boundary=8,S.storage=8):T.isVector3||T.isColor?(S.boundary=16,S.storage=12):T.isVector4?(S.boundary=16,S.storage=16):T.isMatrix3?(S.boundary=48,S.storage=48):T.isMatrix4?(S.boundary=64,S.storage=64):T.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",T),S}function y(T){const S=T.target;S.removeEventListener("dispose",y);const M=a.indexOf(S.__bindingPointIndex);a.splice(M,1),r.deleteBuffer(i[S.id]),delete i[S.id],delete s[S.id]}function _(){for(const T in i)r.deleteBuffer(i[T]);a=[],i={},s={}}return{bind:l,update:u,dispose:_}}class ep{constructor(e={}){const{canvas:t=m0(),context:n=null,depth:i=!0,stencil:s=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=a;const g=new Uint32Array(4),v=new Int32Array(4);let b=null,y=null;const _=[],T=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Bt,this._useLegacyLights=!1,this.toneMapping=or,this.toneMappingExposure=1;const S=this;let M=!1,R=0,O=0,U=null,B=-1,A=null;const L=new Ct,Q=new Ct;let he=null;const $=new Le(0);let Z=0,W=t.width,ie=t.height,ae=1,ce=null,de=null;const ue=new Ct(0,0,W,ie),q=new Ct(0,0,W,ie);let oe=!1;const Ae=new iu;let Ce=!1,we=!1,Ye=null;const Ne=new it,Ge=new fe,gt=new N,Et={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Xe(){return U===null?ae:1}let k=n;function Me(D,j){for(let re=0;re<D.length;re++){const Y=D[re],se=t.getContext(Y,j);if(se!==null)return se}return null}try{const D={alpha:!0,depth:i,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${$o}`),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",Se,!1),k===null){const j=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&j.shift(),k=Me(j,D),k===null)throw Me(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let le,xe,pe,Ve,Ie,Ue,et,dt,xt,F,P,J,ve,me,ye,He,be,K,qe,De,je,Fe,Be,ct;function Mt(){le=new cI(k),xe=new nI(k,le,e),le.init(xe),Fe=new A0(k,le,xe),pe=new HL(k,le,xe),Ve=new hI(k),Ie=new CL,Ue=new VL(k,le,pe,Ie,xe,Fe,Ve),et=new rI(S),dt=new oI(S),xt=new bP(k,xe),Be=new eI(k,le,xt,xe),F=new lI(k,xt,Ve,Be),P=new mI(k,F,xt,Ve),qe=new pI(k,xe,Ue),He=new iI(Ie),J=new PL(S,et,dt,le,xe,Be,He),ve=new jL(S,Ie),me=new IL,ye=new FL(le,xe),K=new QR(S,et,dt,pe,P,d,l),be=new kL(S,P,xe),ct=new qL(k,Ve,xe,pe),De=new tI(k,le,Ve,xe),je=new uI(k,le,Ve,xe),Ve.programs=J.programs,S.capabilities=xe,S.extensions=le,S.properties=Ie,S.renderLists=me,S.shadowMap=be,S.state=pe,S.info=Ve}Mt();const V=new XL(S,k);this.xr=V,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const D=le.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=le.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return ae},this.setPixelRatio=function(D){D!==void 0&&(ae=D,this.setSize(W,ie,!1))},this.getSize=function(D){return D.set(W,ie)},this.setSize=function(D,j,re=!0){if(V.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}W=D,ie=j,t.width=Math.floor(D*ae),t.height=Math.floor(j*ae),re===!0&&(t.style.width=D+"px",t.style.height=j+"px"),this.setViewport(0,0,D,j)},this.getDrawingBufferSize=function(D){return D.set(W*ae,ie*ae).floor()},this.setDrawingBufferSize=function(D,j,re){W=D,ie=j,ae=re,t.width=Math.floor(D*re),t.height=Math.floor(j*re),this.setViewport(0,0,D,j)},this.getCurrentViewport=function(D){return D.copy(L)},this.getViewport=function(D){return D.copy(ue)},this.setViewport=function(D,j,re,Y){D.isVector4?ue.set(D.x,D.y,D.z,D.w):ue.set(D,j,re,Y),pe.viewport(L.copy(ue).multiplyScalar(ae).floor())},this.getScissor=function(D){return D.copy(q)},this.setScissor=function(D,j,re,Y){D.isVector4?q.set(D.x,D.y,D.z,D.w):q.set(D,j,re,Y),pe.scissor(Q.copy(q).multiplyScalar(ae).floor())},this.getScissorTest=function(){return oe},this.setScissorTest=function(D){pe.setScissorTest(oe=D)},this.setOpaqueSort=function(D){ce=D},this.setTransparentSort=function(D){de=D},this.getClearColor=function(D){return D.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(D=!0,j=!0,re=!0){let Y=0;if(D){let se=!1;if(U!==null){const Oe=U.texture.format;se=Oe===Wd||Oe===Gd||Oe===Vd}if(se){const Oe=U.texture.type,$e=Oe===cr||Oe===sr||Oe===Kl||Oe===Pr||Oe===kd||Oe===Hd,Ke=K.getClearColor(),Qe=K.getClearAlpha(),lt=Ke.r,Ze=Ke.g,rt=Ke.b;$e?(g[0]=lt,g[1]=Ze,g[2]=rt,g[3]=Qe,k.clearBufferuiv(k.COLOR,0,g)):(v[0]=lt,v[1]=Ze,v[2]=rt,v[3]=Qe,k.clearBufferiv(k.COLOR,0,v))}else Y|=k.COLOR_BUFFER_BIT}j&&(Y|=k.DEPTH_BUFFER_BIT),re&&(Y|=k.STENCIL_BUFFER_BIT),k.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),me.dispose(),ye.dispose(),Ie.dispose(),et.dispose(),dt.dispose(),P.dispose(),Be.dispose(),ct.dispose(),J.dispose(),V.dispose(),V.removeEventListener("sessionstart",vt),V.removeEventListener("sessionend",On),Ye&&(Ye.dispose(),Ye=null),an.stop()};function Te(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1;const D=Ve.autoReset,j=be.enabled,re=be.autoUpdate,Y=be.needsUpdate,se=be.type;Mt(),Ve.autoReset=D,be.enabled=j,be.autoUpdate=re,be.needsUpdate=Y,be.type=se}function Se(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function Re(D){const j=D.target;j.removeEventListener("dispose",Re),_t(j)}function _t(D){Rt(D),Ie.remove(D)}function Rt(D){const j=Ie.get(D).programs;j!==void 0&&(j.forEach(function(re){J.releaseProgram(re)}),D.isShaderMaterial&&J.releaseShaderCache(D))}this.renderBufferDirect=function(D,j,re,Y,se,Oe){j===null&&(j=Et);const $e=se.isMesh&&se.matrixWorld.determinant()<0,Ke=Fs(D,j,re,Y,se);pe.setMaterial(Y,$e);let Qe=re.index,lt=1;if(Y.wireframe===!0){if(Qe=F.getWireframeAttribute(re),Qe===void 0)return;lt=2}const Ze=re.drawRange,rt=re.attributes.position;let Dt=Ze.start*lt,zt=(Ze.start+Ze.count)*lt;Oe!==null&&(Dt=Math.max(Dt,Oe.start*lt),zt=Math.min(zt,(Oe.start+Oe.count)*lt)),Qe!==null?(Dt=Math.max(Dt,0),zt=Math.min(zt,Qe.count)):rt!=null&&(Dt=Math.max(Dt,0),zt=Math.min(zt,rt.count));const jt=zt-Dt;if(jt<0||jt===1/0)return;Be.setup(se,Y,Ke,re,Qe);let Xn,Vt=De;if(Qe!==null&&(Xn=xt.get(Qe),Vt=je,Vt.setIndex(Xn)),se.isMesh)Y.wireframe===!0?(pe.setLineWidth(Y.wireframeLinewidth*Xe()),Vt.setMode(k.LINES)):Vt.setMode(k.TRIANGLES);else if(se.isLine){let ht=Y.linewidth;ht===void 0&&(ht=1),pe.setLineWidth(ht*Xe()),se.isLineSegments?Vt.setMode(k.LINES):se.isLineLoop?Vt.setMode(k.LINE_LOOP):Vt.setMode(k.LINE_STRIP)}else se.isPoints?Vt.setMode(k.POINTS):se.isSprite&&Vt.setMode(k.TRIANGLES);if(se.isInstancedMesh)Vt.renderInstances(Dt,jt,se.count);else if(re.isInstancedBufferGeometry){const ht=re._maxInstanceCount!==void 0?re._maxInstanceCount:1/0,Br=Math.min(re.instanceCount,ht);Vt.renderInstances(Dt,jt,Br)}else Vt.render(Dt,jt)},this.compile=function(D,j){function re(Y,se,Oe){Y.transparent===!0&&Y.side===Oi&&Y.forceSinglePass===!1?(Y.side=Ln,Y.needsUpdate=!0,mr(Y,se,Oe),Y.side=ur,Y.needsUpdate=!0,mr(Y,se,Oe),Y.side=Oi):mr(Y,se,Oe)}y=ye.get(D),y.init(),T.push(y),D.traverseVisible(function(Y){Y.isLight&&Y.layers.test(j.layers)&&(y.pushLight(Y),Y.castShadow&&y.pushShadow(Y))}),y.setupLights(S._useLegacyLights),D.traverse(function(Y){const se=Y.material;if(se)if(Array.isArray(se))for(let Oe=0;Oe<se.length;Oe++){const $e=se[Oe];re($e,D,Y)}else re(se,D,Y)}),T.pop(),y=null};let Ht=null;function ri(D){Ht&&Ht(D)}function vt(){an.stop()}function On(){an.start()}const an=new S0;an.setAnimationLoop(ri),typeof self<"u"&&an.setContext(self),this.setAnimationLoop=function(D){Ht=D,V.setAnimationLoop(D),D===null?an.stop():an.start()},V.addEventListener("sessionstart",vt),V.addEventListener("sessionend",On),this.render=function(D,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(M===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),j.parent===null&&j.matrixWorldAutoUpdate===!0&&j.updateMatrixWorld(),V.enabled===!0&&V.isPresenting===!0&&(V.cameraAutoUpdate===!0&&V.updateCamera(j),j=V.getCamera()),D.isScene===!0&&D.onBeforeRender(S,D,j,U),y=ye.get(D,T.length),y.init(),T.push(y),Ne.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),Ae.setFromProjectionMatrix(Ne),we=this.localClippingEnabled,Ce=He.init(this.clippingPlanes,we),b=me.get(D,_.length),b.init(),_.push(b),Os(D,j,0,S.sortObjects),b.finish(),S.sortObjects===!0&&b.sort(ce,de),this.info.render.frame++,Ce===!0&&He.beginShadows();const re=y.state.shadowsArray;if(be.render(re,D,j),Ce===!0&&He.endShadows(),this.info.autoReset===!0&&this.info.reset(),K.render(b,D),y.setupLights(S._useLegacyLights),j.isArrayCamera){const Y=j.cameras;for(let se=0,Oe=Y.length;se<Oe;se++){const $e=Y[se];Us(b,D,$e,$e.viewport)}}else Us(b,D,j);U!==null&&(Ue.updateMultisampleRenderTarget(U),Ue.updateRenderTargetMipmap(U)),D.isScene===!0&&D.onAfterRender(S,D,j),Be.resetDefaultState(),B=-1,A=null,T.pop(),T.length>0?y=T[T.length-1]:y=null,_.pop(),_.length>0?b=_[_.length-1]:b=null};function Os(D,j,re,Y){if(D.visible===!1)return;if(D.layers.test(j.layers)){if(D.isGroup)re=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(j);else if(D.isLight)y.pushLight(D),D.castShadow&&y.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||Ae.intersectsSprite(D)){Y&&gt.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Ne);const $e=P.update(D),Ke=D.material;Ke.visible&&b.push(D,$e,Ke,re,gt.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||Ae.intersectsObject(D))){const $e=P.update(D),Ke=D.material;if(Y&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),gt.copy(D.boundingSphere.center)):($e.boundingSphere===null&&$e.computeBoundingSphere(),gt.copy($e.boundingSphere.center)),gt.applyMatrix4(D.matrixWorld).applyMatrix4(Ne)),Array.isArray(Ke)){const Qe=$e.groups;for(let lt=0,Ze=Qe.length;lt<Ze;lt++){const rt=Qe[lt],Dt=Ke[rt.materialIndex];Dt&&Dt.visible&&b.push(D,$e,Dt,re,gt.z,rt)}}else Ke.visible&&b.push(D,$e,Ke,re,gt.z,null)}}const Oe=D.children;for(let $e=0,Ke=Oe.length;$e<Ke;$e++)Os(Oe[$e],j,re,Y)}function Us(D,j,re,Y){const se=D.opaque,Oe=D.transmissive,$e=D.transparent;y.setupLightsView(re),Ce===!0&&He.setGlobalState(S.clippingPlanes,re),Oe.length>0&&ka(se,Oe,j,re),Y&&pe.viewport(L.copy(Y)),se.length>0&&pr(se,j,re),Oe.length>0&&pr(Oe,j,re),$e.length>0&&pr($e,j,re),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1)}function ka(D,j,re,Y){const se=xe.isWebGL2;Ye===null&&(Ye=new vi(1,1,{generateMipmaps:!0,type:le.has("EXT_color_buffer_half_float")?Ca:cr,minFilter:Lr,samples:se?4:0})),S.getDrawingBufferSize(Ge),se?Ye.setSize(Ge.x,Ge.y):Ye.setSize(jl(Ge.x),jl(Ge.y));const Oe=S.getRenderTarget();S.setRenderTarget(Ye),S.getClearColor($),Z=S.getClearAlpha(),Z<1&&S.setClearColor(16777215,.5),S.clear();const $e=S.toneMapping;S.toneMapping=or,pr(D,re,Y),Ue.updateMultisampleRenderTarget(Ye),Ue.updateRenderTargetMipmap(Ye);let Ke=!1;for(let Qe=0,lt=j.length;Qe<lt;Qe++){const Ze=j[Qe],rt=Ze.object,Dt=Ze.geometry,zt=Ze.material,jt=Ze.group;if(zt.side===Oi&&rt.layers.test(Y.layers)){const Xn=zt.side;zt.side=Ln,zt.needsUpdate=!0,Ns(rt,re,Y,Dt,zt,jt),zt.side=Xn,zt.needsUpdate=!0,Ke=!0}}Ke===!0&&(Ue.updateMultisampleRenderTarget(Ye),Ue.updateRenderTargetMipmap(Ye)),S.setRenderTarget(Oe),S.setClearColor($,Z),S.toneMapping=$e}function pr(D,j,re){const Y=j.isScene===!0?j.overrideMaterial:null;for(let se=0,Oe=D.length;se<Oe;se++){const $e=D[se],Ke=$e.object,Qe=$e.geometry,lt=Y===null?$e.material:Y,Ze=$e.group;Ke.layers.test(re.layers)&&Ns(Ke,j,re,Qe,lt,Ze)}}function Ns(D,j,re,Y,se,Oe){D.onBeforeRender(S,j,re,Y,se,Oe),D.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),se.onBeforeRender(S,j,re,Y,D,Oe),se.transparent===!0&&se.side===Oi&&se.forceSinglePass===!1?(se.side=Ln,se.needsUpdate=!0,S.renderBufferDirect(re,j,Y,se,D,Oe),se.side=ur,se.needsUpdate=!0,S.renderBufferDirect(re,j,Y,se,D,Oe),se.side=Oi):S.renderBufferDirect(re,j,Y,se,D,Oe),D.onAfterRender(S,j,re,Y,se,Oe)}function mr(D,j,re){j.isScene!==!0&&(j=Et);const Y=Ie.get(D),se=y.state.lights,Oe=y.state.shadowsArray,$e=se.state.version,Ke=J.getParameters(D,se.state,Oe,j,re),Qe=J.getProgramCacheKey(Ke);let lt=Y.programs;Y.environment=D.isMeshStandardMaterial?j.environment:null,Y.fog=j.fog,Y.envMap=(D.isMeshStandardMaterial?dt:et).get(D.envMap||Y.environment),lt===void 0&&(D.addEventListener("dispose",Re),lt=new Map,Y.programs=lt);let Ze=lt.get(Qe);if(Ze!==void 0){if(Y.currentProgram===Ze&&Y.lightsStateVersion===$e)return ui(D,Ke),Ze}else Ke.uniforms=J.getUniforms(D),D.onBuild(re,Ke,S),D.onBeforeCompile(Ke,S),Ze=J.acquireProgram(Ke,Qe),lt.set(Qe,Ze),Y.uniforms=Ke.uniforms;const rt=Y.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(rt.clippingPlanes=He.uniform),ui(D,Ke),Y.needsLights=Va(D),Y.lightsStateVersion=$e,Y.needsLights&&(rt.ambientLightColor.value=se.state.ambient,rt.lightProbe.value=se.state.probe,rt.directionalLights.value=se.state.directional,rt.directionalLightShadows.value=se.state.directionalShadow,rt.spotLights.value=se.state.spot,rt.spotLightShadows.value=se.state.spotShadow,rt.rectAreaLights.value=se.state.rectArea,rt.ltc_1.value=se.state.rectAreaLTC1,rt.ltc_2.value=se.state.rectAreaLTC2,rt.pointLights.value=se.state.point,rt.pointLightShadows.value=se.state.pointShadow,rt.hemisphereLights.value=se.state.hemi,rt.directionalShadowMap.value=se.state.directionalShadowMap,rt.directionalShadowMatrix.value=se.state.directionalShadowMatrix,rt.spotShadowMap.value=se.state.spotShadowMap,rt.spotLightMatrix.value=se.state.spotLightMatrix,rt.spotLightMap.value=se.state.spotLightMap,rt.pointShadowMap.value=se.state.pointShadowMap,rt.pointShadowMatrix.value=se.state.pointShadowMatrix);const Dt=Ze.getUniforms(),zt=Hl.seqWithValue(Dt.seq,rt);return Y.currentProgram=Ze,Y.uniformsList=zt,Ze}function ui(D,j){const re=Ie.get(D);re.outputColorSpace=j.outputColorSpace,re.instancing=j.instancing,re.instancingColor=j.instancingColor,re.skinning=j.skinning,re.morphTargets=j.morphTargets,re.morphNormals=j.morphNormals,re.morphColors=j.morphColors,re.morphTargetsCount=j.morphTargetsCount,re.numClippingPlanes=j.numClippingPlanes,re.numIntersection=j.numClipIntersection,re.vertexAlphas=j.vertexAlphas,re.vertexTangents=j.vertexTangents,re.toneMapping=j.toneMapping}function Fs(D,j,re,Y,se){j.isScene!==!0&&(j=Et),Ue.resetTextureUnits();const Oe=j.fog,$e=Y.isMeshStandardMaterial?j.environment:null,Ke=U===null?S.outputColorSpace:U.isXRRenderTarget===!0?U.texture.colorSpace:_i,Qe=(Y.isMeshStandardMaterial?dt:et).get(Y.envMap||$e),lt=Y.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,Ze=!!re.attributes.tangent&&(!!Y.normalMap||Y.anisotropy>0),rt=!!re.morphAttributes.position,Dt=!!re.morphAttributes.normal,zt=!!re.morphAttributes.color;let jt=or;Y.toneMapped&&(U===null||U.isXRRenderTarget===!0)&&(jt=S.toneMapping);const Xn=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,Vt=Xn!==void 0?Xn.length:0,ht=Ie.get(Y),Br=y.state.lights;if(Ce===!0&&(we===!0||D!==A)){const gn=D===A&&Y.id===B;He.setState(Y,D,gn)}let At=!1;Y.version===ht.__version?(ht.needsLights&&ht.lightsStateVersion!==Br.state.version||ht.outputColorSpace!==Ke||se.isInstancedMesh&&ht.instancing===!1||!se.isInstancedMesh&&ht.instancing===!0||se.isSkinnedMesh&&ht.skinning===!1||!se.isSkinnedMesh&&ht.skinning===!0||se.isInstancedMesh&&ht.instancingColor===!0&&se.instanceColor===null||se.isInstancedMesh&&ht.instancingColor===!1&&se.instanceColor!==null||ht.envMap!==Qe||Y.fog===!0&&ht.fog!==Oe||ht.numClippingPlanes!==void 0&&(ht.numClippingPlanes!==He.numPlanes||ht.numIntersection!==He.numIntersection)||ht.vertexAlphas!==lt||ht.vertexTangents!==Ze||ht.morphTargets!==rt||ht.morphNormals!==Dt||ht.morphColors!==zt||ht.toneMapping!==jt||xe.isWebGL2===!0&&ht.morphTargetsCount!==Vt)&&(At=!0):(At=!0,ht.__version=Y.version);let si=ht.currentProgram;At===!0&&(si=mr(Y,j,se));let Bs=!1,Vi=!1,Ci=!1;const qt=si.getUniforms(),hi=ht.uniforms;if(pe.useProgram(si.program)&&(Bs=!0,Vi=!0,Ci=!0),Y.id!==B&&(B=Y.id,Vi=!0),Bs||A!==D){qt.setValue(k,"projectionMatrix",D.projectionMatrix),qt.setValue(k,"viewMatrix",D.matrixWorldInverse);const gn=qt.map.cameraPosition;gn!==void 0&&gn.setValue(k,gt.setFromMatrixPosition(D.matrixWorld)),xe.logarithmicDepthBuffer&&qt.setValue(k,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&qt.setValue(k,"isOrthographic",D.isOrthographicCamera===!0),A!==D&&(A=D,Vi=!0,Ci=!0)}if(se.isSkinnedMesh){qt.setOptional(k,se,"bindMatrix"),qt.setOptional(k,se,"bindMatrixInverse");const gn=se.skeleton;gn&&(xe.floatVertexTextures?(gn.boneTexture===null&&gn.computeBoneTexture(),qt.setValue(k,"boneTexture",gn.boneTexture,Ue),qt.setValue(k,"boneTextureSize",gn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ri=re.morphAttributes;if((Ri.position!==void 0||Ri.normal!==void 0||Ri.color!==void 0&&xe.isWebGL2===!0)&&qe.update(se,re,si),(Vi||ht.receiveShadow!==se.receiveShadow)&&(ht.receiveShadow=se.receiveShadow,qt.setValue(k,"receiveShadow",se.receiveShadow)),Y.isMeshGouraudMaterial&&Y.envMap!==null&&(hi.envMap.value=Qe,hi.flipEnvMap.value=Qe.isCubeTexture&&Qe.isRenderTargetTexture===!1?-1:1),Vi&&(qt.setValue(k,"toneMappingExposure",S.toneMappingExposure),ht.needsLights&&Ha(hi,Ci),Oe&&Y.fog===!0&&ve.refreshFogUniforms(hi,Oe),ve.refreshMaterialUniforms(hi,Y,ae,ie,Ye),Hl.upload(k,ht.uniformsList,hi,Ue)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Hl.upload(k,ht.uniformsList,hi,Ue),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&qt.setValue(k,"center",se.center),qt.setValue(k,"modelViewMatrix",se.modelViewMatrix),qt.setValue(k,"normalMatrix",se.normalMatrix),qt.setValue(k,"modelMatrix",se.matrixWorld),Y.isShaderMaterial||Y.isRawShaderMaterial){const gn=Y.uniformsGroups;for(let zr=0,Ga=gn.length;zr<Ga;zr++)if(xe.isWebGL2){const zs=gn[zr];ct.update(zs,si),ct.bind(zs,si)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return si}function Ha(D,j){D.ambientLightColor.needsUpdate=j,D.lightProbe.needsUpdate=j,D.directionalLights.needsUpdate=j,D.directionalLightShadows.needsUpdate=j,D.pointLights.needsUpdate=j,D.pointLightShadows.needsUpdate=j,D.spotLights.needsUpdate=j,D.spotLightShadows.needsUpdate=j,D.rectAreaLights.needsUpdate=j,D.hemisphereLights.needsUpdate=j}function Va(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return O},this.getRenderTarget=function(){return U},this.setRenderTargetTextures=function(D,j,re){Ie.get(D.texture).__webglTexture=j,Ie.get(D.depthTexture).__webglTexture=re;const Y=Ie.get(D);Y.__hasExternalTextures=!0,Y.__hasExternalTextures&&(Y.__autoAllocateDepthBuffer=re===void 0,Y.__autoAllocateDepthBuffer||le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,j){const re=Ie.get(D);re.__webglFramebuffer=j,re.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(D,j=0,re=0){U=D,R=j,O=re;let Y=!0,se=null,Oe=!1,$e=!1;if(D){const Qe=Ie.get(D);Qe.__useDefaultFramebuffer!==void 0?(pe.bindFramebuffer(k.FRAMEBUFFER,null),Y=!1):Qe.__webglFramebuffer===void 0?Ue.setupRenderTarget(D):Qe.__hasExternalTextures&&Ue.rebindTextures(D,Ie.get(D.texture).__webglTexture,Ie.get(D.depthTexture).__webglTexture);const lt=D.texture;(lt.isData3DTexture||lt.isDataArrayTexture||lt.isCompressedArrayTexture)&&($e=!0);const Ze=Ie.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(Ze[j])?se=Ze[j][re]:se=Ze[j],Oe=!0):xe.isWebGL2&&D.samples>0&&Ue.useMultisampledRTT(D)===!1?se=Ie.get(D).__webglMultisampledFramebuffer:Array.isArray(Ze)?se=Ze[re]:se=Ze,L.copy(D.viewport),Q.copy(D.scissor),he=D.scissorTest}else L.copy(ue).multiplyScalar(ae).floor(),Q.copy(q).multiplyScalar(ae).floor(),he=oe;if(pe.bindFramebuffer(k.FRAMEBUFFER,se)&&xe.drawBuffers&&Y&&pe.drawBuffers(D,se),pe.viewport(L),pe.scissor(Q),pe.setScissorTest(he),Oe){const Qe=Ie.get(D.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+j,Qe.__webglTexture,re)}else if($e){const Qe=Ie.get(D.texture),lt=j||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,Qe.__webglTexture,re||0,lt)}B=-1},this.readRenderTargetPixels=function(D,j,re,Y,se,Oe,$e){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ke=Ie.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&$e!==void 0&&(Ke=Ke[$e]),Ke){pe.bindFramebuffer(k.FRAMEBUFFER,Ke);try{const Qe=D.texture,lt=Qe.format,Ze=Qe.type;if(lt!==ei&&Fe.convert(lt)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const rt=Ze===Ca&&(le.has("EXT_color_buffer_half_float")||xe.isWebGL2&&le.has("EXT_color_buffer_float"));if(Ze!==cr&&Fe.convert(Ze)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ze===Ui&&(xe.isWebGL2||le.has("OES_texture_float")||le.has("WEBGL_color_buffer_float")))&&!rt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j>=0&&j<=D.width-Y&&re>=0&&re<=D.height-se&&k.readPixels(j,re,Y,se,Fe.convert(lt),Fe.convert(Ze),Oe)}finally{const Qe=U!==null?Ie.get(U).__webglFramebuffer:null;pe.bindFramebuffer(k.FRAMEBUFFER,Qe)}}},this.copyFramebufferToTexture=function(D,j,re=0){const Y=Math.pow(2,-re),se=Math.floor(j.image.width*Y),Oe=Math.floor(j.image.height*Y);Ue.setTexture2D(j,0),k.copyTexSubImage2D(k.TEXTURE_2D,re,0,0,D.x,D.y,se,Oe),pe.unbindTexture()},this.copyTextureToTexture=function(D,j,re,Y=0){const se=j.image.width,Oe=j.image.height,$e=Fe.convert(re.format),Ke=Fe.convert(re.type);Ue.setTexture2D(re,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,re.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,re.unpackAlignment),j.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,Y,D.x,D.y,se,Oe,$e,Ke,j.image.data):j.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,Y,D.x,D.y,j.mipmaps[0].width,j.mipmaps[0].height,$e,j.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,Y,D.x,D.y,$e,Ke,j.image),Y===0&&re.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),pe.unbindTexture()},this.copyTextureToTexture3D=function(D,j,re,Y,se=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Oe=D.max.x-D.min.x+1,$e=D.max.y-D.min.y+1,Ke=D.max.z-D.min.z+1,Qe=Fe.convert(Y.format),lt=Fe.convert(Y.type);let Ze;if(Y.isData3DTexture)Ue.setTexture3D(Y,0),Ze=k.TEXTURE_3D;else if(Y.isDataArrayTexture)Ue.setTexture2DArray(Y,0),Ze=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,Y.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,Y.unpackAlignment);const rt=k.getParameter(k.UNPACK_ROW_LENGTH),Dt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),zt=k.getParameter(k.UNPACK_SKIP_PIXELS),jt=k.getParameter(k.UNPACK_SKIP_ROWS),Xn=k.getParameter(k.UNPACK_SKIP_IMAGES),Vt=re.isCompressedTexture?re.mipmaps[0]:re.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,Vt.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Vt.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,D.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,D.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,D.min.z),re.isDataTexture||re.isData3DTexture?k.texSubImage3D(Ze,se,j.x,j.y,j.z,Oe,$e,Ke,Qe,lt,Vt.data):re.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(Ze,se,j.x,j.y,j.z,Oe,$e,Ke,Qe,Vt.data)):k.texSubImage3D(Ze,se,j.x,j.y,j.z,Oe,$e,Ke,Qe,lt,Vt),k.pixelStorei(k.UNPACK_ROW_LENGTH,rt),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Dt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,zt),k.pixelStorei(k.UNPACK_SKIP_ROWS,jt),k.pixelStorei(k.UNPACK_SKIP_IMAGES,Xn),se===0&&Y.generateMipmaps&&k.generateMipmap(Ze),pe.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?Ue.setTextureCube(D,0):D.isData3DTexture?Ue.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?Ue.setTexture2DArray(D,0):Ue.setTexture2D(D,0),pe.unbindTexture()},this.resetState=function(){R=0,O=0,U=null,pe.reset(),Be.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ni}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Bt?lr:Fo}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===lr?Bt:_i}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class R0 extends ep{}R0.prototype.isWebGL1Renderer=!0;class au{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new au(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class ou{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new ou(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}let tp=class extends St{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}};class cu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Bo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Cn=new N;class Ps{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix4(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyNormalMatrix(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.transformDirection(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=kn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=kn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=kn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=kn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Lt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ps(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class np extends An{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let pa;const mo=new N,ma=new N,ga=new N,_a=new fe,go=new fe,I0=new it,fl=new N,_o=new N,dl=new N,r_=new fe,If=new fe,s_=new fe;class L0 extends St{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",pa===void 0){pa=new pt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new cu(t,5);pa.setIndex([0,1,2,0,2,3]),pa.setAttribute("position",new Ps(n,3,0,!1)),pa.setAttribute("uv",new Ps(n,2,3,!1))}this.geometry=pa,this.material=e!==void 0?e:new np,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ma.setFromMatrixScale(this.matrixWorld),I0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ga.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ma.multiplyScalar(-ga.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;pl(fl.set(-.5,-.5,0),ga,a,ma,i,s),pl(_o.set(.5,-.5,0),ga,a,ma,i,s),pl(dl.set(.5,.5,0),ga,a,ma,i,s),r_.set(0,0),If.set(1,0),s_.set(1,1);let o=e.ray.intersectTriangle(fl,_o,dl,!1,mo);if(o===null&&(pl(_o.set(-.5,.5,0),ga,a,ma,i,s),If.set(0,1),o=e.ray.intersectTriangle(fl,dl,_o,!1,mo),o===null))return;const l=e.ray.origin.distanceTo(mo);l<e.near||l>e.far||t.push({distance:l,point:mo.clone(),uv:zn.getInterpolation(mo,fl,_o,dl,r_,If,s_,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function pl(r,e,t,n,i,s){_a.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(go.x=s*_a.x-i*_a.y,go.y=i*_a.x+s*_a.y):go.copy(_a),r.copy(e),r.x+=go.x,r.y+=go.y,r.applyMatrix4(I0)}const ml=new N,a_=new N;class D0 extends St{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ml.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(ml);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ml.setFromMatrixPosition(e.matrixWorld),a_.setFromMatrixPosition(this.matrixWorld);const n=ml.distanceTo(a_)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const o_=new N,c_=new Ct,l_=new Ct,YL=new N,u_=new it,va=new N,Lf=new Ei,h_=new it,Df=new Oa;class O0 extends mn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new it,this.bindMatrixInverse=new it,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ki),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)va.fromBufferAttribute(t,n),this.applyBoneTransform(n,va),this.boundingBox.expandByPoint(va)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ei),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)va.fromBufferAttribute(t,n),this.applyBoneTransform(n,va),this.boundingSphere.expandByPoint(va)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Lf.copy(this.boundingSphere),Lf.applyMatrix4(i),e.ray.intersectsSphere(Lf)!==!1&&(h_.copy(i).invert(),Df.copy(e.ray).applyMatrix4(h_),!(this.boundingBox!==null&&Df.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Df)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;c_.fromBufferAttribute(i.attributes.skinIndex,e),l_.fromBufferAttribute(i.attributes.skinWeight,e),o_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=l_.getComponent(s);if(a!==0){const o=c_.getComponent(s);u_.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(YL.copy(o_).applyMatrix4(u_),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class ip extends St{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ea extends en{constructor(e=null,t=1,n=1,i,s,a,o,l,u=$t,f=$t,p,d){super(null,a,o,l,u,f,i,s,p,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const f_=new it,$L=new it;class lu{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new it)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new it;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const o=e[s]?e[s].matrixWorld:$L;f_.multiplyMatrices(o,t[s]),f_.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new lu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=d0(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ea(t,e,e,ei,Ui);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new ip),this.bones.push(a),this.boneInverses.push(new it().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class La extends Lt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ya=new it,d_=new it,gl=[],p_=new ki,ZL=new it,vo=new mn,yo=new Ei;class U0 extends mn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new La(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,ZL)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ki),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ya),p_.copy(e.boundingBox).applyMatrix4(ya),this.boundingBox.union(p_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ei),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ya),yo.copy(e.boundingSphere).applyMatrix4(ya),this.boundingSphere.union(yo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(vo.geometry=this.geometry,vo.material=this.material,vo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yo.copy(this.boundingSphere),yo.applyMatrix4(n),e.ray.intersectsSphere(yo)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,ya),d_.multiplyMatrices(n,ya),vo.matrixWorld=d_,vo.raycast(e,gl);for(let a=0,o=gl.length;a<o;a++){const l=gl[a];l.instanceId=s,l.object=this,t.push(l)}gl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new La(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Dn extends An{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const m_=new N,g_=new N,__=new it,Of=new Oa,_l=new Ei;class Dr extends St{constructor(e=new pt,t=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)m_.fromBufferAttribute(t,i-1),g_.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=m_.distanceTo(g_);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_l.copy(n.boundingSphere),_l.applyMatrix4(i),_l.radius+=s,e.ray.intersectsSphere(_l)===!1)return;__.copy(i).invert(),Of.copy(e.ray).applyMatrix4(__);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,u=new N,f=new N,p=new N,d=new N,g=this.isLineSegments?2:1,v=n.index,y=n.attributes.position;if(v!==null){const _=Math.max(0,a.start),T=Math.min(v.count,a.start+a.count);for(let S=_,M=T-1;S<M;S+=g){const R=v.getX(S),O=v.getX(S+1);if(u.fromBufferAttribute(y,R),f.fromBufferAttribute(y,O),Of.distanceSqToSegment(u,f,d,p)>l)continue;d.applyMatrix4(this.matrixWorld);const B=e.ray.origin.distanceTo(d);B<e.near||B>e.far||t.push({distance:B,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,a.start),T=Math.min(y.count,a.start+a.count);for(let S=_,M=T-1;S<M;S+=g){if(u.fromBufferAttribute(y,S),f.fromBufferAttribute(y,S+1),Of.distanceSqToSegment(u,f,d,p)>l)continue;d.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(d);O<e.near||O>e.far||t.push({distance:O,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}const v_=new N,y_=new N;class Hi extends Dr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)v_.fromBufferAttribute(t,i),y_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+v_.distanceTo(y_);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class N0 extends Dr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class rp extends An{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const x_=new it,Ad=new Oa,vl=new Ei,yl=new N;class F0 extends St{constructor(e=new pt,t=new rp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),vl.copy(n.boundingSphere),vl.applyMatrix4(i),vl.radius+=s,e.ray.intersectsSphere(vl)===!1)return;x_.copy(i).invert(),Ad.copy(e.ray).applyMatrix4(x_);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,u=n.index,p=n.attributes.position;if(u!==null){const d=Math.max(0,a.start),g=Math.min(u.count,a.start+a.count);for(let v=d,b=g;v<b;v++){const y=u.getX(v);yl.fromBufferAttribute(p,y),b_(yl,y,l,i,e,t,this)}}else{const d=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let v=d,b=g;v<b;v++)yl.fromBufferAttribute(p,v),b_(yl,v,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function b_(r,e,t,n,i,s,a){const o=Ad.distanceSqToPoint(r);if(o<t){const l=new N;Ad.closestPointToPoint(r,l),l.applyMatrix4(n);const u=i.ray.origin.distanceTo(l);if(u<i.near||u>i.far)return;s.push({distance:u,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class JL extends en{constructor(e,t,n,i,s,a,o,l,u){super(e,t,n,i,s,a,o,l,u),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Zt,this.magFilter=s!==void 0?s:Zt,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class KL extends en{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=$t,this.minFilter=$t,this.generateMipmaps=!1,this.needsUpdate=!0}}class uu extends en{constructor(e,t,n,i,s,a,o,l,u,f,p,d){super(null,a,o,l,u,f,i,s,p,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class QL extends uu{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=wn}}class eD extends uu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,hr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class tD extends en{constructor(e,t,n,i,s,a,o,l,u){super(e,t,n,i,s,a,o,l,u),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ai{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let o=0,l=s-1,u;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),u=n[i]-a,u<0)o=i+1;else if(u>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(s-1);const f=n[i],d=n[i+1]-f,g=(a-f)/d;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),o=this.getPoint(s),l=t||(a.isVector2?new fe:new N);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],s=[],a=[],o=new N,l=new it;for(let g=0;g<=e;g++){const v=g/e;i[g]=this.getTangentAt(v,new N)}s[0]=new N,a[0]=new N;let u=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),d=Math.abs(i[0].z);f<=u&&(u=f,n.set(1,0,0)),p<=u&&(u=p,n.set(0,1,0)),d<=u&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],o),a[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),a[g]=a[g-1].clone(),o.crossVectors(i[g-1],i[g]),o.length()>Number.EPSILON){o.normalize();const v=Math.acos(Xt(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(l.makeRotationAxis(o,v))}a[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(Xt(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(o.crossVectors(s[0],s[e]))>0&&(g=-g);for(let v=1;v<=e;v++)s[v].applyMatrix4(l.makeRotationAxis(i[v],g*v)),a[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class hu extends Ai{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),u=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),d=l-this.aX,g=u-this.aY;l=d*f-g*p+this.aX,u=d*p+g*f+this.aY}return n.set(l,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class B0 extends hu{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function sp(){let r=0,e=0,t=0,n=0;function i(s,a,o,l){r=s,e=o,t=-3*s+3*a-2*o-l,n=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,u){i(a,o,u*(o-s),u*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,u,f,p){let d=(a-s)/u-(o-s)/(u+f)+(o-a)/f,g=(o-a)/f-(l-a)/(f+p)+(l-o)/p;d*=f,g*=f,i(a,o,d,g)},calc:function(s){const a=s*s,o=a*s;return r+e*s+t*a+n*o}}}const xl=new N,Uf=new sp,Nf=new sp,Ff=new sp;class z0 extends Ai{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let u,f;this.closed||o>0?u=i[(o-1)%s]:(xl.subVectors(i[0],i[1]).add(i[0]),u=xl);const p=i[o%s],d=i[(o+1)%s];if(this.closed||o+2<s?f=i[(o+2)%s]:(xl.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=xl),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let v=Math.pow(u.distanceToSquared(p),g),b=Math.pow(p.distanceToSquared(d),g),y=Math.pow(d.distanceToSquared(f),g);b<1e-4&&(b=1),v<1e-4&&(v=b),y<1e-4&&(y=b),Uf.initNonuniformCatmullRom(u.x,p.x,d.x,f.x,v,b,y),Nf.initNonuniformCatmullRom(u.y,p.y,d.y,f.y,v,b,y),Ff.initNonuniformCatmullRom(u.z,p.z,d.z,f.z,v,b,y)}else this.curveType==="catmullrom"&&(Uf.initCatmullRom(u.x,p.x,d.x,f.x,this.tension),Nf.initCatmullRom(u.y,p.y,d.y,f.y,this.tension),Ff.initCatmullRom(u.z,p.z,d.z,f.z,this.tension));return n.set(Uf.calc(l),Nf.calc(l),Ff.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function S_(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,o=r*r,l=r*o;return(2*t-2*n+s+a)*l+(-3*t+3*n-2*s-a)*o+s*r+t}function nD(r,e){const t=1-r;return t*t*e}function iD(r,e){return 2*(1-r)*r*e}function rD(r,e){return r*r*e}function Eo(r,e,t,n){return nD(r,e)+iD(r,t)+rD(r,n)}function sD(r,e){const t=1-r;return t*t*t*e}function aD(r,e){const t=1-r;return 3*t*t*r*e}function oD(r,e){return 3*(1-r)*r*r*e}function cD(r,e){return r*r*r*e}function Ao(r,e,t,n,i){return sD(r,e)+aD(r,t)+oD(r,n)+cD(r,i)}class ap extends Ai{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Ao(e,i.x,s.x,a.x,o.x),Ao(e,i.y,s.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class k0 extends Ai{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Ao(e,i.x,s.x,a.x,o.x),Ao(e,i.y,s.y,a.y,o.y),Ao(e,i.z,s.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class fu extends Ai{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class H0 extends Ai{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class op extends Ai{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Eo(e,i.x,s.x,a.x),Eo(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cp extends Ai{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Eo(e,i.x,s.x,a.x),Eo(e,i.y,s.y,a.y),Eo(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lp extends Ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),o=s-a,l=i[a===0?a:a-1],u=i[a],f=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(S_(o,l.x,u.x,f.x,p.x),S_(o,l.y,u.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var up=Object.freeze({__proto__:null,ArcCurve:B0,CatmullRomCurve3:z0,CubicBezierCurve:ap,CubicBezierCurve3:k0,EllipseCurve:hu,LineCurve:fu,LineCurve3:H0,QuadraticBezierCurve:op,QuadraticBezierCurve3:cp,SplineCurve:lp});class V0 extends Ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new fu(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,o=this.curves[s],l=o.getLength(),u=l===0?0:1-a/l;return o.getPointAt(u,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let u=0;u<l.length;u++){const f=l[u];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new up[i.type]().fromJSON(i))}return this}}class Ho extends V0{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new fu(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new op(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const o=new ap(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new lp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,o,l){const u=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+u,t+f,n,i,s,a,o,l),this}absellipse(e,t,n,i,s,a,o,l){const u=new hu(e,t,n,i,s,a,o,l);if(this.curves.length>0){const p=u.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(u);const f=u.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class tc extends pt{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Xt(i,0,Math.PI*2);const s=[],a=[],o=[],l=[],u=[],f=1/t,p=new N,d=new fe,g=new N,v=new N,b=new N;let y=0,_=0;for(let T=0;T<=e.length-1;T++)switch(T){case 0:y=e[T+1].x-e[T].x,_=e[T+1].y-e[T].y,g.x=_*1,g.y=-y,g.z=_*0,b.copy(g),g.normalize(),l.push(g.x,g.y,g.z);break;case e.length-1:l.push(b.x,b.y,b.z);break;default:y=e[T+1].x-e[T].x,_=e[T+1].y-e[T].y,g.x=_*1,g.y=-y,g.z=_*0,v.copy(g),g.x+=b.x,g.y+=b.y,g.z+=b.z,g.normalize(),l.push(g.x,g.y,g.z),b.copy(v)}for(let T=0;T<=t;T++){const S=n+T*f*i,M=Math.sin(S),R=Math.cos(S);for(let O=0;O<=e.length-1;O++){p.x=e[O].x*M,p.y=e[O].y,p.z=e[O].x*R,a.push(p.x,p.y,p.z),d.x=T/t,d.y=O/(e.length-1),o.push(d.x,d.y);const U=l[3*O+0]*M,B=l[3*O+1],A=l[3*O+0]*R;u.push(U,B,A)}}for(let T=0;T<t;T++)for(let S=0;S<e.length-1;S++){const M=S+T*e.length,R=M,O=M+e.length,U=M+e.length+1,B=M+1;s.push(R,O,B),s.push(U,B,O)}this.setIndex(s),this.setAttribute("position",new ke(a,3)),this.setAttribute("uv",new ke(o,2)),this.setAttribute("normal",new ke(u,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tc(e.points,e.segments,e.phiStart,e.phiLength)}}class du extends tc{constructor(e=1,t=1,n=4,i=8){const s=new Ho;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new du(e.radius,e.length,e.capSegments,e.radialSegments)}}class pu extends pt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],o=[],l=[],u=new N,f=new fe;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let p=0,d=3;p<=t;p++,d+=3){const g=n+p/t*i;u.x=e*Math.cos(g),u.y=e*Math.sin(g),a.push(u.x,u.y,u.z),o.push(0,0,1),f.x=(a[d]/e+1)/2,f.y=(a[d+1]/e+1)/2,l.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ke(a,3)),this.setAttribute("normal",new ke(o,3)),this.setAttribute("uv",new ke(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Na extends pt{constructor(e=1,t=1,n=1,i=32,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const u=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],d=[],g=[];let v=0;const b=[],y=n/2;let _=0;T(),a===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(f),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(d,3)),this.setAttribute("uv",new ke(g,2));function T(){const M=new N,R=new N;let O=0;const U=(t-e)/n;for(let B=0;B<=s;B++){const A=[],L=B/s,Q=L*(t-e)+e;for(let he=0;he<=i;he++){const $=he/i,Z=$*l+o,W=Math.sin(Z),ie=Math.cos(Z);R.x=Q*W,R.y=-L*n+y,R.z=Q*ie,p.push(R.x,R.y,R.z),M.set(W,U,ie).normalize(),d.push(M.x,M.y,M.z),g.push($,1-L),A.push(v++)}b.push(A)}for(let B=0;B<i;B++)for(let A=0;A<s;A++){const L=b[A][B],Q=b[A+1][B],he=b[A+1][B+1],$=b[A][B+1];f.push(L,Q,$),f.push(Q,he,$),O+=6}u.addGroup(_,O,0),_+=O}function S(M){const R=v,O=new fe,U=new N;let B=0;const A=M===!0?e:t,L=M===!0?1:-1;for(let he=1;he<=i;he++)p.push(0,y*L,0),d.push(0,L,0),g.push(.5,.5),v++;const Q=v;for(let he=0;he<=i;he++){const Z=he/i*l+o,W=Math.cos(Z),ie=Math.sin(Z);U.x=A*ie,U.y=y*L,U.z=A*W,p.push(U.x,U.y,U.z),d.push(0,L,0),O.x=W*.5+.5,O.y=ie*.5*L+.5,g.push(O.x,O.y),v++}for(let he=0;he<i;he++){const $=R+he,Z=Q+he;M===!0?f.push(Z,Z+1,$):f.push(Z+1,Z,$),B+=3}u.addGroup(_,B,M===!0?1:2),_+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Na(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class mu extends Na{constructor(e=1,t=1,n=32,i=1,s=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Nr extends pt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];o(i),u(n),f(),this.setAttribute("position",new ke(s,3)),this.setAttribute("normal",new ke(s.slice(),3)),this.setAttribute("uv",new ke(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(T){const S=new N,M=new N,R=new N;for(let O=0;O<t.length;O+=3)g(t[O+0],S),g(t[O+1],M),g(t[O+2],R),l(S,M,R,T)}function l(T,S,M,R){const O=R+1,U=[];for(let B=0;B<=O;B++){U[B]=[];const A=T.clone().lerp(M,B/O),L=S.clone().lerp(M,B/O),Q=O-B;for(let he=0;he<=Q;he++)he===0&&B===O?U[B][he]=A:U[B][he]=A.clone().lerp(L,he/Q)}for(let B=0;B<O;B++)for(let A=0;A<2*(O-B)-1;A++){const L=Math.floor(A/2);A%2===0?(d(U[B][L+1]),d(U[B+1][L]),d(U[B][L])):(d(U[B][L+1]),d(U[B+1][L+1]),d(U[B+1][L]))}}function u(T){const S=new N;for(let M=0;M<s.length;M+=3)S.x=s[M+0],S.y=s[M+1],S.z=s[M+2],S.normalize().multiplyScalar(T),s[M+0]=S.x,s[M+1]=S.y,s[M+2]=S.z}function f(){const T=new N;for(let S=0;S<s.length;S+=3){T.x=s[S+0],T.y=s[S+1],T.z=s[S+2];const M=y(T)/2/Math.PI+.5,R=_(T)/Math.PI+.5;a.push(M,1-R)}v(),p()}function p(){for(let T=0;T<a.length;T+=6){const S=a[T+0],M=a[T+2],R=a[T+4],O=Math.max(S,M,R),U=Math.min(S,M,R);O>.9&&U<.1&&(S<.2&&(a[T+0]+=1),M<.2&&(a[T+2]+=1),R<.2&&(a[T+4]+=1))}}function d(T){s.push(T.x,T.y,T.z)}function g(T,S){const M=T*3;S.x=e[M+0],S.y=e[M+1],S.z=e[M+2]}function v(){const T=new N,S=new N,M=new N,R=new N,O=new fe,U=new fe,B=new fe;for(let A=0,L=0;A<s.length;A+=9,L+=6){T.set(s[A+0],s[A+1],s[A+2]),S.set(s[A+3],s[A+4],s[A+5]),M.set(s[A+6],s[A+7],s[A+8]),O.set(a[L+0],a[L+1]),U.set(a[L+2],a[L+3]),B.set(a[L+4],a[L+5]),R.copy(T).add(S).add(M).divideScalar(3);const Q=y(R);b(O,L+0,T,Q),b(U,L+2,S,Q),b(B,L+4,M,Q)}}function b(T,S,M,R){R<0&&T.x===1&&(a[S]=T.x-1),M.x===0&&M.z===0&&(a[S]=R/2/Math.PI+.5)}function y(T){return Math.atan2(T.z,-T.x)}function _(T){return Math.atan2(-T.y,Math.sqrt(T.x*T.x+T.z*T.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nr(e.vertices,e.indices,e.radius,e.details)}}class gu extends Nr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gu(e.radius,e.detail)}}const bl=new N,Sl=new N,Bf=new N,Ml=new zn;class G0 extends pt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ws*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,u=[0,0,0],f=["a","b","c"],p=new Array(3),d={},g=[];for(let v=0;v<l;v+=3){a?(u[0]=a.getX(v),u[1]=a.getX(v+1),u[2]=a.getX(v+2)):(u[0]=v,u[1]=v+1,u[2]=v+2);const{a:b,b:y,c:_}=Ml;if(b.fromBufferAttribute(o,u[0]),y.fromBufferAttribute(o,u[1]),_.fromBufferAttribute(o,u[2]),Ml.getNormal(Bf),p[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,p[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let T=0;T<3;T++){const S=(T+1)%3,M=p[T],R=p[S],O=Ml[f[T]],U=Ml[f[S]],B=`${M}_${R}`,A=`${R}_${M}`;A in d&&d[A]?(Bf.dot(d[A].normal)<=s&&(g.push(O.x,O.y,O.z),g.push(U.x,U.y,U.z)),d[A]=null):B in d||(d[B]={index0:u[T],index1:u[S],normal:Bf.clone()})}}for(const v in d)if(d[v]){const{index0:b,index1:y}=d[v];bl.fromBufferAttribute(o,b),Sl.fromBufferAttribute(o,y),g.push(bl.x,bl.y,bl.z),g.push(Sl.x,Sl.y,Sl.z)}this.setAttribute("position",new ke(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Es extends Ho{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ho().fromJSON(i))}return this}}const lD={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=W0(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u,f,p,d,g;if(n&&(s=pD(r,e,s,t)),r.length>80*t){o=u=r[0],l=f=r[1];for(let v=t;v<i;v+=t)p=r[v],d=r[v+1],p<o&&(o=p),d<l&&(l=d),p>u&&(u=p),d>f&&(f=d);g=Math.max(u-o,f-l),g=g!==0?32767/g:0}return Vo(s,a,t,o,l,g,0),a}};function W0(r,e,t,n,i){let s,a;if(i===wD(r,e,t,n)>0)for(s=e;s<t;s+=n)a=M_(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=M_(s,r[s],r[s+1],a);return a&&_u(a,a.next)&&(Wo(a),a=a.next),a}function Cs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(_u(t,t.next)||Gt(t.prev,t,t.next)===0)){if(Wo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Vo(r,e,t,n,i,s,a){if(!r)return;!a&&s&&yD(r,n,i,s);let o=r,l,u;for(;r.prev!==r.next;){if(l=r.prev,u=r.next,s?hD(r,n,i,s):uD(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(u.i/t|0),Wo(r),r=u.next,o=u.next;continue}if(r=u,r===o){a?a===1?(r=fD(Cs(r),e,t),Vo(r,e,t,n,i,s,2)):a===2&&dD(r,e,t,n,i,s):Vo(Cs(r),e,t,n,i,s,1);break}}}function uD(r){const e=r.prev,t=r,n=r.next;if(Gt(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,o=e.y,l=t.y,u=n.y,f=i<s?i<a?i:a:s<a?s:a,p=o<l?o<u?o:u:l<u?l:u,d=i>s?i>a?i:a:s>a?s:a,g=o>l?o>u?o:u:l>u?l:u;let v=n.next;for(;v!==e;){if(v.x>=f&&v.x<=d&&v.y>=p&&v.y<=g&&Ma(i,o,s,l,a,u,v.x,v.y)&&Gt(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function hD(r,e,t,n){const i=r.prev,s=r,a=r.next;if(Gt(i,s,a)>=0)return!1;const o=i.x,l=s.x,u=a.x,f=i.y,p=s.y,d=a.y,g=o<l?o<u?o:u:l<u?l:u,v=f<p?f<d?f:d:p<d?p:d,b=o>l?o>u?o:u:l>u?l:u,y=f>p?f>d?f:d:p>d?p:d,_=Pd(g,v,e,t,n),T=Pd(b,y,e,t,n);let S=r.prevZ,M=r.nextZ;for(;S&&S.z>=_&&M&&M.z<=T;){if(S.x>=g&&S.x<=b&&S.y>=v&&S.y<=y&&S!==i&&S!==a&&Ma(o,f,l,p,u,d,S.x,S.y)&&Gt(S.prev,S,S.next)>=0||(S=S.prevZ,M.x>=g&&M.x<=b&&M.y>=v&&M.y<=y&&M!==i&&M!==a&&Ma(o,f,l,p,u,d,M.x,M.y)&&Gt(M.prev,M,M.next)>=0))return!1;M=M.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=b&&S.y>=v&&S.y<=y&&S!==i&&S!==a&&Ma(o,f,l,p,u,d,S.x,S.y)&&Gt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;M&&M.z<=T;){if(M.x>=g&&M.x<=b&&M.y>=v&&M.y<=y&&M!==i&&M!==a&&Ma(o,f,l,p,u,d,M.x,M.y)&&Gt(M.prev,M,M.next)>=0)return!1;M=M.nextZ}return!0}function fD(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!_u(i,s)&&X0(i,n,n.next,s)&&Go(i,s)&&Go(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Wo(n),Wo(n.next),n=r=s),n=n.next}while(n!==r);return Cs(n)}function dD(r,e,t,n,i,s){let a=r;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&SD(a,o)){let l=j0(a,o);a=Cs(a,a.next),l=Cs(l,l.next),Vo(a,e,t,n,i,s,0),Vo(l,e,t,n,i,s,0);return}o=o.next}a=a.next}while(a!==r)}function pD(r,e,t,n){const i=[];let s,a,o,l,u;for(s=0,a=e.length;s<a;s++)o=e[s]*n,l=s<a-1?e[s+1]*n:r.length,u=W0(r,o,l,n,!1),u===u.next&&(u.steiner=!0),i.push(bD(u));for(i.sort(mD),s=0;s<i.length;s++)t=gD(i[s],t);return t}function mD(r,e){return r.x-e.x}function gD(r,e){const t=_D(r,e);if(!t)return e;const n=j0(t,r);return Cs(n,n.next),Cs(t,t.next)}function _D(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const d=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===s))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,u=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=l&&s!==t.x&&Ma(a<u?s:n,a,l,u,a<u?n:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),Go(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&vD(i,t)))&&(i=t,f=p)),t=t.next;while(t!==o);return i}function vD(r,e){return Gt(r.prev,r,e.prev)<0&&Gt(e.next,r,r.next)<0}function yD(r,e,t,n){let i=r;do i.z===0&&(i.z=Pd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,xD(i)}function xD(r){let e,t,n,i,s,a,o,l,u=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,o=0,e=0;e<u&&(o++,n=n.nextZ,!!n);e++);for(l=u;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,u*=2}while(a>1);return r}function Pd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function bD(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ma(r,e,t,n,i,s,a,o){return(i-a)*(e-o)>=(r-a)*(s-o)&&(r-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(s-o)>=(i-a)*(n-o)}function SD(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!MD(r,e)&&(Go(r,e)&&Go(e,r)&&TD(r,e)&&(Gt(r.prev,r,e.prev)||Gt(r,e.prev,e))||_u(r,e)&&Gt(r.prev,r,r.next)>0&&Gt(e.prev,e,e.next)>0)}function Gt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function _u(r,e){return r.x===e.x&&r.y===e.y}function X0(r,e,t,n){const i=wl(Gt(r,e,t)),s=wl(Gt(r,e,n)),a=wl(Gt(t,n,r)),o=wl(Gt(t,n,e));return!!(i!==s&&a!==o||i===0&&Tl(r,t,e)||s===0&&Tl(r,n,e)||a===0&&Tl(t,r,n)||o===0&&Tl(t,e,n))}function Tl(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function wl(r){return r>0?1:r<0?-1:0}function MD(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&X0(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Go(r,e){return Gt(r.prev,r,r.next)<0?Gt(r,e,r.next)>=0&&Gt(r,r.prev,e)>=0:Gt(r,e,r.prev)<0||Gt(r,r.next,e)<0}function TD(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function j0(r,e){const t=new Cd(r.i,r.x,r.y),n=new Cd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function M_(r,e,t,n){const i=new Cd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Wo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Cd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function wD(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class Fi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Fi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];T_(e),w_(n,e);let a=e.length;t.forEach(T_);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,w_(n,t[l]);const o=lD.triangulate(n,i);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function T_(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function w_(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class vu extends pt{constructor(e=new Es([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let o=0,l=e.length;o<l;o++){const u=e[o];a(u)}this.setAttribute("position",new ke(i,3)),this.setAttribute("uv",new ke(s,2)),this.computeVertexNormals();function a(o){const l=[],u=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:g-.1,b=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,T=t.UVGenerator!==void 0?t.UVGenerator:ED;let S,M=!1,R,O,U,B;_&&(S=_.getSpacedPoints(f),M=!0,d=!1,R=_.computeFrenetFrames(f,!1),O=new N,U=new N,B=new N),d||(y=0,g=0,v=0,b=0);const A=o.extractPoints(u);let L=A.shape;const Q=A.holes;if(!Fi.isClockWise(L)){L=L.reverse();for(let k=0,Me=Q.length;k<Me;k++){const le=Q[k];Fi.isClockWise(le)&&(Q[k]=le.reverse())}}const $=Fi.triangulateShape(L,Q),Z=L;for(let k=0,Me=Q.length;k<Me;k++){const le=Q[k];L=L.concat(le)}function W(k,Me,le){return Me||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(Me,le)}const ie=L.length,ae=$.length;function ce(k,Me,le){let xe,pe,Ve;const Ie=k.x-Me.x,Ue=k.y-Me.y,et=le.x-k.x,dt=le.y-k.y,xt=Ie*Ie+Ue*Ue,F=Ie*dt-Ue*et;if(Math.abs(F)>Number.EPSILON){const P=Math.sqrt(xt),J=Math.sqrt(et*et+dt*dt),ve=Me.x-Ue/P,me=Me.y+Ie/P,ye=le.x-dt/J,He=le.y+et/J,be=((ye-ve)*dt-(He-me)*et)/(Ie*dt-Ue*et);xe=ve+Ie*be-k.x,pe=me+Ue*be-k.y;const K=xe*xe+pe*pe;if(K<=2)return new fe(xe,pe);Ve=Math.sqrt(K/2)}else{let P=!1;Ie>Number.EPSILON?et>Number.EPSILON&&(P=!0):Ie<-Number.EPSILON?et<-Number.EPSILON&&(P=!0):Math.sign(Ue)===Math.sign(dt)&&(P=!0),P?(xe=-Ue,pe=Ie,Ve=Math.sqrt(xt)):(xe=Ie,pe=Ue,Ve=Math.sqrt(xt/2))}return new fe(xe/Ve,pe/Ve)}const de=[];for(let k=0,Me=Z.length,le=Me-1,xe=k+1;k<Me;k++,le++,xe++)le===Me&&(le=0),xe===Me&&(xe=0),de[k]=ce(Z[k],Z[le],Z[xe]);const ue=[];let q,oe=de.concat();for(let k=0,Me=Q.length;k<Me;k++){const le=Q[k];q=[];for(let xe=0,pe=le.length,Ve=pe-1,Ie=xe+1;xe<pe;xe++,Ve++,Ie++)Ve===pe&&(Ve=0),Ie===pe&&(Ie=0),q[xe]=ce(le[xe],le[Ve],le[Ie]);ue.push(q),oe=oe.concat(q)}for(let k=0;k<y;k++){const Me=k/y,le=g*Math.cos(Me*Math.PI/2),xe=v*Math.sin(Me*Math.PI/2)+b;for(let pe=0,Ve=Z.length;pe<Ve;pe++){const Ie=W(Z[pe],de[pe],xe);Ne(Ie.x,Ie.y,-le)}for(let pe=0,Ve=Q.length;pe<Ve;pe++){const Ie=Q[pe];q=ue[pe];for(let Ue=0,et=Ie.length;Ue<et;Ue++){const dt=W(Ie[Ue],q[Ue],xe);Ne(dt.x,dt.y,-le)}}}const Ae=v+b;for(let k=0;k<ie;k++){const Me=d?W(L[k],oe[k],Ae):L[k];M?(U.copy(R.normals[0]).multiplyScalar(Me.x),O.copy(R.binormals[0]).multiplyScalar(Me.y),B.copy(S[0]).add(U).add(O),Ne(B.x,B.y,B.z)):Ne(Me.x,Me.y,0)}for(let k=1;k<=f;k++)for(let Me=0;Me<ie;Me++){const le=d?W(L[Me],oe[Me],Ae):L[Me];M?(U.copy(R.normals[k]).multiplyScalar(le.x),O.copy(R.binormals[k]).multiplyScalar(le.y),B.copy(S[k]).add(U).add(O),Ne(B.x,B.y,B.z)):Ne(le.x,le.y,p/f*k)}for(let k=y-1;k>=0;k--){const Me=k/y,le=g*Math.cos(Me*Math.PI/2),xe=v*Math.sin(Me*Math.PI/2)+b;for(let pe=0,Ve=Z.length;pe<Ve;pe++){const Ie=W(Z[pe],de[pe],xe);Ne(Ie.x,Ie.y,p+le)}for(let pe=0,Ve=Q.length;pe<Ve;pe++){const Ie=Q[pe];q=ue[pe];for(let Ue=0,et=Ie.length;Ue<et;Ue++){const dt=W(Ie[Ue],q[Ue],xe);M?Ne(dt.x,dt.y+S[f-1].y,S[f-1].x+le):Ne(dt.x,dt.y,p+le)}}}Ce(),we();function Ce(){const k=i.length/3;if(d){let Me=0,le=ie*Me;for(let xe=0;xe<ae;xe++){const pe=$[xe];Ge(pe[2]+le,pe[1]+le,pe[0]+le)}Me=f+y*2,le=ie*Me;for(let xe=0;xe<ae;xe++){const pe=$[xe];Ge(pe[0]+le,pe[1]+le,pe[2]+le)}}else{for(let Me=0;Me<ae;Me++){const le=$[Me];Ge(le[2],le[1],le[0])}for(let Me=0;Me<ae;Me++){const le=$[Me];Ge(le[0]+ie*f,le[1]+ie*f,le[2]+ie*f)}}n.addGroup(k,i.length/3-k,0)}function we(){const k=i.length/3;let Me=0;Ye(Z,Me),Me+=Z.length;for(let le=0,xe=Q.length;le<xe;le++){const pe=Q[le];Ye(pe,Me),Me+=pe.length}n.addGroup(k,i.length/3-k,1)}function Ye(k,Me){let le=k.length;for(;--le>=0;){const xe=le;let pe=le-1;pe<0&&(pe=k.length-1);for(let Ve=0,Ie=f+y*2;Ve<Ie;Ve++){const Ue=ie*Ve,et=ie*(Ve+1),dt=Me+xe+Ue,xt=Me+pe+Ue,F=Me+pe+et,P=Me+xe+et;gt(dt,xt,F,P)}}}function Ne(k,Me,le){l.push(k),l.push(Me),l.push(le)}function Ge(k,Me,le){Et(k),Et(Me),Et(le);const xe=i.length/3,pe=T.generateTopUV(n,i,xe-3,xe-2,xe-1);Xe(pe[0]),Xe(pe[1]),Xe(pe[2])}function gt(k,Me,le,xe){Et(k),Et(Me),Et(xe),Et(Me),Et(le),Et(xe);const pe=i.length/3,Ve=T.generateSideWallUV(n,i,pe-6,pe-3,pe-2,pe-1);Xe(Ve[0]),Xe(Ve[1]),Xe(Ve[3]),Xe(Ve[1]),Xe(Ve[2]),Xe(Ve[3])}function Et(k){i.push(l[k*3+0]),i.push(l[k*3+1]),i.push(l[k*3+2])}function Xe(k){s.push(k.x),s.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return AD(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=t[e.shapes[s]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new up[i.type]().fromJSON(i)),new vu(n,e.options)}}const ED={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],u=e[i*3],f=e[i*3+1];return[new fe(s,a),new fe(o,l),new fe(u,f)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],u=e[n*3],f=e[n*3+1],p=e[n*3+2],d=e[i*3],g=e[i*3+1],v=e[i*3+2],b=e[s*3],y=e[s*3+1],_=e[s*3+2];return Math.abs(o-f)<Math.abs(a-u)?[new fe(a,1-l),new fe(u,1-p),new fe(d,1-v),new fe(b,1-_)]:[new fe(o,1-l),new fe(f,1-p),new fe(g,1-v),new fe(y,1-_)]}};function AD(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class yu extends Nr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yu(e.radius,e.detail)}}class nc extends Nr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new nc(e.radius,e.detail)}}class xu extends pt{constructor(e=.5,t=1,n=32,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],u=[],f=[];let p=e;const d=(t-e)/i,g=new N,v=new fe;for(let b=0;b<=i;b++){for(let y=0;y<=n;y++){const _=s+y/n*a;g.x=p*Math.cos(_),g.y=p*Math.sin(_),l.push(g.x,g.y,g.z),u.push(0,0,1),v.x=(g.x/t+1)/2,v.y=(g.y/t+1)/2,f.push(v.x,v.y)}p+=d}for(let b=0;b<i;b++){const y=b*(n+1);for(let _=0;_<n;_++){const T=_+y,S=T,M=T+n+1,R=T+n+2,O=T+1;o.push(S,M,O),o.push(M,R,O)}}this.setIndex(o),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(u,3)),this.setAttribute("uv",new ke(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class bu extends pt{constructor(e=new Es([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)u(e);else for(let f=0;f<e.length;f++)u(e[f]),this.addGroup(o,l,f),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new ke(i,3)),this.setAttribute("normal",new ke(s,3)),this.setAttribute("uv",new ke(a,2));function u(f){const p=i.length/3,d=f.extractPoints(t);let g=d.shape;const v=d.holes;Fi.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=v.length;y<_;y++){const T=v[y];Fi.isClockWise(T)===!0&&(v[y]=T.reverse())}const b=Fi.triangulateShape(g,v);for(let y=0,_=v.length;y<_;y++){const T=v[y];g=g.concat(T)}for(let y=0,_=g.length;y<_;y++){const T=g[y];i.push(T.x,T.y,0),s.push(0,0,1),a.push(T.x,T.y)}for(let y=0,_=b.length;y<_;y++){const T=b[y],S=T[0]+p,M=T[1]+p,R=T[2]+p;n.push(S,M,R),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return PD(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new bu(n,e.curveSegments)}}function PD(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class ic extends pt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let u=0;const f=[],p=new N,d=new N,g=[],v=[],b=[],y=[];for(let _=0;_<=n;_++){const T=[],S=_/n;let M=0;_===0&&a===0?M=.5/t:_===n&&l===Math.PI&&(M=-.5/t);for(let R=0;R<=t;R++){const O=R/t;p.x=-e*Math.cos(i+O*s)*Math.sin(a+S*o),p.y=e*Math.cos(a+S*o),p.z=e*Math.sin(i+O*s)*Math.sin(a+S*o),v.push(p.x,p.y,p.z),d.copy(p).normalize(),b.push(d.x,d.y,d.z),y.push(O+M,1-S),T.push(u++)}f.push(T)}for(let _=0;_<n;_++)for(let T=0;T<t;T++){const S=f[_][T+1],M=f[_][T],R=f[_+1][T],O=f[_+1][T+1];(_!==0||a>0)&&g.push(S,M,O),(_!==n-1||l<Math.PI)&&g.push(M,R,O)}this.setIndex(g),this.setAttribute("position",new ke(v,3)),this.setAttribute("normal",new ke(b,3)),this.setAttribute("uv",new ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ic(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Su extends Nr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Su(e.radius,e.detail)}}class Mu extends pt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],u=[],f=new N,p=new N,d=new N;for(let g=0;g<=n;g++)for(let v=0;v<=i;v++){const b=v/i*s,y=g/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(b),p.y=(e+t*Math.cos(y))*Math.sin(b),p.z=t*Math.sin(y),o.push(p.x,p.y,p.z),f.x=e*Math.cos(b),f.y=e*Math.sin(b),d.subVectors(p,f).normalize(),l.push(d.x,d.y,d.z),u.push(v/i),u.push(g/n)}for(let g=1;g<=n;g++)for(let v=1;v<=i;v++){const b=(i+1)*g+v-1,y=(i+1)*(g-1)+v-1,_=(i+1)*(g-1)+v,T=(i+1)*g+v;a.push(b,y,T),a.push(y,_,T)}this.setIndex(a),this.setAttribute("position",new ke(o,3)),this.setAttribute("normal",new ke(l,3)),this.setAttribute("uv",new ke(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Tu extends pt{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],u=[],f=[],p=new N,d=new N,g=new N,v=new N,b=new N,y=new N,_=new N;for(let S=0;S<=n;++S){const M=S/n*s*Math.PI*2;T(M,s,a,e,g),T(M+.01,s,a,e,v),y.subVectors(v,g),_.addVectors(v,g),b.crossVectors(y,_),_.crossVectors(b,y),b.normalize(),_.normalize();for(let R=0;R<=i;++R){const O=R/i*Math.PI*2,U=-t*Math.cos(O),B=t*Math.sin(O);p.x=g.x+(U*_.x+B*b.x),p.y=g.y+(U*_.y+B*b.y),p.z=g.z+(U*_.z+B*b.z),l.push(p.x,p.y,p.z),d.subVectors(p,g).normalize(),u.push(d.x,d.y,d.z),f.push(S/n),f.push(R/i)}}for(let S=1;S<=n;S++)for(let M=1;M<=i;M++){const R=(i+1)*(S-1)+(M-1),O=(i+1)*S+(M-1),U=(i+1)*S+M,B=(i+1)*(S-1)+M;o.push(R,O,B),o.push(O,U,B)}this.setIndex(o),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(u,3)),this.setAttribute("uv",new ke(f,2));function T(S,M,R,O,U){const B=Math.cos(S),A=Math.sin(S),L=R/M*S,Q=Math.cos(L);U.x=O*(2+Q)*.5*B,U.y=O*(2+Q)*A*.5,U.z=O*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class wu extends pt{constructor(e=new cp(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new N,l=new N,u=new fe;let f=new N;const p=[],d=[],g=[],v=[];b(),this.setIndex(v),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(d,3)),this.setAttribute("uv",new ke(g,2));function b(){for(let S=0;S<t;S++)y(S);y(s===!1?t:0),T(),_()}function y(S){f=e.getPointAt(S/t,f);const M=a.normals[S],R=a.binormals[S];for(let O=0;O<=i;O++){const U=O/i*Math.PI*2,B=Math.sin(U),A=-Math.cos(U);l.x=A*M.x+B*R.x,l.y=A*M.y+B*R.y,l.z=A*M.z+B*R.z,l.normalize(),d.push(l.x,l.y,l.z),o.x=f.x+n*l.x,o.y=f.y+n*l.y,o.z=f.z+n*l.z,p.push(o.x,o.y,o.z)}}function _(){for(let S=1;S<=t;S++)for(let M=1;M<=i;M++){const R=(i+1)*(S-1)+(M-1),O=(i+1)*S+(M-1),U=(i+1)*S+M,B=(i+1)*(S-1)+M;v.push(R,O,B),v.push(O,U,B)}}function T(){for(let S=0;S<=t;S++)for(let M=0;M<=i;M++)u.x=S/t,u.y=M/i,g.push(u.x,u.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new wu(new up[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class q0 extends pt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,s=new N;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let u=0,f=l.length;u<f;++u){const p=l[u],d=p.start,g=p.count;for(let v=d,b=d+g;v<b;v+=3)for(let y=0;y<3;y++){const _=o.getX(v+y),T=o.getX(v+(y+1)%3);i.fromBufferAttribute(a,_),s.fromBufferAttribute(a,T),E_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let u=0;u<3;u++){const f=3*o+u,p=3*o+(u+1)%3;i.fromBufferAttribute(a,f),s.fromBufferAttribute(a,p),E_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function E_(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var A_=Object.freeze({__proto__:null,BoxGeometry:Is,CapsuleGeometry:du,CircleGeometry:pu,ConeGeometry:mu,CylinderGeometry:Na,DodecahedronGeometry:gu,EdgesGeometry:G0,ExtrudeGeometry:vu,IcosahedronGeometry:yu,LatheGeometry:tc,OctahedronGeometry:nc,PlaneGeometry:ec,PolyhedronGeometry:Nr,RingGeometry:xu,ShapeGeometry:bu,SphereGeometry:ic,TetrahedronGeometry:Su,TorusGeometry:Mu,TorusKnotGeometry:Tu,TubeGeometry:wu,WireframeGeometry:q0});class Y0 extends An{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class $0 extends zi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class hp extends An{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Z0 extends hp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Xt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class J0 extends An{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Zo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class K0 extends An{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Q0 extends An{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class ey extends An{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Zo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ty extends An{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ny extends Dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function li(r,e,t){return fp(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Ms(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function fp(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function iy(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Rd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const o=t[s]*e;for(let l=0;l!==e;++l)i[a++]=r[o+l]}return i}function dp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function CD(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const u=s.tracks[l],f=u.getValueSize(),p=[],d=[];for(let g=0;g<u.times.length;++g){const v=u.times[g]*i;if(!(v<t||v>=n)){p.push(u.times[g]);for(let b=0;b<f;++b)d.push(u.values[g*f+b])}}p.length!==0&&(u.times=Ms(p,u.times.constructor),u.values=Ms(d,u.values.constructor),a.push(u))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s}function RD(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const u=r.tracks.find(function(_){return _.name===o.name&&_.ValueTypeName===l});if(u===void 0)continue;let f=0;const p=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let d=0;const g=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=g/3);const v=o.times.length-1;let b;if(s<=o.times[0]){const _=f,T=p-f;b=li(o.values,_,T)}else if(s>=o.times[v]){const _=v*p+f,T=_+p-f;b=li(o.values,_,T)}else{const _=o.createInterpolant(),T=f,S=p-f;_.evaluate(s),b=li(_.resultBuffer,T,S)}l==="quaternion"&&new Gn().fromArray(b).normalize().conjugate().toArray(b);const y=u.times.length;for(let _=0;_<y;++_){const T=_*g+d;if(l==="quaternion")Gn.multiplyQuaternionsFlat(u.values,T,b,0,u.values,T);else{const S=g-d*2;for(let M=0;M<S;++M)u.values[T+M]-=b[M]}}}return r.blendMode=Xd,r}const ID={arraySlice:li,convertArray:Ms,isTypedArray:fp,getKeyframeOrder:iy,sortedArray:Rd,flattenJSON:dp,subclip:CD,makeClipAdditive:RD};class rc{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const o=t[1];e<o&&(n=2,s=o);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ry extends rc{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:xs,endingEnd:xs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,o=i[s],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case bs:s=e,o=2*t-n;break;case No:s=i.length-2,o=t+i[s]-i[s+1];break;default:s=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case bs:a=e,l=2*n-t;break;case No:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const u=(n-t)*.5,f=this.valueSize;this._weightPrev=u/(t-o),this._weightNext=u/(l-n),this._offsetPrev=s*f,this._offsetNext=a*f}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,u=l-o,f=this._offsetPrev,p=this._offsetNext,d=this._weightPrev,g=this._weightNext,v=(n-t)/(i-t),b=v*v,y=b*v,_=-d*y+2*d*b-d*v,T=(1+d)*y+(-1.5-2*d)*b+(-.5+d)*v+1,S=(-1-g)*y+(1.5+g)*b+.5*v,M=g*y-g*b;for(let R=0;R!==o;++R)s[R]=_*a[f+R]+T*a[u+R]+S*a[l+R]+M*a[p+R];return s}}class pp extends rc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,u=l-o,f=(n-t)/(i-t),p=1-f;for(let d=0;d!==o;++d)s[d]=a[u+d]*p+a[l+d]*f;return s}}class sy extends rc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Pi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ms(t,this.TimeBufferType),this.values=Ms(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ms(e.times,Array),values:Ms(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new sy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ry(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Oo:t=this.InterpolantFactoryMethodDiscrete;break;case Uo:t=this.InterpolantFactoryMethodLinear;break;case zl:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Oo;case this.InterpolantFactoryMethodLinear:return Uo;case this.InterpolantFactoryMethodSmooth:return zl}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=li(n,s,a),this.values=li(this.values,s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&fp(i))for(let o=0,l=i.length;o!==l;++o){const u=i[o];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,u),e=!1;break}}return e}optimize(){const e=li(this.times),t=li(this.values),n=this.getValueSize(),i=this.getInterpolation()===zl,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const u=e[o],f=e[o+1];if(u!==f&&(o!==1||u!==e[0]))if(i)l=!0;else{const p=o*n,d=p-n,g=p+n;for(let v=0;v!==n;++v){const b=t[p+v];if(b!==t[d+v]||b!==t[g+v]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const p=o*n,d=a*n;for(let g=0;g!==n;++g)t[d+g]=t[p+g]}++a}}if(s>0){e[a]=e[s];for(let o=s*n,l=a*n,u=0;u!==n;++u)t[l+u]=t[o+u];++a}return a!==e.length?(this.times=li(e,0,a),this.values=li(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=li(this.times,0),t=li(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Pi.prototype.TimeBufferType=Float32Array;Pi.prototype.ValueBufferType=Float32Array;Pi.prototype.DefaultInterpolation=Uo;class Ls extends Pi{}Ls.prototype.ValueTypeName="bool";Ls.prototype.ValueBufferType=Array;Ls.prototype.DefaultInterpolation=Oo;Ls.prototype.InterpolantFactoryMethodLinear=void 0;Ls.prototype.InterpolantFactoryMethodSmooth=void 0;class mp extends Pi{}mp.prototype.ValueTypeName="color";class Xo extends Pi{}Xo.prototype.ValueTypeName="number";class ay extends rc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let u=e*o;for(let f=u+o;u!==f;u+=4)Gn.slerpFlat(s,0,a,u-o,a,u,l);return s}}class Fa extends Pi{InterpolantFactoryMethodLinear(e){return new ay(this.times,this.values,this.getValueSize(),e)}}Fa.prototype.ValueTypeName="quaternion";Fa.prototype.DefaultInterpolation=Uo;Fa.prototype.InterpolantFactoryMethodSmooth=void 0;class Ds extends Pi{}Ds.prototype.ValueTypeName="string";Ds.prototype.ValueBufferType=Array;Ds.prototype.DefaultInterpolation=Oo;Ds.prototype.InterpolantFactoryMethodLinear=void 0;Ds.prototype.InterpolantFactoryMethodSmooth=void 0;class jo extends Pi{}jo.prototype.ValueTypeName="vector";class qo{constructor(e,t=-1,n,i=Ql){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(DD(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Pi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let o=0;o<s;o++){let l=[],u=[];l.push((o+s-1)%s,o,(o+1)%s),u.push(0,1,0);const f=iy(l);l=Rd(l,1,f),u=Rd(u,1,f),!i&&l[0]===0&&(l.push(s),u.push(u[0])),a.push(new Xo(".morphTargetInfluences["+t[o].name+"]",l,u).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const u=e[o],f=u.name.match(s);if(f&&f.length>1){const p=f[1];let d=i[p];d||(i[p]=d=[]),d.push(u)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,d,g,v,b){if(g.length!==0){const y=[],_=[];dp(g,y,_,v),y.length!==0&&b.push(new p(d,y,_))}},i=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const u=e.hierarchy||[];for(let p=0;p<u.length;p++){const d=u[p].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const g={};let v;for(v=0;v<d.length;v++)if(d[v].morphTargets)for(let b=0;b<d[v].morphTargets.length;b++)g[d[v].morphTargets[b]]=-1;for(const b in g){const y=[],_=[];for(let T=0;T!==d[v].morphTargets.length;++T){const S=d[v];y.push(S.time),_.push(S.morphTarget===b?1:0)}i.push(new Xo(".morphTargetInfluence["+b+"]",y,_))}l=g.length*a}else{const g=".bones["+t[p].name+"]";n(jo,g+".position",d,"pos",i),n(Fa,g+".quaternion",d,"rot",i),n(jo,g+".scale",d,"scl",i)}}return i.length===0?null:new this(s,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function LD(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xo;case"vector":case"vector2":case"vector3":case"vector4":return jo;case"color":return mp;case"quaternion":return Fa;case"bool":case"boolean":return Ls;case"string":return Ds}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function DD(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=LD(r.type);if(r.times===void 0){const t=[],n=[];dp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Rs={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class gp{constructor(e,t,n){const i=this;let s=!1,a=0,o=0,l;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){o++,s===!1&&i.onStart!==void 0&&i.onStart(f,a,o),s=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,o),a===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return l?l(f):f},this.setURLModifier=function(f){return l=f,this},this.addHandler=function(f,p){return u.push(f,p),this},this.removeHandler=function(f){const p=u.indexOf(f);return p!==-1&&u.splice(p,2),this},this.getHandler=function(f){for(let p=0,d=u.length;p<d;p+=2){const g=u[p],v=u[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return v}return null}}}const oy=new gp;class Wn{constructor(e){this.manager=e!==void 0?e:oy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Wn.DEFAULT_MATERIAL_NAME="__DEFAULT";const nr={};class OD extends Error{constructor(e,t){super(e),this.response=t}}class fr extends Wn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Rs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(nr[e]!==void 0){nr[e].push({onLoad:t,onProgress:n,onError:i});return}nr[e]=[],nr[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||u.body===void 0||u.body.getReader===void 0)return u;const f=nr[e],p=u.body.getReader(),d=u.headers.get("Content-Length")||u.headers.get("X-File-Size"),g=d?parseInt(d):0,v=g!==0;let b=0;const y=new ReadableStream({start(_){T();function T(){p.read().then(({done:S,value:M})=>{if(S)_.close();else{b+=M.byteLength;const R=new ProgressEvent("progress",{lengthComputable:v,loaded:b,total:g});for(let O=0,U=f.length;O<U;O++){const B=f[O];B.onProgress&&B.onProgress(R)}_.enqueue(M),T()}})}}});return new Response(y)}else throw new OD(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,u)}).then(u=>{switch(l){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(f=>new DOMParser().parseFromString(f,o));case"json":return u.json();default:if(o===void 0)return u.text();{const p=/charset="?([^;"\s]*)"?/i.exec(o),d=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(d);return u.arrayBuffer().then(v=>g.decode(v))}}}).then(u=>{Rs.add(e,u);const f=nr[e];delete nr[e];for(let p=0,d=f.length;p<d;p++){const g=f[p];g.onLoad&&g.onLoad(u)}}).catch(u=>{const f=nr[e];if(f===void 0)throw this.manager.itemError(e),u;delete nr[e];for(let p=0,d=f.length;p<d;p++){const g=f[p];g.onError&&g.onError(u)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class UD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new fr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=qo.parse(e[n]);t.push(i)}return t}}class ND extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],o=new uu,l=new fr(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let u=0;function f(p){l.load(e[p],function(d){const g=s.parse(d,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},u+=1,u===6&&(g.mipmapCount===1&&(o.minFilter=Zt),o.image=a,o.format=g.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let p=0,d=e.length;p<d;++p)f(p);else l.load(e,function(p){const d=s.parse(p,!0);if(d.isCubemap){const g=d.mipmaps.length/d.mipmapCount;for(let v=0;v<g;v++){a[v]={mipmaps:[]};for(let b=0;b<d.mipmapCount;b++)a[v].mipmaps.push(d.mipmaps[v*d.mipmapCount+b]),a[v].format=d.format,a[v].width=d.width,a[v].height=d.height}o.image=a}else o.image.width=d.width,o.image.height=d.height,o.mipmaps=d.mipmaps;d.mipmapCount===1&&(o.minFilter=Zt),o.format=d.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class Yo extends Wn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Rs.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=ko("img");function l(){f(),Rs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function u(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){o.removeEventListener("load",l,!1),o.removeEventListener("error",u,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",u,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class FD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=new Qo;s.colorSpace=Bt;const a=new Yo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(u){a.load(e[u],function(f){s.images[u]=f,o++,o===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let u=0;u<e.length;++u)l(u);return s}}class BD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Ea,o=new fr(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(s.withCredentials),o.load(e,function(l){let u;try{u=s.parse(l)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}u.image!==void 0?a.image=u.image:u.data!==void 0&&(a.image.width=u.width,a.image.height=u.height,a.image.data=u.data),a.wrapS=u.wrapS!==void 0?u.wrapS:wn,a.wrapT=u.wrapT!==void 0?u.wrapT:wn,a.magFilter=u.magFilter!==void 0?u.magFilter:Zt,a.minFilter=u.minFilter!==void 0?u.minFilter:Zt,a.anisotropy=u.anisotropy!==void 0?u.anisotropy:1,u.colorSpace!==void 0?a.colorSpace=u.colorSpace:u.encoding!==void 0&&(a.encoding=u.encoding),u.flipY!==void 0&&(a.flipY=u.flipY),u.format!==void 0&&(a.format=u.format),u.type!==void 0&&(a.type=u.type),u.mipmaps!==void 0&&(a.mipmaps=u.mipmaps,a.minFilter=Lr),u.mipmapCount===1&&(a.minFilter=Zt),u.generateMipmaps!==void 0&&(a.generateMipmaps=u.generateMipmaps),a.needsUpdate=!0,t&&t(a,u)},n,i),a}}class zD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=new en,a=new Yo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Fr extends St{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class cy extends Fr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(St.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const zf=new it,P_=new N,C_=new N;class _p{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new it,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new iu,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;P_.setFromMatrixPosition(e.matrixWorld),t.position.copy(P_),C_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(C_),t.updateMatrixWorld(),zf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(zf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class kD extends _p{constructor(){super(new pn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ra*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ly extends Fr{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(St.DEFAULT_UP),this.updateMatrix(),this.target=new St,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new kD}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const R_=new it,xo=new N,kf=new N;class HD extends _p{constructor(){super(new pn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),xo.setFromMatrixPosition(e.matrixWorld),n.position.copy(xo),kf.copy(n.position),kf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(kf),n.updateMatrixWorld(),i.makeTranslation(-xo.x,-xo.y,-xo.z),R_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(R_)}}class uy extends Fr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new HD}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class VD extends _p{constructor(){super(new ru(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class hy extends Fr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(St.DEFAULT_UP),this.updateMatrix(),this.target=new St,this.shadow=new VD}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class fy extends Fr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class dy extends Fr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class py{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Eu extends Fr{constructor(e=new py,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Au extends Wn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new fr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Au.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new Le().setHex(a.value);break;case"v2":i.uniforms[s].value=new fe().fromArray(a.value);break;case"v3":i.uniforms[s].value=new N().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Ct().fromArray(a.value);break;case"m3":i.uniforms[s].value=new ft().fromArray(a.value);break;case"m4":i.uniforms[s].value=new it().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new fe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Y0,SpriteMaterial:np,RawShaderMaterial:$0,ShaderMaterial:zi,PointsMaterial:rp,MeshPhysicalMaterial:Z0,MeshStandardMaterial:hp,MeshPhongMaterial:J0,MeshToonMaterial:K0,MeshNormalMaterial:Q0,MeshLambertMaterial:ey,MeshDepthMaterial:Kd,MeshDistanceMaterial:Qd,MeshBasicMaterial:Ur,MeshMatcapMaterial:ty,LineDashedMaterial:ny,LineBasicMaterial:Dn,Material:An};return new t[e]}}class Id{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class my extends pt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class gy extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new fr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,v){if(t[v]!==void 0)return t[v];const y=g.interleavedBuffers[v],_=s(g,y.buffer),T=xa(y.type,_),S=new cu(T,y.stride);return S.uuid=y.uuid,t[v]=S,S}function s(g,v){if(n[v]!==void 0)return n[v];const y=g.arrayBuffers[v],_=new Uint32Array(y).buffer;return n[v]=_,_}const a=e.isInstancedBufferGeometry?new my:new pt,o=e.data.index;if(o!==void 0){const g=xa(o.type,o.array);a.setIndex(new Lt(g,1))}const l=e.data.attributes;for(const g in l){const v=l[g];let b;if(v.isInterleavedBufferAttribute){const y=i(e.data,v.data);b=new Ps(y,v.itemSize,v.offset,v.normalized)}else{const y=xa(v.type,v.array),_=v.isInstancedBufferAttribute?La:Lt;b=new _(y,v.itemSize,v.normalized)}v.name!==void 0&&(b.name=v.name),v.usage!==void 0&&b.setUsage(v.usage),v.updateRange!==void 0&&(b.updateRange.offset=v.updateRange.offset,b.updateRange.count=v.updateRange.count),a.setAttribute(g,b)}const u=e.data.morphAttributes;if(u)for(const g in u){const v=u[g],b=[];for(let y=0,_=v.length;y<_;y++){const T=v[y];let S;if(T.isInterleavedBufferAttribute){const M=i(e.data,T.data);S=new Ps(M,T.itemSize,T.offset,T.normalized)}else{const M=xa(T.type,T.array);S=new Lt(M,T.itemSize,T.normalized)}T.name!==void 0&&(S.name=T.name),b.push(S)}a.morphAttributes[g]=b}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,v=p.length;g!==v;++g){const b=p[g];a.addGroup(b.start,b.count,b.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const g=new N;d.center!==void 0&&g.fromArray(d.center),a.boundingSphere=new Ei(g,d.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class GD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?Id.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new fr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let u=null;try{u=JSON.parse(l)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=u.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(u,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Id.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new fr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(u)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,s,l,o,n),f=this.parseSkeletons(e.skeletons,u);if(this.bindSkeletons(u,f),t!==void 0){let p=!1;for(const d in a)if(a[d].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(u)}return u}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),u=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,u),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Es().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=new lu().fromJSON(e[s],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new gy;for(let s=0,a=e.length;s<a;s++){let o;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in A_?o=A_[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Au;s.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=qo.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const u=l,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u)?u:n.resourcePath+u;return a(f)}else return l.data?{data:xa(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new gp(t);s=new Yo(l),s.setCrossOrigin(this.crossOrigin);for(let u=0,f=e.length;u<f;u++){const p=e[u],d=p.url;if(Array.isArray(d)){const g=[];for(let v=0,b=d.length;v<b;v++){const y=d[v],_=o(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Ea(_.data,_.width,_.height)))}i[p.uuid]=new Ss(g)}else{const g=o(p.url);i[p.uuid]=new Ss(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(l)}else return a.data?{data:xa(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new Yo(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],u=l.url;if(Array.isArray(u)){const f=[];for(let p=0,d=u.length;p<d;p++){const g=u[p],v=await s(g);v!==null&&(v instanceof HTMLImageElement?f.push(v):f.push(new Ea(v.data,v.width,v.height)))}n[l.uuid]=new Ss(f)}else{const f=await s(l.url);n[l.uuid]=new Ss(f)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=e[s];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],u=l.data;let f;Array.isArray(u)?(f=new Qo,u.length===6&&(f.needsUpdate=!0)):(u&&u.data?f=new Ea:f=new en,u&&(f.needsUpdate=!0)),f.source=l,f.uuid=o.uuid,o.name!==void 0&&(f.name=o.name),o.mapping!==void 0&&(f.mapping=n(o.mapping,WD)),o.channel!==void 0&&(f.channel=o.channel),o.offset!==void 0&&f.offset.fromArray(o.offset),o.repeat!==void 0&&f.repeat.fromArray(o.repeat),o.center!==void 0&&f.center.fromArray(o.center),o.rotation!==void 0&&(f.rotation=o.rotation),o.wrap!==void 0&&(f.wrapS=n(o.wrap[0],I_),f.wrapT=n(o.wrap[1],I_)),o.format!==void 0&&(f.format=o.format),o.internalFormat!==void 0&&(f.internalFormat=o.internalFormat),o.type!==void 0&&(f.type=o.type),o.colorSpace!==void 0&&(f.colorSpace=o.colorSpace),o.encoding!==void 0&&(f.encoding=o.encoding),o.minFilter!==void 0&&(f.minFilter=n(o.minFilter,L_)),o.magFilter!==void 0&&(f.magFilter=n(o.magFilter,L_)),o.anisotropy!==void 0&&(f.anisotropy=o.anisotropy),o.flipY!==void 0&&(f.flipY=o.flipY),o.generateMipmaps!==void 0&&(f.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(f.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(f.compareFunction=o.compareFunction),o.userData!==void 0&&(f.userData=o.userData),i[o.uuid]=f}return i}parseObject(e,t,n,i,s){let a;function o(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const g=[];for(let v=0,b=d.length;v<b;v++){const y=d[v];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function u(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let f,p;switch(e.type){case"Scene":a=new tp,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Le(e.background):a.background=u(e.background)),e.environment!==void 0&&(a.environment=u(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new ou(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new au(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new pn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new ru(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new fy(e.color,e.intensity);break;case"DirectionalLight":a=new hy(e.color,e.intensity);break;case"PointLight":a=new uy(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new dy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new ly(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new cy(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Eu().fromJSON(e);break;case"SkinnedMesh":f=o(e.geometry),p=l(e.material),a=new O0(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=o(e.geometry),p=l(e.material),a=new mn(f,p);break;case"InstancedMesh":f=o(e.geometry),p=l(e.material);const d=e.count,g=e.instanceMatrix,v=e.instanceColor;a=new U0(f,p,d),a.instanceMatrix=new La(new Float32Array(g.array),16),v!==void 0&&(a.instanceColor=new La(new Float32Array(v.array),v.itemSize));break;case"LOD":a=new D0;break;case"Line":a=new Dr(o(e.geometry),l(e.material));break;case"LineLoop":a=new N0(o(e.geometry),l(e.material));break;case"LineSegments":a=new Hi(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new F0(o(e.geometry),l(e.material));break;case"Sprite":a=new L0(l(e.material));break;case"Group":a=new Sa;break;case"Bone":a=new ip;break;default:a=new St}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let g=0;g<d.length;g++)a.add(this.parseObject(d[g],t,n,i,s))}if(e.animations!==void 0){const d=e.animations;for(let g=0;g<d.length;g++){const v=d[g];a.animations.push(s[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const d=e.levels;for(let g=0;g<d.length;g++){const v=d[g],b=a.getObjectByProperty("uuid",v.object);b!==void 0&&a.addLevel(b,v.distance,v.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const WD={UVMapping:Jl,CubeReflectionMapping:hr,CubeRefractionMapping:Ir,EquirectangularReflectionMapping:Ro,EquirectangularRefractionMapping:Io,CubeUVReflectionMapping:Da},I_={RepeatWrapping:Lo,ClampToEdgeWrapping:wn,MirroredRepeatWrapping:Do},L_={NearestFilter:$t,NearestMipmapNearestFilter:Wl,NearestMipmapLinearFilter:Mo,LinearFilter:Zt,LinearMipmapNearestFilter:Bd,LinearMipmapLinearFilter:Lr};class XD extends Wn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Rs.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Rs.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let El,vp=class{static getContext(){return El===void 0&&(El=new(window.AudioContext||window.webkitAudioContext)),El}static setContext(e){El=e}};class jD extends Wn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new fr(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const u=l.slice(0);vp.getContext().decodeAudioData(u,function(p){t(p)},o)}catch(u){o(u)}},n,i);function o(l){i?i(l):console.error(l),s.manager.itemError(e)}}}class qD extends Eu{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Le().set(e),s=new Le().set(t),a=new N(i.r,i.g,i.b),o=new N(s.r,s.g,s.b),l=Math.sqrt(Math.PI),u=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(u)}}class YD extends Eu{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const D_=new it,O_=new it,us=new it;class $D{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new pn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new pn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,us.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(ws*t.fov*.5)/t.zoom;let o,l;O_.elements[12]=-i,D_.elements[12]=i,o=-a*t.aspect+s,l=a*t.aspect+s,us.elements[0]=2*t.near/(l-o),us.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(us),o=-a*t.aspect-s,l=a*t.aspect-s,us.elements[0]=2*t.near/(l-o),us.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(us)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(O_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(D_)}}class yp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=U_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=U_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function U_(){return(typeof performance>"u"?Date:performance).now()}const hs=new N,N_=new Gn,ZD=new N,fs=new N;class JD extends St{constructor(){super(),this.type="AudioListener",this.context=vp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new yp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(hs,N_,ZD),fs.set(0,0,-1).applyQuaternion(N_),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(hs.x,i),t.positionY.linearRampToValueAtTime(hs.y,i),t.positionZ.linearRampToValueAtTime(hs.z,i),t.forwardX.linearRampToValueAtTime(fs.x,i),t.forwardY.linearRampToValueAtTime(fs.y,i),t.forwardZ.linearRampToValueAtTime(fs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(hs.x,hs.y,hs.z),t.setOrientation(fs.x,fs.y,fs.z,n.x,n.y,n.z)}}class _y extends St{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ds=new N,F_=new Gn,KD=new N,ps=new N;class QD extends _y{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ds,F_,KD),ps.set(0,0,1).applyQuaternion(F_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ds.x,n),t.positionY.linearRampToValueAtTime(ds.y,n),t.positionZ.linearRampToValueAtTime(ds.z,n),t.orientationX.linearRampToValueAtTime(ps.x,n),t.orientationY.linearRampToValueAtTime(ps.y,n),t.orientationZ.linearRampToValueAtTime(ps.z,n)}else t.setPosition(ds.x,ds.y,ds.z),t.setOrientation(ps.x,ps.y,ps.z)}}class eO{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class vy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[s+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,s,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,u=t+t;l!==u;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Gn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;Gn.multiplyQuaternionsFlat(e,a,e,t,e,n),Gn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let o=0;o!==s;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const xp="\\[\\]\\.:\\/",tO=new RegExp("["+xp+"]","g"),bp="[^"+xp+"]",nO="[^"+xp.replace("\\.","")+"]",iO=/((?:WC+[\/:])*)/.source.replace("WC",bp),rO=/(WCOD+)?/.source.replace("WCOD",nO),sO=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",bp),aO=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",bp),oO=new RegExp("^"+iO+rO+sO+aO+"$"),cO=["material","materials","bones","map"];class lO{constructor(e,t,n){const i=n||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class yt{constructor(e,t,n){this.path=t,this.parsedPath=n||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,n):new yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(tO,"")}static parseTrackName(e){const t=oO.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);cO.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let u=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===u){u=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(u!==void 0){if(e[u]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[u]}}const a=e[i];if(a===void 0){const u=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=lO;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class uO{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let o,l=e.length,u=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const d=arguments[f],g=d.uuid;let v=t[g];if(v===void 0){v=l++,t[g]=v,e.push(d);for(let b=0,y=a;b!==y;++b)s[b].push(new yt(d,n[b],i[b]))}else if(v<u){o=e[v];const b=--u,y=e[b];t[y.uuid]=v,e[v]=y,t[g]=b,e[b]=d;for(let _=0,T=a;_!==T;++_){const S=s[_],M=S[b];let R=S[v];S[v]=M,R===void 0&&(R=new yt(d,n[_],i[_])),S[b]=R}}else e[v]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],u=l.uuid,f=t[u];if(f!==void 0&&f>=s){const p=s++,d=e[p];t[d.uuid]=f,e[f]=d,t[u]=p,e[p]=l;for(let g=0,v=i;g!==v;++g){const b=n[g],y=b[p],_=b[f];b[f]=y,b[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const u=arguments[o],f=u.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const d=--s,g=e[d],v=--a,b=e[v];t[g.uuid]=p,e[p]=g,t[b.uuid]=d,e[d]=b,e.pop();for(let y=0,_=i;y!==_;++y){const T=n[y],S=T[d],M=T[v];T[p]=S,T[d]=M,T.pop()}}else{const d=--a,g=e[d];d>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let v=0,b=i;v!==b;++v){const y=n[v];y[p]=y[d],y.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,o=this._parsedPaths,l=this._objects,u=l.length,f=this.nCachedObjects_,p=new Array(u);i=s.length,n[e]=i,a.push(e),o.push(t),s.push(p);for(let d=f,g=l.length;d!==g;++d){const v=l[d];p[d]=new yt(v,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],u=e[o];t[u]=n,a[n]=l,a.pop(),s[n]=s[o],s.pop(),i[n]=i[o],i.pop()}}}class yy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,o=new Array(a),l={endingStart:xs,endingEnd:xs};for(let u=0;u!==a;++u){const f=s[u].createInterpolant(null);o[u]=f,f.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Qv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,o=i/s;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,u=o.sampleValues;return l[0]=s,l[1]=s+n,u[0]=e/a,u[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,u=this._propertyBindings;switch(this.blendMode){case Xd:for(let f=0,p=l.length;f!==p;++f)l[f].evaluate(a),u[f].accumulateAdditive(o);break;case Ql:default:for(let f=0,p=l.length;f!==p;++f)l[f].evaluate(a),u[f].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===e0;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===Kv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const u=e<0;this._setEndings(u,!u,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=bs,i.endingEnd=bs):(e?i.endingStart=this.zeroSlopeAtStart?bs:xs:i.endingStart=No,t?i.endingEnd=this.zeroSlopeAtEnd?bs:xs:i.endingEnd=No)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=t,o[1]=s+e,l[1]=n,this}}const hO=new Float32Array(1);class fO extends dr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,u=this._bindingsByRootAndName;let f=u[l];f===void 0&&(f={},u[l]=f);for(let p=0;p!==s;++p){const d=i[p],g=d.name;let v=f[g];if(v!==void 0)++v.referenceCount,a[p]=v;else{if(v=a[p],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,l,g));continue}const b=t&&t._propertyBindings[p].binding.parsedPath;v=new vy(yt.create(n,g,b),d.ValueTypeName,d.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,l,g),a[p]=v}o[p].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,u=l[l.length-1],f=e._byClipCacheIndex;u._byClipCacheIndex=f,l[f]=u,l.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete p[d],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],u=e._cacheIndex;l._cacheIndex=u,t[u]=l,t.pop(),delete o[s],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new pp(new Float32Array(2),new Float32Array(2),1,hO),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?qo.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let u=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Ql),l!==void 0){const p=l.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;u=l.knownActions[0],a===null&&(a=u._clip)}if(a===null)return null;const f=new yy(this,a,t,n);return this._bindAction(f,u),this._addInactiveAction(f,o,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?qo.findByName(n,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let u=0;u!==n;++u)t[u]._update(i,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let u=0;u!==l;++u)o[u].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const u=a[o];this._deactivateAction(u);const f=u._cacheIndex,p=t[t.length-1];u._cacheIndex=null,u._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(u)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Sp{constructor(e){this.value=e}clone(){return new Sp(this.value.clone===void 0?this.value:this.value.clone())}}let dO=0;class pO extends dr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:dO++}),this.name="",this.usage=Bo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class mO extends cu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class gO{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class xy{constructor(e,t,n=0,i=1/0){this.ray=new Oa(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new tu,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Ld(e,this,n,t),n.sort(B_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Ld(e[i],this,n,t);return n.sort(B_),n}}function B_(r,e){return r.distance-e.distance}function Ld(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,a=i.length;s<a;s++)Ld(i[s],e,t,!0)}}class _O{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Xt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class vO{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const z_=new fe;class yO{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=z_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,z_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const k_=new N,Al=new N;class xO{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){k_.subVectors(e,this.start),Al.subVectors(this.end,this.start);const n=Al.dot(Al);let s=Al.dot(k_)/n;return t&&(s=Xt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const H_=new N;class bO extends St{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new pt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const u=a/l*Math.PI*2,f=o/l*Math.PI*2;i.push(Math.cos(u),Math.sin(u),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ke(i,3));const s=new Dn({fog:!1,toneMapped:!1});this.cone=new Hi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),H_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(H_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Er=new N,Pl=new it,Hf=new it;class SO extends Hi{constructor(e){const t=by(e),n=new pt,i=[],s=[],a=new Le(0,0,1),o=new Le(0,1,0);for(let u=0;u<t.length;u++){const f=t[u];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}n.setAttribute("position",new ke(i,3)),n.setAttribute("color",new ke(s,3));const l=new Dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Hf.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const o=t[s];o.parent&&o.parent.isBone&&(Pl.multiplyMatrices(Hf,o.matrixWorld),Er.setFromMatrixPosition(Pl),i.setXYZ(a,Er.x,Er.y,Er.z),Pl.multiplyMatrices(Hf,o.parent.matrixWorld),Er.setFromMatrixPosition(Pl),i.setXYZ(a+1,Er.x,Er.y,Er.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function by(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,by(r.children[t]));return e}class MO extends mn{constructor(e,t,n){const i=new ic(t,4,2),s=new Ur({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const TO=new N,V_=new Le,G_=new Le;class wO extends St{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new nc(t);i.rotateY(Math.PI*.5),this.material=new Ur({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new Lt(a,3)),this.add(new mn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");V_.copy(this.light.color),G_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?V_:G_;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(TO.setFromMatrixPosition(this.light.matrixWorld).negate())}}class EO extends Hi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,a=e/t,o=e/2,l=[],u=[];for(let d=0,g=0,v=-o;d<=t;d++,v+=a){l.push(-o,0,v,o,0,v),l.push(v,0,-o,v,0,o);const b=d===s?n:i;b.toArray(u,g),g+=3,b.toArray(u,g),g+=3,b.toArray(u,g),g+=3,b.toArray(u,g),g+=3}const f=new pt;f.setAttribute("position",new ke(l,3)),f.setAttribute("color",new ke(u,3));const p=new Dn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class AO extends Hi{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new Le(s),a=new Le(a);const o=[],l=[];if(t>1)for(let p=0;p<t;p++){const d=p/t*(Math.PI*2),g=Math.sin(d)*e,v=Math.cos(d)*e;o.push(0,0,0),o.push(g,0,v);const b=p&1?s:a;l.push(b.r,b.g,b.b),l.push(b.r,b.g,b.b)}for(let p=0;p<n;p++){const d=p&1?s:a,g=e-e/n*p;for(let v=0;v<i;v++){let b=v/i*(Math.PI*2),y=Math.sin(b)*g,_=Math.cos(b)*g;o.push(y,0,_),l.push(d.r,d.g,d.b),b=(v+1)/i*(Math.PI*2),y=Math.sin(b)*g,_=Math.cos(b)*g,o.push(y,0,_),l.push(d.r,d.g,d.b)}}const u=new pt;u.setAttribute("position",new ke(o,3)),u.setAttribute("color",new ke(l,3));const f=new Dn({vertexColors:!0,toneMapped:!1});super(u,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const W_=new N,Cl=new N,X_=new N;class PO extends St{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new pt;i.setAttribute("position",new ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dn({fog:!1,toneMapped:!1});this.lightPlane=new Dr(i,s),this.add(this.lightPlane),i=new pt,i.setAttribute("position",new ke([0,0,0,0,0,1],3)),this.targetLine=new Dr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),W_.setFromMatrixPosition(this.light.matrixWorld),Cl.setFromMatrixPosition(this.light.target.matrixWorld),X_.subVectors(Cl,W_),this.lightPlane.lookAt(Cl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Cl),this.targetLine.scale.z=X_.length()}}const Rl=new N,Wt=new nu;class CO extends Hi{constructor(e){const t=new pt,n=new Dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(v,b){l(v),l(b)}function l(v){i.push(0,0,0),s.push(0,0,0),a[v]===void 0&&(a[v]=[]),a[v].push(i.length/3-1)}t.setAttribute("position",new ke(i,3)),t.setAttribute("color",new ke(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const u=new Le(16755200),f=new Le(16711680),p=new Le(43775),d=new Le(16777215),g=new Le(3355443);this.setColors(u,f,p,d,g)}setColors(e,t,n,i,s){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,s.r,s.g,s.b),o.setXYZ(41,s.r,s.g,s.b),o.setXYZ(42,s.r,s.g,s.b),o.setXYZ(43,s.r,s.g,s.b),o.setXYZ(44,s.r,s.g,s.b),o.setXYZ(45,s.r,s.g,s.b),o.setXYZ(46,s.r,s.g,s.b),o.setXYZ(47,s.r,s.g,s.b),o.setXYZ(48,s.r,s.g,s.b),o.setXYZ(49,s.r,s.g,s.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Wt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Yt("c",t,e,Wt,0,0,-1),Yt("t",t,e,Wt,0,0,1),Yt("n1",t,e,Wt,-n,-i,-1),Yt("n2",t,e,Wt,n,-i,-1),Yt("n3",t,e,Wt,-n,i,-1),Yt("n4",t,e,Wt,n,i,-1),Yt("f1",t,e,Wt,-n,-i,1),Yt("f2",t,e,Wt,n,-i,1),Yt("f3",t,e,Wt,-n,i,1),Yt("f4",t,e,Wt,n,i,1),Yt("u1",t,e,Wt,n*.7,i*1.1,-1),Yt("u2",t,e,Wt,-n*.7,i*1.1,-1),Yt("u3",t,e,Wt,0,i*2,-1),Yt("cf1",t,e,Wt,-n,0,1),Yt("cf2",t,e,Wt,n,0,1),Yt("cf3",t,e,Wt,0,-i,1),Yt("cf4",t,e,Wt,0,i,1),Yt("cn1",t,e,Wt,-n,0,-1),Yt("cn2",t,e,Wt,n,0,-1),Yt("cn3",t,e,Wt,0,-i,-1),Yt("cn4",t,e,Wt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Yt(r,e,t,n,i,s,a){Rl.set(i,s,a).unproject(n);const o=e[r];if(o!==void 0){const l=t.getAttribute("position");for(let u=0,f=o.length;u<f;u++)l.setXYZ(o[u],Rl.x,Rl.y,Rl.z)}}const Il=new ki;class RO extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new pt;s.setIndex(new Lt(n,1)),s.setAttribute("position",new Lt(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Il.setFromObject(this.object),Il.isEmpty())return;const t=Il.min,n=Il.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class IO extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new pt;s.setIndex(new Lt(n,1)),s.setAttribute("position",new ke(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class LO extends Dr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new pt;a.setAttribute("position",new ke(s,3)),a.computeBoundingSphere(),super(a,new Dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new pt;l.setAttribute("position",new ke(o,3)),l.computeBoundingSphere(),this.add(new mn(l,new Ur({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const j_=new N;let Ll,Vf;class DO extends St{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",Ll===void 0&&(Ll=new pt,Ll.setAttribute("position",new ke([0,0,0,0,1,0],3)),Vf=new Na(0,.5,1,5,1),Vf.translate(0,-.5,0)),this.position.copy(t),this.line=new Dr(Ll,new Dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new mn(Vf,new Ur({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{j_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(j_,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class OO extends Hi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new pt;i.setAttribute("position",new ke(t,3)),i.setAttribute("color",new ke(n,3));const s=new Dn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class UO{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ho,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const T=[];for(let S=0,M=_.length;S<M;S++){const R=_[S],O=new Es;O.curves=R.curves,T.push(O)}return T}function n(_,T){const S=T.length;let M=!1;for(let R=S-1,O=0;O<S;R=O++){let U=T[R],B=T[O],A=B.x-U.x,L=B.y-U.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(U=T[O],A=-A,B=T[R],L=-L),_.y<U.y||_.y>B.y)continue;if(_.y===U.y){if(_.x===U.x)return!0}else{const Q=L*(_.x-U.x)-A*(_.y-U.y);if(Q===0)return!0;if(Q<0)continue;M=!M}}else{if(_.y!==U.y)continue;if(B.x<=_.x&&_.x<=U.x||U.x<=_.x&&_.x<=B.x)return!0}}return M}const i=Fi.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,o,l;const u=[];if(s.length===1)return o=s[0],l=new Es,l.curves=o.curves,u.push(l),u;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],d=[];let g=[],v=0,b;d[v]=void 0,g[v]=[];for(let _=0,T=s.length;_<T;_++)o=s[_],b=o.getPoints(),a=i(b),a=e?!a:a,a?(!f&&d[v]&&v++,d[v]={s:new Es,p:b},d[v].s.curves=o.curves,f&&v++,g[v]=[]):g[v].push({h:o,p:b[0]});if(!d[0])return t(s);if(d.length>1){let _=!1,T=0;for(let S=0,M=d.length;S<M;S++)p[S]=[];for(let S=0,M=d.length;S<M;S++){const R=g[S];for(let O=0;O<R.length;O++){const U=R[O];let B=!0;for(let A=0;A<d.length;A++)n(U.p,d[A].p)&&(S!==A&&T++,B?(B=!1,p[A].push(U)):_=!0);B&&p[S].push(U)}}T>0&&_===!1&&(g=p)}let y;for(let _=0,T=d.length;_<T;_++){l=d[_].s,u.push(l),y=g[_];for(let S=0,M=y.length;S<M;S++)l.holes.push(y[S].h)}return u}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:$o}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=$o);const NO=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Fd,AddEquation:gs,AddOperation:Bv,AdditiveAnimationBlendMode:Xd,AdditiveBlending:qf,AlphaFormat:Xv,AlwaysCompare:f0,AlwaysDepth:Iv,AlwaysStencilFunc:r0,AmbientLight:fy,AmbientLightProbe:YD,AnimationAction:yy,AnimationClip:qo,AnimationLoader:UD,AnimationMixer:fO,AnimationObjectGroup:uO,AnimationUtils:ID,ArcCurve:B0,ArrayCamera:P0,ArrowHelper:DO,Audio:_y,AudioAnalyser:eO,AudioContext:vp,AudioListener:JD,AudioLoader:jD,AxesHelper:OO,BackSide:Ln,BasicDepthPacking:t0,BasicShadowMap:XA,Bone:ip,BooleanKeyframeTrack:Ls,Box2:yO,Box3:ki,Box3Helper:IO,BoxGeometry:Is,BoxHelper:RO,BufferAttribute:Lt,BufferGeometry:pt,BufferGeometryLoader:gy,ByteType:Gv,Cache:Rs,Camera:nu,CameraHelper:CO,CanvasTexture:tD,CapsuleGeometry:du,CatmullRomCurve3:z0,CineonToneMapping:Hv,CircleGeometry:pu,ClampToEdgeWrapping:wn,Clock:yp,Color:Le,ColorKeyframeTrack:mp,ColorManagement:Qn,CompressedArrayTexture:QL,CompressedCubeTexture:eD,CompressedTexture:uu,CompressedTextureLoader:ND,ConeGeometry:mu,CubeCamera:x0,CubeReflectionMapping:hr,CubeRefractionMapping:Ir,CubeTexture:Qo,CubeTextureLoader:FD,CubeUVReflectionMapping:Da,CubicBezierCurve:ap,CubicBezierCurve3:k0,CubicInterpolant:ry,CullFaceBack:jf,CullFaceFront:_v,CullFaceFrontBack:WA,CullFaceNone:gv,Curve:Ai,CurvePath:V0,CustomBlending:vv,CustomToneMapping:Vv,CylinderGeometry:Na,Cylindrical:vO,Data3DTexture:Yd,DataArrayTexture:eu,DataTexture:Ea,DataTextureLoader:BD,DataUtils:aP,DecrementStencilOp:r1,DecrementWrapStencilOp:a1,DefaultLoadingManager:oy,DepthFormat:Cr,DepthStencilFormat:As,DepthTexture:C0,DirectionalLight:hy,DirectionalLightHelper:PO,DiscreteInterpolant:sy,DisplayP3ColorSpace:Jo,DodecahedronGeometry:gu,DoubleSide:Oi,DstAlphaFactor:wv,DstColorFactor:Av,DynamicCopyUsage:b1,DynamicDrawUsage:m1,DynamicReadUsage:v1,EdgesGeometry:G0,EllipseCurve:hu,EqualCompare:o0,EqualDepth:Dv,EqualStencilFunc:u1,EquirectangularReflectionMapping:Ro,EquirectangularRefractionMapping:Io,Euler:Ko,EventDispatcher:dr,ExtrudeGeometry:vu,FileLoader:fr,Float16BufferAttribute:fP,Float32BufferAttribute:ke,Float64BufferAttribute:dP,FloatType:Ui,Fog:ou,FogExp2:au,FramebufferTexture:KL,FrontSide:ur,Frustum:iu,GLBufferAttribute:gO,GLSL1:M1,GLSL3:Md,GreaterCompare:l0,GreaterDepth:Uv,GreaterEqualCompare:h0,GreaterEqualDepth:Ov,GreaterEqualStencilFunc:p1,GreaterStencilFunc:f1,GridHelper:EO,Group:Sa,HalfFloatType:Ca,HemisphereLight:cy,HemisphereLightHelper:wO,HemisphereLightProbe:qD,IcosahedronGeometry:yu,ImageBitmapLoader:XD,ImageLoader:Yo,ImageUtils:qd,IncrementStencilOp:i1,IncrementWrapStencilOp:s1,InstancedBufferAttribute:La,InstancedBufferGeometry:my,InstancedInterleavedBuffer:mO,InstancedMesh:U0,Int16BufferAttribute:uP,Int32BufferAttribute:hP,Int8BufferAttribute:oP,IntType:zd,InterleavedBuffer:cu,InterleavedBufferAttribute:Ps,Interpolant:rc,InterpolateDiscrete:Oo,InterpolateLinear:Uo,InterpolateSmooth:zl,InvertStencilOp:o1,KeepStencilOp:kl,KeyframeTrack:Pi,LOD:D0,LatheGeometry:tc,Layers:tu,LessCompare:a0,LessDepth:Lv,LessEqualCompare:c0,LessEqualDepth:Gl,LessEqualStencilFunc:h1,LessStencilFunc:l1,Light:Fr,LightProbe:Eu,Line:Dr,Line3:xO,LineBasicMaterial:Dn,LineCurve:fu,LineCurve3:H0,LineDashedMaterial:ny,LineLoop:N0,LineSegments:Hi,LinearDisplayP3ColorSpace:e1,LinearEncoding:Fo,LinearFilter:Zt,LinearInterpolant:pp,LinearMipMapLinearFilter:ZA,LinearMipMapNearestFilter:$A,LinearMipmapLinearFilter:Lr,LinearMipmapNearestFilter:Bd,LinearSRGBColorSpace:_i,LinearToneMapping:zv,Loader:Wn,LoaderUtils:Id,LoadingManager:gp,LoopOnce:Kv,LoopPingPong:e0,LoopRepeat:Qv,LuminanceAlphaFormat:qv,LuminanceFormat:jv,MOUSE:VA,Material:An,MaterialLoader:Au,MathUtils:F1,Matrix3:ft,Matrix4:it,MaxEquation:Jf,Mesh:mn,MeshBasicMaterial:Ur,MeshDepthMaterial:Kd,MeshDistanceMaterial:Qd,MeshLambertMaterial:ey,MeshMatcapMaterial:ty,MeshNormalMaterial:Q0,MeshPhongMaterial:J0,MeshPhysicalMaterial:Z0,MeshStandardMaterial:hp,MeshToonMaterial:K0,MinEquation:Zf,MirroredRepeatWrapping:Do,MixOperation:Fv,MultiplyBlending:$f,MultiplyOperation:Zo,NearestFilter:$t,NearestMipMapLinearFilter:YA,NearestMipMapNearestFilter:qA,NearestMipmapLinearFilter:Mo,NearestMipmapNearestFilter:Wl,NeverCompare:s0,NeverDepth:Rv,NeverStencilFunc:c1,NoBlending:ar,NoColorSpace:Rr,NoToneMapping:or,NormalAnimationBlendMode:Ql,NormalBlending:Ts,NotEqualCompare:u0,NotEqualDepth:Nv,NotEqualStencilFunc:d1,NumberKeyframeTrack:Xo,Object3D:St,ObjectLoader:GD,ObjectSpaceNormalMap:i0,OctahedronGeometry:nc,OneFactor:Sv,OneMinusDstAlphaFactor:Ev,OneMinusDstColorFactor:Pv,OneMinusSrcAlphaFactor:Nd,OneMinusSrcColorFactor:Tv,OrthographicCamera:ru,PCFShadowMap:Od,PCFSoftShadowMap:Zl,PMREMGenerator:wd,Path:Ho,PerspectiveCamera:pn,Plane:Ar,PlaneGeometry:ec,PlaneHelper:LO,PointLight:uy,PointLightHelper:MO,Points:F0,PointsMaterial:rp,PolarGridHelper:AO,PolyhedronGeometry:Nr,PositionalAudio:QD,PropertyBinding:yt,PropertyMixer:vy,QuadraticBezierCurve:op,QuadraticBezierCurve3:cp,Quaternion:Gn,QuaternionKeyframeTrack:Fa,QuaternionLinearInterpolant:ay,RED_GREEN_RGTC2_Format:bd,RED_RGTC1_Format:Jv,REVISION:$o,RGBADepthPacking:n0,RGBAFormat:ei,RGBAIntegerFormat:Wd,RGBA_ASTC_10x10_Format:md,RGBA_ASTC_10x5_Format:fd,RGBA_ASTC_10x6_Format:dd,RGBA_ASTC_10x8_Format:pd,RGBA_ASTC_12x10_Format:gd,RGBA_ASTC_12x12_Format:_d,RGBA_ASTC_4x4_Format:rd,RGBA_ASTC_5x4_Format:sd,RGBA_ASTC_5x5_Format:ad,RGBA_ASTC_6x5_Format:od,RGBA_ASTC_6x6_Format:cd,RGBA_ASTC_8x5_Format:ld,RGBA_ASTC_8x6_Format:ud,RGBA_ASTC_8x8_Format:hd,RGBA_BPTC_Format:Bl,RGBA_ETC2_EAC_Format:id,RGBA_PVRTC_2BPPV1_Format:td,RGBA_PVRTC_4BPPV1_Format:ed,RGBA_S3TC_DXT1_Format:Ul,RGBA_S3TC_DXT3_Format:Nl,RGBA_S3TC_DXT5_Format:Fl,RGB_BPTC_SIGNED_Format:vd,RGB_BPTC_UNSIGNED_Format:yd,RGB_ETC1_Format:Zv,RGB_ETC2_Format:nd,RGB_PVRTC_2BPPV1_Format:Qf,RGB_PVRTC_4BPPV1_Format:Kf,RGB_S3TC_DXT1_Format:Ol,RGFormat:$v,RGIntegerFormat:Gd,RawShaderMaterial:$0,Ray:Oa,Raycaster:xy,RectAreaLight:dy,RedFormat:Yv,RedIntegerFormat:Vd,ReinhardToneMapping:kv,RenderTarget:g0,RepeatWrapping:Lo,ReplaceStencilOp:n1,ReverseSubtractEquation:xv,RingGeometry:xu,SIGNED_RED_GREEN_RGTC2_Format:Sd,SIGNED_RED_RGTC1_Format:xd,SRGBColorSpace:Bt,Scene:tp,ShaderChunk:tt,ShaderLib:gi,ShaderMaterial:zi,ShadowMaterial:Y0,Shape:Es,ShapeGeometry:bu,ShapePath:UO,ShapeUtils:Fi,ShortType:Wv,Skeleton:lu,SkeletonHelper:SO,SkinnedMesh:O0,Source:Ss,Sphere:Ei,SphereGeometry:ic,Spherical:_O,SphericalHarmonics3:py,SplineCurve:lp,SpotLight:ly,SpotLightHelper:bO,Sprite:L0,SpriteMaterial:np,SrcAlphaFactor:Ud,SrcAlphaSaturateFactor:Cv,SrcColorFactor:Mv,StaticCopyUsage:x1,StaticDrawUsage:Bo,StaticReadUsage:_1,StereoCamera:$D,StreamCopyUsage:S1,StreamDrawUsage:g1,StreamReadUsage:y1,StringKeyframeTrack:Ds,SubtractEquation:yv,SubtractiveBlending:Yf,TOUCH:GA,TangentSpaceNormalMap:Or,TetrahedronGeometry:Su,Texture:en,TextureLoader:zD,TorusGeometry:Mu,TorusKnotGeometry:Tu,Triangle:zn,TriangleFanDrawMode:QA,TriangleStripDrawMode:KA,TrianglesDrawMode:JA,TubeGeometry:wu,TwoPassDoubleSide:jA,UVMapping:Jl,Uint16BufferAttribute:$d,Uint32BufferAttribute:Zd,Uint8BufferAttribute:cP,Uint8ClampedBufferAttribute:lP,Uniform:Sp,UniformsGroup:pO,UniformsLib:Ee,UniformsUtils:y0,UnsignedByteType:cr,UnsignedInt248Type:Pr,UnsignedIntType:sr,UnsignedShort4444Type:kd,UnsignedShort5551Type:Hd,UnsignedShortType:Kl,VSMShadowMap:Li,Vector2:fe,Vector3:N,Vector4:Ct,VectorKeyframeTrack:jo,VideoTexture:JL,WebGL1Renderer:R0,WebGL3DRenderTarget:Y1,WebGLArrayRenderTarget:q1,WebGLCoordinateSystem:Ni,WebGLCubeRenderTarget:b0,WebGLMultipleRenderTargets:$1,WebGLRenderTarget:vi,WebGLRenderer:ep,WebGLUtils:A0,WebGPUCoordinateSystem:zo,WireframeGeometry:q0,WrapAroundEnding:No,ZeroCurvatureEnding:xs,ZeroFactor:bv,ZeroSlopeEnding:bs,ZeroStencilOp:t1,_SRGBAFormat:Xl,createCanvasElement:m0,sRGBEncoding:lr},Symbol.toStringTag,{value:"Module"})),FO=()=>ni("threlte-internal-context");function BO(r){let e;const t=r[9].default,n=xi(t,r,r[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&256)&&bi(n,t,i,i[8],e?Mi(t,i[8],s,null):Si(i[8]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}const q_="threlte-disposable-object-context";function zO(r,e,t){let n,i,{$$slots:s={},$$scope:a}=e;const{collectDisposableObjects:o,addDisposableObjects:l,removeDisposableObjects:u}=FO();let{object:f=void 0}=e,p=f,{dispose:d=void 0}=e;const g=ni(q_);Co(r,g,y=>t(7,i=y));const v=ii(d??i??!0);Co(r,v,y=>t(6,n=y)),Vn(q_,v);let b=n?o(f):[];return l(b),In(()=>{u(b)}),r.$$set=y=>{"object"in y&&t(2,f=y.object),"dispose"in y&&t(3,d=y.dispose),"$$scope"in y&&t(8,a=y.$$scope)},r.$$.update=()=>{r.$$.dirty&136&&v.set(d??i??!0),r.$$.dirty&116&&f!==p&&(u(b),t(5,b=n?o(f):[]),l(b),t(4,p=f))},[g,v,f,d,p,b,n,i,a,s]}class kO extends Ti{constructor(e){super(),wi(this,e,zO,BO,yi,{object:2,dispose:3})}}function HO(r,e){const t=ii(r);let n=r;const i=t.subscribe(o=>n=o);return In(i),{...t,set:o=>{if((o==null?void 0:o.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(o),e==null||e(o,l)},update:o=>{const l=o(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const u=n;t.set(l),e==null||e(l,u)}}}const Ba=()=>{const r=ni("threlte");if(r===void 0)throw new Error("No Threlte context found, are you using this hook inside of <Canvas>?");return r},VO=()=>ni("threlte-hierarchical-parent-context");function GO(r){let e;const t=r[8].default,n=xi(t,r,r[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&128)&&bi(n,t,i,i[7],e?Mi(t,i[7],s,null):Si(i[7]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}const WO=()=>({onChildMount:ni("threlte-hierarchical-object-on-mount"),onChildDestroy:ni("threlte-hierarchical-object-on-destroy")});function XO(r,e,t){var _;let n,{$$slots:i={},$$scope:s}=e,{object:a=void 0}=e,{children:o=[]}=e,{onChildMount:l=void 0}=e;const u=T=>{o.push(T),t(1,o),l==null||l(T)};let{onChildDestroy:f=void 0}=e;const p=T=>{const S=o.findIndex(M=>M.uuid===T.uuid);S!==-1&&o.splice(S,1),t(1,o),f==null||f(T)},{invalidate:d}=Ba(),g=VO();Co(r,g,T=>t(6,n=T));let{parent:v=n}=e;const b=WO();a&&((_=b.onChildMount)==null||_.call(b,a),d("HierarchicalObject: object added"));const y=HO(a,(T,S)=>{var M,R;S&&((M=b.onChildDestroy)==null||M.call(b,S),d("HierarchicalObject: object added")),T&&((R=b.onChildMount)==null||R.call(b,T),d("HierarchicalObject: object removed"))});return In(()=>{var T;a&&((T=b.onChildDestroy)==null||T.call(b,a),d("HierarchicalObject: object removed"))}),Vn("threlte-hierarchical-object-on-mount",u),Vn("threlte-hierarchical-object-on-destroy",p),Vn("threlte-hierarchical-parent-context",y),r.$$set=T=>{"object"in T&&t(3,a=T.object),"children"in T&&t(1,o=T.children),"onChildMount"in T&&t(4,l=T.onChildMount),"onChildDestroy"in T&&t(5,f=T.onChildDestroy),"parent"in T&&t(2,v=T.parent),"$$scope"in T&&t(7,s=T.$$scope)},r.$$.update=()=>{r.$$.dirty&64&&t(2,v=n),r.$$.dirty&8&&y.set(a)},[g,o,v,a,l,f,n,s,i]}class jO extends Ti{constructor(e){super(),wi(this,e,XO,GO,yi,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function qO(r){let e;const t=r[1].default,n=xi(t,r,r[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&bi(n,t,i,i[4],e?Mi(t,i[4],s,null):Si(i[4]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function YO(r){let e,t;return e=new jO({props:{object:r[0],onChildMount:r[2],onChildDestroy:r[3],$$slots:{default:[qO]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,[i]){const s={};i&1&&(s.object=n[0]),i&1&&(s.onChildMount=n[2]),i&1&&(s.onChildDestroy=n[3]),i&16&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function $O(r,e,t){let{$$slots:n={},$$scope:i}=e,{object:s}=e;const a=l=>s.add(l),o=l=>s.remove(l);return r.$$set=l=>{"object"in l&&t(0,s=l.object),"$$scope"in l&&t(4,i=l.$$scope)},[s,n,a,o,i]}class ZO extends Ti{constructor(e){super(),wi(this,e,$O,YO,yi,{object:0})}}const Sy=(r,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)r=r[t[i]];return{target:r,key:n}}else return{target:r,key:e}},Gf=Symbol("initialValueBeforeAttach"),JO=()=>{const{invalidate:r}=Ba();let e=!1,t=Gf,n,i,s;const a=(l,u,f)=>{if(o(),!f){const p=l;((p==null?void 0:p.isMaterial)||!1)&&(f="material"),((p==null?void 0:p.isBufferGeometry)||(p==null?void 0:p.isGeometry)||!1)&&(f="geometry")}if(f){if(typeof f=="function")n=f(u,l);else{const{target:p,key:d}=Sy(u,f);t=p[d],p[d]=l,i=p,s=d}e=!0,r()}},o=()=>{e&&(n?(n(),n=void 0):i&&s&&t!==Gf&&(i[s]=t,t=Gf,i=void 0,s=void 0),e=!1,r())};return In(()=>{o()}),{update:a}},KO=r=>r&&r.isCamera,My=r=>r&&r.isOrthographicCamera,Ty=r=>r&&r.isPerspectiveCamera,QO=r=>Ty(r)||My(r),e2=()=>{const{invalidate:r,size:e,camera:t}=Ba();let n,i;In(()=>{i==null||i()});const s=l=>{n&&(My(n)?(n.left=l.width/-2,n.right=l.width/2,n.top=l.height/2,n.bottom=l.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()):Ty(n)&&(n.aspect=l.width/l.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()))};return{update:(l,u)=>{if(i==null||i(),u||!QO(l)){n=void 0;return}n=l,i=e.subscribe(s)},makeDefaultCamera:(l,u)=>{!KO(l)||!u||(t.set(l),r())}}},Mp=()=>{const r=Yl(),e=(n,i)=>{const s=r.$$.callbacks[n];s&&s.forEach(a=>{a(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!r.$$.callbacks[n],enumerable:!0}),e},t2=()=>{const r=Mp(),e=[];let t,n=!1;const i=()=>{e.forEach(o=>o()),e.length=0,r("create",{ref:t,cleanup:o=>{e.push(o)}})},s=a=>{t=a,n&&i()};return $l(()=>{i(),n=!0}),In(()=>{e.forEach(a=>a())}),{updateRef:s}},Y_=r=>!!(r!=null&&r.addEventListener),n2=()=>{const r=Mp(),e=Yl(),t=d=>{d!=null&&d.type&&r(d.type,d)},n=(d,g)=>{Y_(d)&&g.forEach(v=>{d.removeEventListener(v,t)})},i=(d,g)=>{Y_(d)&&g.forEach(v=>{d.addEventListener(v,t)})};let s=[],a;const o=ii([]),l=o.subscribe(d=>{n(a,s),i(a,d),s=d});In(l);const u=ii(),f=u.subscribe(d=>{n(a,s),i(d,s),a=d});return In(f),In(()=>{n(a,s)}),$l(()=>{o.set(Object.keys(e.$$.callbacks))}),{updateRef:d=>{u.set(d)}}},i2=r=>{const t=ni("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(u=>u(r)).filter(Boolean),i=n.flatMap(u=>u.pluginProps??[]);let s=[];return In(()=>{s.forEach(u=>u())}),{updateRef:u=>{s.forEach(f=>f()),s=[],n.forEach(f=>{var d;const p=(d=f.onRefChange)==null?void 0:d.call(f,u);p&&s.push(p)})},updateProps:u=>{n.forEach(f=>{var p;(p=f.onPropsChange)==null||p.call(f,u)})},updateRestProps:u=>{n.forEach(f=>{var p;(p=f.onRestPropsChange)==null||p.call(f,u)})},pluginsProps:i}},r2=new Set(["$$scope","$$slots","type","args","attach","instance"]),s2=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),a2=r=>typeof r=="string"||typeof r=="number"||typeof r=="boolean"||typeof r>"u"||r===null,o2=()=>{const{invalidate:r}=Ba(),e=new Map,t=(i,s,a,o)=>{var f,p;if(a2(a)){const d=e.get(s);if(d&&d.instance===i&&d.value===a)return;e.set(s,{instance:i,value:a})}const{key:l,target:u}=Sy(i,s);if(!Array.isArray(a)&&typeof a=="number"&&typeof((f=u[l])==null?void 0:f.setScalar)=="function")u[l].setScalar(a);else if(typeof((p=u[l])==null?void 0:p.set)=="function")Array.isArray(a)?u[l].set(...a):u[l].set(a);else{if(u[l]=a,o.manualCamera)return;s2.has(l)&&(u.isPerspectiveCamera||u.isOrthographicCamera)&&u.updateProjectionMatrix()}};return{updateProps:(i,s,a)=>{var o;for(const l in s)!r2.has(l)&&!((o=a.pluginsProps)!=null&&o.includes(l))&&t(i,l,s[l],a),r()}}},c2=r=>({ref:r&2}),$_=r=>({ref:r[1]}),l2=r=>({ref:r&2}),Z_=r=>({ref:r[1]});function J_(r){let e,t;return e=new kO({props:{object:r[1],dispose:r[0]}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&1&&(s.dispose=n[0]),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function u2(r){let e;const t=r[12].default,n=xi(t,r,r[13],$_);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&bi(n,t,i,i[13],e?Mi(t,i[13],s,c2):Si(i[13]),$_)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function h2(r){let e,t;return e=new ZO({props:{object:r[1],$$slots:{default:[f2]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&8194&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function f2(r){let e;const t=r[12].default,n=xi(t,r,r[13],Z_);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&bi(n,t,i,i[13],e?Mi(t,i[13],s,l2):Si(i[13]),Z_)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function d2(r){let e=r[4](r[1]),t,n,i,s,a,o,l=e&&J_(r);const u=[h2,u2],f=[];function p(d,g){return g&2&&(n=null),n==null&&(n=!!d[3](d[1])),n?0:1}return i=p(r,-1),s=f[i]=u[i](r),{c(){l&&l.c(),t=vs(),s.c(),a=Bi()},l(d){l&&l.l(d),t=ys(d),s.l(d),a=Bi()},m(d,g){l&&l.m(d,g),Hn(d,t,g),f[i].m(d,g),Hn(d,a,g),o=!0},p(d,[g]){g&2&&(e=d[4](d[1])),e?l?(l.p(d,g),g&2&&nt(l,1)):(l=J_(d),l.c(),nt(l,1),l.m(t.parentNode,t)):l&&(Aa(),at(l,1,1,()=>{l=null}),Pa());let v=i;i=p(d,g),i===v?f[i].p(d,g):(Aa(),at(f[v],1,1,()=>{f[v]=null}),Pa(),s=f[i],s?s.p(d,g):(s=f[i]=u[i](d),s.c()),nt(s,1),s.m(a.parentNode,a))},i(d){o||(nt(l),nt(s),o=!0)},o(d){at(l),at(s),o=!1},d(d){d&&(En(t),En(a)),l&&l.d(d),f[i].d(d)}}}function p2(r,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=vg(e,n),s,{$$slots:a={},$$scope:o}=e,{is:l}=e,{args:u=void 0}=e,{attach:f=void 0}=e,{manual:p=void 0}=e,{makeDefault:d=void 0}=e,{dispose:g=void 0}=e;const v=ni("threlte-hierarchical-parent-context");Co(r,v,W=>t(11,s=W));const b=W=>typeof W=="function"&&/^\s*class\s+/.test(W.toString()),y=W=>Array.isArray(W),_=t2();let T=b(l)&&y(u)?new l(...u):b(l)?new l:l;_.updateRef(T);let S=!1;const M=()=>{if(!S){S=!0;return}t(1,T=b(l)&&y(u)?new l(...u):b(l)?new l:l),_.updateRef(T)};let{ref:R=T}=e;const O=ii(T);Vn("threlte-hierarchical-parent-context",O);const U=i2({ref:T,props:e}),B=(U==null?void 0:U.pluginsProps)??[],A=o2(),L=e2(),Q=JO(),he=n2(),$=W=>!!W.isObject3D,Z=W=>W.dispose!==void 0;return r.$$set=W=>{t(27,e=Xf(Xf({},e),yg(W))),t(26,i=vg(e,n)),"is"in W&&t(6,l=W.is),"args"in W&&t(7,u=W.args),"attach"in W&&t(8,f=W.attach),"manual"in W&&t(9,p=W.manual),"makeDefault"in W&&t(10,d=W.makeDefault),"dispose"in W&&t(0,g=W.dispose),"ref"in W&&t(5,R=W.ref),"$$scope"in W&&t(13,o=W.$$scope)},r.$$.update=()=>{r.$$.dirty&192&&M(),r.$$.dirty&2&&t(5,R=T),r.$$.dirty&2&&O.set(T),A.updateProps(T,i,{manualCamera:p,pluginsProps:B}),r.$$.dirty&514&&L.update(T,p),r.$$.dirty&1026&&L.makeDefaultCamera(T,d),r.$$.dirty&2306&&Q.update(T,s,f),r.$$.dirty&2&&he.updateRef(T),r.$$.dirty&2&&(U==null||U.updateRef(T)),U==null||U.updateProps(e),U==null||U.updateRestProps(i)},e=yg(e),[g,T,v,$,Z,R,l,u,f,p,d,s,a,o]}let Tp=class extends Ti{constructor(e){super(),wi(this,e,p2,d2,yi,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const wp=typeof window<"u",m2=()=>{const r=ii({width:0,height:0});if(!wp)return{parentSize:r,parentSizeAction:()=>{}};const e={childList:!0,subtree:!1,attributes:!1};let t;const n=o=>{i.disconnect(),s.disconnect(),i.observe(o),s.observe(o,e)},i=new ResizeObserver(([o])=>{const{contentRect:l}=o;r.set({width:l.width,height:l.height})}),s=new MutationObserver(o=>{for(const l of o)for(const u of l.removedNodes)if(t===u&&t.parentElement){n(t.parentElement);return}}),a=o=>{t=o,t.parentElement&&n(t.parentElement)};return In(()=>{i.disconnect(),s.disconnect()}),{parentSize:r,parentSizeAction:a}},Vl=Number.parseInt($o.replace("dev","")),g2=()=>{Vn("threlte-cache",[])},wy=r=>r.userData,za=(r,e)=>{const t=uv(r,s=>s);let n;const i=t.subscribe(async s=>{n&&n();const a=await e(s);a&&(n=a)});In(()=>{i(),n&&n()})};function Ey(r,e){const t={current:void 0};return za(r,n=>{t.current=e?e(n):n}),t}const Bn=r=>{const e=ii(r),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:r};return t},_2=()=>{const r=new pn(75,0,.1,1e3);return wy(r).threlteDefaultCamera=!0,r.position.z=5,r.lookAt(0,0,0),r},v2=r=>{za(r.size,e=>{wy(av(r.camera)).threlteDefaultCamera&&r.camera.update(t=>{const n=t;return n.aspect=e.width/e.height,n.updateProjectionMatrix(),r.invalidate("Default camera: aspect ratio changed"),n})})},y2=r=>{const e={debugFrameloop:r.debugFrameloop,frame:0,frameInvalidated:!0,invalidations:{},manualFrameHandlers:new Set,autoFrameHandlers:new Set,allFrameHandlers:new Set,allFrameHandlersNeedSortCheck:!1,renderHandlers:new Set,renderHandlersNeedSortCheck:!1,advance:!1,dispose:async(a=!1)=>{await LA(),!(!e.shouldDispose&&!a)&&(e.disposableObjects.forEach((o,l)=>{var u;(o===0||a)&&((u=l==null?void 0:l.dispose)==null||u.call(l),e.disposableObjects.delete(l))}),e.shouldDispose=!1)},collectDisposableObjects:(a,o)=>{const l=o??[];return a&&(a!=null&&a.dispose&&typeof a.dispose=="function"&&a.type!=="Scene"&&l.push(a),Object.entries(a).forEach(([u,f])=>{if(u==="parent"||u==="children"||typeof f!="object")return;const p=f;p!=null&&p.dispose&&e.collectDisposableObjects(p,l)})),l},addDisposableObjects:a=>{a.forEach(o=>{const l=e.disposableObjects.get(o);l?e.disposableObjects.set(o,l+1):e.disposableObjects.set(o,1)})},removeDisposableObjects:a=>{a.length!==0&&(a.forEach(o=>{const l=e.disposableObjects.get(o);l&&l>0&&e.disposableObjects.set(o,l-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},t={size:uv([r.userSize,r.parentSize],([a,o])=>a||o),clock:new yp,camera:Bn(_2()),scene:new tp,renderer:void 0,invalidate:a=>{e.frameInvalidated=!0,e.debugFrameloop&&a&&(e.invalidations[a]=e.invalidations[a]?e.invalidations[a]+1:1)},advance:()=>{e.advance=!0},colorSpace:Bn(r.colorSpace),toneMapping:Bn(r.toneMapping),dpr:Bn(r.dpr),useLegacyLights:Bn(r.useLegacyLights),shadows:Bn(r.shadows),colorManagementEnabled:Bn(r.colorManagementEnabled),frameloop:Bn(r.frameloop)},n=Bn({});return Vn("threlte",t),Vn("threlte-internal-context",e),Vn("threlte-user-context",n),{ctx:t,internalCtx:e,getCtx:()=>t,getInternalCtx:()=>e}},x2=(r,e,t)=>{if(e.allFrameHandlers.size!==0){if(e.allFrameHandlersNeedSortCheck){const n=Array.from(e.allFrameHandlers);if(n.some(s=>s.order)){const s=n.sort((a,o)=>(a.order??0)>(o.order??0)?1:-1);e.allFrameHandlers.clear(),s.forEach(a=>e.allFrameHandlers.add(a))}e.allFrameHandlersNeedSortCheck=!1}if(e.debugFrameloop){let n=0;e.autoFrameHandlers.forEach(i=>{i.debugFrameloopMessage?e.invalidations[i.debugFrameloopMessage]=i.debugFrameloopMessage in e.invalidations?e.invalidations[i.debugFrameloopMessage]+1:1:++n}),n>0&&(e.invalidations.useFrame=e.autoFrameHandlers.size)}e.allFrameHandlers.forEach(n=>n.fn(r,t))}},b2=(r,e,t)=>{if(e.renderHandlers.size!==0){if(e.renderHandlersNeedSortCheck){const n=Array.from(e.renderHandlers);if(n.some(s=>s.order)){const s=n.sort((a,o)=>(a.order??0)>(o.order??0)?1:-1);e.renderHandlers.clear(),s.forEach(a=>e.renderHandlers.add(a))}e.renderHandlersNeedSortCheck=!1}e.renderHandlers.forEach(n=>n.fn(r,t))}},S2=r=>{r.debugFrameloop&&(r.frame+=1,console.log(`frame: ${r.frame}${Object.keys(r.invalidations).length>0?", requested by ↴":""}`),Object.keys(r.invalidations).length>0&&console.table(r.invalidations),r.invalidations={})},M2=(r,e)=>r.frameloop.current==="always"||r.frameloop.current==="demand"&&(e.frameInvalidated||e.autoFrameHandlers.size>0)||r.frameloop.current==="never"&&e.advance,T2=(r,e)=>{r.renderer.setAnimationLoop(()=>{e.dispose();const t=r.clock.getDelta();x2(r,e,t),M2(r,e)&&(e.renderHandlers.size>0?b2(r,e,t):r.camera.current&&r.renderer.render(r.scene,r.camera.current),S2(e),e.frameInvalidated=!1,e.advance=!1)})},w2={srgb:lr,"srgb-linear":Fo,"":Fo},E2=r=>r.outputColorSpace!==void 0,A2=r=>{const e=ii(void 0),t=(n,i)=>{r.renderer=new ep({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(r.renderer)};return za([e,r.size,r.toneMapping,r.colorSpace,r.dpr,r.shadows,r.colorManagementEnabled,r.useLegacyLights],([n,i,s,a,o,l,u,f])=>{if(!n)return;if(n.setSize(i.width,i.height),n.setPixelRatio(o),E2(n))n.outputColorSpace=a;else{const g=w2[a];g?n.outputEncoding=g:console.warn("No encoding found for colorSpace",a)}n.toneMapping=s,n.shadowMap.enabled=!!l,l&&l!==!0?n.shadowMap.type=l:l===!0&&(n.shadowMap.type=Zl);const p=Qn;Vl>=150?p.enabled=u:p.legacyMode=!u;const d=n;Vl>=150&&f?d.useLegacyLights=f:Vl<150&&(d.physicallyCorrectLights=!f)}),{createRenderer:t}};function K_(r){let e,t;return e=new Tp({props:{is:r[3].ctx.scene,$$slots:{default:[P2]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&131072&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function P2(r){let e;const t=r[15].default,n=xi(t,r,r[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&131072)&&bi(n,t,i,i[17],e?Mi(t,i[17],s,null):Si(i[17]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function C2(r){let e,t,n,i,s=r[1]&&K_(r);return{c(){e=ov("canvas"),s&&s.c(),this.h()},l(a){e=cv(a,"CANVAS",{class:!0});var o=lv(e);s&&s.l(o),o.forEach(En),this.h()},h(){UA(e,"class","svelte-o3oskp")},m(a,o){Hn(a,e,o),s&&s.m(e,null),r[16](e),t=!0,n||(i=DA(r[2].call(null,e)),n=!0)},p(a,[o]){a[1]?s?(s.p(a,o),o&2&&nt(s,1)):(s=K_(a),s.c(),nt(s,1),s.m(e,null)):s&&(Aa(),at(s,1,1,()=>{s=null}),Pa())},i(a){t||(nt(s),t=!0)},o(a){at(s),t=!1},d(a){a&&En(e),s&&s.d(),r[16](null),n=!1,i()}}}const Q_=new Set;function R2(r,e,t){let{$$slots:n={},$$scope:i}=e,{dpr:s=wp?window.devicePixelRatio:1}=e,{toneMapping:a=Fd}=e,{colorSpace:o="srgb"}=e,{frameloop:l="demand"}=e,{debugFrameloop:u=!1}=e,{shadows:f=Zl}=e,{size:p=void 0}=e,{rendererParameters:d=void 0}=e,{colorManagementEnabled:g=!0}=e,{useLegacyLights:v=!(Vl>=155)}=e,b,y=!1;const _=ii(p),{parentSize:T,parentSizeAction:S}=m2(),M=y2({colorSpace:o,toneMapping:a,dpr:s,userSize:_,parentSize:T,debugFrameloop:u,frameloop:l,shadows:f,colorManagementEnabled:g,useLegacyLights:v});g2();const R=M.ctx;v2(R),Q_.add(R.invalidate),In(()=>{Q_.delete(R.invalidate)});const{createRenderer:O}=A2(R);$l(()=>{O(b,d),T2(M.ctx,M.internalCtx),t(1,y=!0)}),In(()=>{var B;M.internalCtx.dispose(!0),(B=M.ctx.renderer)==null||B.dispose()});function U(B){OA[B?"unshift":"push"](()=>{b=B,t(0,b)})}return r.$$set=B=>{"dpr"in B&&t(4,s=B.dpr),"toneMapping"in B&&t(5,a=B.toneMapping),"colorSpace"in B&&t(6,o=B.colorSpace),"frameloop"in B&&t(7,l=B.frameloop),"debugFrameloop"in B&&t(8,u=B.debugFrameloop),"shadows"in B&&t(9,f=B.shadows),"size"in B&&t(10,p=B.size),"rendererParameters"in B&&t(11,d=B.rendererParameters),"colorManagementEnabled"in B&&t(12,g=B.colorManagementEnabled),"useLegacyLights"in B&&t(13,v=B.useLegacyLights),"$$scope"in B&&t(17,i=B.$$scope)},r.$$.update=()=>{r.$$.dirty&1024&&_.set(p)},[b,y,S,M,s,a,o,l,u,f,p,d,g,v,R,n,U,i]}class I2 extends Ti{constructor(e){super(),wi(this,e,R2,C2,yi,{dpr:4,toneMapping:5,colorSpace:6,frameloop:7,debugFrameloop:8,shadows:9,size:10,rendererParameters:11,colorManagementEnabled:12,useLegacyLights:13,ctx:14})}get ctx(){return this.$$.ctx[14]}}const L2={},D2=(r,e)=>{const t=L2[e]||NO[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...r,props:{...r.props,is:t}}},O2=r=>new Proxy(class{},{construct(e,[t]){const n=t;return new Tp(D2(n,r))}}),rr=new Proxy(class{},{construct(r,[e]){const t=e;return new Tp(t)},get(r,e){return O2(e)}});function U2(r,e){const t="threlte-plugin-context";if(Array.isArray(r)){const[n,i]=r;Vn(t,{...ni(t),[n]:i})}else{const n=r,i=e;if(!i)return;Vn(t,{...ni(t),[n]:i})}}const N2=(r,e)=>{if(!wp)return{start:()=>{},stop:()=>{},started:NA(!1)};const t=ni("threlte-internal-context");if(t===void 0)throw new Error("No Threlte context found, are you using this hook inside of <Canvas>?");const n=(e==null?void 0:e.invalidate)??!0,i={fn:r,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage,invalidate:n},s=ii(!1),a=()=>{n?t.autoFrameHandlers.delete(i):t.manualFrameHandlers.delete(i),t.allFrameHandlers.delete(i),s.set(!1)},o=()=>{n?t.autoFrameHandlers.add(i):t.manualFrameHandlers.add(i),t.allFrameHandlers.add(i),t.allFrameHandlersNeedSortCheck=!0,s.set(!0)};return((e==null?void 0:e.autostart)??!0)&&o(),In(()=>{a()}),{start:o,stop:a,started:{subscribe:s.subscribe}}};function F2(r){let e;const t=r[3].default,n=xi(t,r,r[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&bi(n,t,i,i[4],e?Mi(t,i[4],s,null):Si(i[4]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function B2(r){let e,t,n={ctx:r,current:null,token:null,hasCatch:!1,pending:V2,then:k2,catch:z2,value:5,blocks:[,,,]};return pv(FA(()=>import("./InnerStudio.4f9d3ce1.js"),["./InnerStudio.4f9d3ce1.js","./scheduler.5ead0948.js","./index.096152c6.js","./index.cae1bb1e.js"],import.meta.url),n),{c(){e=Bi(),n.block.c()},l(i){e=Bi(),n.block.l(i)},m(i,s){Hn(i,e,s),n.block.m(i,n.anchor=s),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(i,s){r=i,mv(n,r,s)},i(i){t||(nt(n.block),t=!0)},o(i){for(let s=0;s<3;s+=1){const a=n.blocks[s];at(a)}t=!1},d(i){i&&En(e),n.block.d(i),n.token=null,n=null}}}function z2(r){return{c:wt,l:wt,m:wt,p:wt,i:wt,o:wt,d:wt}}function k2(r){let e,t,n;var i=r[5].default;function s(a,o){return{props:{hide:a[1],$$slots:{default:[H2]},$$scope:{ctx:a}}}}return i&&(e=xg(i,s(r))),{c(){e&&Jt(e.$$.fragment),t=Bi()},l(a){e&&sn(e.$$.fragment,a),t=Bi()},m(a,o){e&&Kt(e,a,o),Hn(a,t,o),n=!0},p(a,o){if(i!==(i=a[5].default)){if(e){Aa();const l=e;at(l.$$.fragment,1,0,()=>{Qt(l,1)}),Pa()}i?(e=xg(i,s(a)),Jt(e.$$.fragment),nt(e.$$.fragment,1),Kt(e,t.parentNode,t)):e=null}else if(i){const l={};o&2&&(l.hide=a[1]),o&16&&(l.$$scope={dirty:o,ctx:a}),e.$set(l)}},i(a){n||(e&&nt(e.$$.fragment,a),n=!0)},o(a){e&&at(e.$$.fragment,a),n=!1},d(a){a&&En(t),e&&Qt(e,a)}}}function H2(r){let e;const t=r[3].default,n=xi(t,r,r[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&bi(n,t,i,i[4],e?Mi(t,i[4],s,null):Si(i[4]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function V2(r){return{c:wt,l:wt,m:wt,p:wt,i:wt,o:wt,d:wt}}function G2(r){let e,t,n,i;const s=[B2,F2],a=[];function o(l,u){return l[2]&&l[0]?0:1}return e=o(r),t=a[e]=s[e](r),{c(){t.c(),n=Bi()},l(l){t.l(l),n=Bi()},m(l,u){a[e].m(l,u),Hn(l,n,u),i=!0},p(l,[u]){let f=e;e=o(l),e===f?a[e].p(l,u):(Aa(),at(a[f],1,1,()=>{a[f]=null}),Pa(),t=a[e],t?t.p(l,u):(t=a[e]=s[e](l),t.c()),nt(t,1),t.m(n.parentNode,n))},i(l){i||(nt(t),i=!0)},o(l){at(t),i=!1},d(l){l&&En(n),a[e].d(l)}}}function W2(r,e,t){let{$$slots:n={},$$scope:i}=e,{enabled:s=!0}=e,{hide:a=!1}=e;const o=typeof window<"u";return r.$$set=l=>{"enabled"in l&&t(0,s=l.enabled),"hide"in l&&t(1,a=l.hide),"$$scope"in l&&t(4,i=l.$$scope)},[s,a,o,n,i]}class X2 extends Ti{constructor(e){super(),wi(this,e,W2,G2,yi,{enabled:0,hide:1})}}const ev=new Map,tv=new Map,GU=Bn(void 0);var Di=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function j2(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var ql={exports:{}},rn={};(function(r){var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(w,I,H)=>I in w?e(w,I,{enumerable:!0,configurable:!0,writable:!0,value:H}):w[I]=H,l=(w,I)=>{for(var H in I||(I={}))s.call(I,H)&&o(w,H,I[H]);if(i)for(var H of i(I))a.call(I,H)&&o(w,H,I[H]);return w},u=(w,I)=>t(w,n(I)),f=w=>e(w,"__esModule",{value:!0}),p=(w,I)=>{f(w);for(var H in I)e(w,H,{get:I[H],enumerable:!0})};p(r,{Atom:()=>wc,PointerProxy:()=>_h,Ticker:()=>Ac,getPointerParts:()=>Vr,isPointer:()=>Gi,isPrism:()=>Ws,iterateAndCountTicks:()=>ph,iterateOver:()=>gh,pointer:()=>qa,pointerToPrism:()=>js,prism:()=>jr,val:()=>Qa});var d=Array.isArray,g=d,v=typeof Di=="object"&&Di&&Di.Object===Object&&Di,b=v,y=typeof self=="object"&&self&&self.Object===Object&&self,_=b||y||Function("return this")(),T=_,S=T.Symbol,M=S,R=Object.prototype,O=R.hasOwnProperty,U=R.toString,B=M?M.toStringTag:void 0;function A(w){var I=O.call(w,B),H=w[B];try{w[B]=void 0;var te=!0}catch{}var Je=U.call(w);return te&&(I?w[B]=H:delete w[B]),Je}var L=A,Q=Object.prototype,he=Q.toString;function $(w){return he.call(w)}var Z=$,W="[object Null]",ie="[object Undefined]",ae=M?M.toStringTag:void 0;function ce(w){return w==null?w===void 0?ie:W:ae&&ae in Object(w)?L(w):Z(w)}var de=ce;function ue(w){return w!=null&&typeof w=="object"}var q=ue,oe="[object Symbol]";function Ae(w){return typeof w=="symbol"||q(w)&&de(w)==oe}var Ce=Ae,we=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Ye=/^\w*$/;function Ne(w,I){if(g(w))return!1;var H=typeof w;return H=="number"||H=="symbol"||H=="boolean"||w==null||Ce(w)?!0:Ye.test(w)||!we.test(w)||I!=null&&w in Object(I)}var Ge=Ne;function gt(w){var I=typeof w;return w!=null&&(I=="object"||I=="function")}var Et=gt,Xe="[object AsyncFunction]",k="[object Function]",Me="[object GeneratorFunction]",le="[object Proxy]";function xe(w){if(!Et(w))return!1;var I=de(w);return I==k||I==Me||I==Xe||I==le}var pe=xe,Ve=T["__core-js_shared__"],Ie=Ve,Ue=function(){var w=/[^.]+$/.exec(Ie&&Ie.keys&&Ie.keys.IE_PROTO||"");return w?"Symbol(src)_1."+w:""}();function et(w){return!!Ue&&Ue in w}var dt=et,xt=Function.prototype,F=xt.toString;function P(w){if(w!=null){try{return F.call(w)}catch{}try{return w+""}catch{}}return""}var J=P,ve=/[\\^$.*+?()[\]{}|]/g,me=/^\[object .+?Constructor\]$/,ye=Function.prototype,He=Object.prototype,be=ye.toString,K=He.hasOwnProperty,qe=RegExp("^"+be.call(K).replace(ve,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function De(w){if(!Et(w)||dt(w))return!1;var I=pe(w)?qe:me;return I.test(J(w))}var je=De;function Fe(w,I){return w==null?void 0:w[I]}var Be=Fe;function ct(w,I){var H=Be(w,I);return je(H)?H:void 0}var Mt=ct,V=Mt(Object,"create"),Te=V;function ee(){this.__data__=Te?Te(null):{},this.size=0}var Se=ee;function Re(w){var I=this.has(w)&&delete this.__data__[w];return this.size-=I?1:0,I}var _t=Re,Rt="__lodash_hash_undefined__",Ht=Object.prototype,ri=Ht.hasOwnProperty;function vt(w){var I=this.__data__;if(Te){var H=I[w];return H===Rt?void 0:H}return ri.call(I,w)?I[w]:void 0}var On=vt,an=Object.prototype,Os=an.hasOwnProperty;function Us(w){var I=this.__data__;return Te?I[w]!==void 0:Os.call(I,w)}var ka=Us,pr="__lodash_hash_undefined__";function Ns(w,I){var H=this.__data__;return this.size+=this.has(w)?0:1,H[w]=Te&&I===void 0?pr:I,this}var mr=Ns;function ui(w){var I=-1,H=w==null?0:w.length;for(this.clear();++I<H;){var te=w[I];this.set(te[0],te[1])}}ui.prototype.clear=Se,ui.prototype.delete=_t,ui.prototype.get=On,ui.prototype.has=ka,ui.prototype.set=mr;var Fs=ui;function Ha(){this.__data__=[],this.size=0}var Va=Ha;function D(w,I){return w===I||w!==w&&I!==I}var j=D;function re(w,I){for(var H=w.length;H--;)if(j(w[H][0],I))return H;return-1}var Y=re,se=Array.prototype,Oe=se.splice;function $e(w){var I=this.__data__,H=Y(I,w);if(H<0)return!1;var te=I.length-1;return H==te?I.pop():Oe.call(I,H,1),--this.size,!0}var Ke=$e;function Qe(w){var I=this.__data__,H=Y(I,w);return H<0?void 0:I[H][1]}var lt=Qe;function Ze(w){return Y(this.__data__,w)>-1}var rt=Ze;function Dt(w,I){var H=this.__data__,te=Y(H,w);return te<0?(++this.size,H.push([w,I])):H[te][1]=I,this}var zt=Dt;function jt(w){var I=-1,H=w==null?0:w.length;for(this.clear();++I<H;){var te=w[I];this.set(te[0],te[1])}}jt.prototype.clear=Va,jt.prototype.delete=Ke,jt.prototype.get=lt,jt.prototype.has=rt,jt.prototype.set=zt;var Xn=jt,Vt=Mt(T,"Map"),ht=Vt;function Br(){this.size=0,this.__data__={hash:new Fs,map:new(ht||Xn),string:new Fs}}var At=Br;function si(w){var I=typeof w;return I=="string"||I=="number"||I=="symbol"||I=="boolean"?w!=="__proto__":w===null}var Bs=si;function Vi(w,I){var H=w.__data__;return Bs(I)?H[typeof I=="string"?"string":"hash"]:H.map}var Ci=Vi;function qt(w){var I=Ci(this,w).delete(w);return this.size-=I?1:0,I}var hi=qt;function Ri(w){return Ci(this,w).get(w)}var gn=Ri;function zr(w){return Ci(this,w).has(w)}var Ga=zr;function zs(w,I){var H=Ci(this,w),te=H.size;return H.set(w,I),this.size+=H.size==te?0:1,this}var Pu=zs;function gr(w){var I=-1,H=w==null?0:w.length;for(this.clear();++I<H;){var te=w[I];this.set(te[0],te[1])}}gr.prototype.clear=At,gr.prototype.delete=hi,gr.prototype.get=gn,gr.prototype.has=Ga,gr.prototype.set=Pu;var sc=gr,Cu="Expected a function";function Wa(w,I){if(typeof w!="function"||I!=null&&typeof I!="function")throw new TypeError(Cu);var H=function(){var te=arguments,Je=I?I.apply(this,te):te[0],bt=H.cache;if(bt.has(Je))return bt.get(Je);var _n=w.apply(this,te);return H.cache=bt.set(Je,_n)||bt,_n};return H.cache=new(Wa.Cache||sc),H}Wa.Cache=sc;var Ru=Wa,_r=500;function ks(w){var I=Ru(w,function(te){return H.size===_r&&H.clear(),te}),H=I.cache;return I}var Iu=ks,kr=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Lu=/\\(\\)?/g,Du=Iu(function(w){var I=[];return w.charCodeAt(0)===46&&I.push(""),w.replace(kr,function(H,te,Je,bt){I.push(Je?bt.replace(Lu,"$1"):te||H)}),I}),Ou=Du;function Uu(w,I){for(var H=-1,te=w==null?0:w.length,Je=Array(te);++H<te;)Je[H]=I(w[H],H,w);return Je}var Nu=Uu,Hs=1/0,ac=M?M.prototype:void 0,oc=ac?ac.toString:void 0;function cc(w){if(typeof w=="string")return w;if(g(w))return Nu(w,cc)+"";if(Ce(w))return oc?oc.call(w):"";var I=w+"";return I=="0"&&1/w==-Hs?"-0":I}var Fu=cc;function Bu(w){return w==null?"":Fu(w)}var zu=Bu;function ku(w,I){return g(w)?w:Ge(w,I)?[w]:Ou(zu(w))}var Hu=ku,vr=1/0;function Vs(w){if(typeof w=="string"||Ce(w))return w;var I=w+"";return I=="0"&&1/w==-vr?"-0":I}var Vu=Vs;function Xa(w,I){I=Hu(I,w);for(var H=0,te=I.length;w!=null&&H<te;)w=w[Vu(I[H++])];return H&&H==te?w:void 0}var Gu=Xa;function Wu(w,I,H){var te=w==null?void 0:Gu(w,I);return te===void 0?H:te}var Xu=Wu;function ju(w,I){return function(H){return w(I(H))}}var qu=ju,Yu=qu(Object.getPrototypeOf,Object),$u=Yu,Zu="[object Object]",Ju=Function.prototype,Ku=Object.prototype,lc=Ju.toString,uc=Ku.hasOwnProperty,hc=lc.call(Object);function fc(w){if(!q(w)||de(w)!=Zu)return!1;var I=$u(w);if(I===null)return!0;var H=uc.call(I,"constructor")&&I.constructor;return typeof H=="function"&&H instanceof H&&lc.call(H)==hc}var dc=fc;function Qu(w){var I=w==null?0:w.length;return I?w[I-1]:void 0}var pc=Qu,ja=new WeakMap,Hr=new WeakMap,mc=Symbol("pointerMeta"),eh={get(w,I){if(I===mc)return ja.get(w);let H=Hr.get(w);H||(H=new Map,Hr.set(w,H));const te=H.get(I);if(te!==void 0)return te;const Je=ja.get(w),bt=Gs({root:Je.root,path:[...Je.path,I]});return H.set(I,bt),bt}},fi=w=>w[mc],Vr=w=>{const{root:I,path:H}=fi(w);return{root:I,path:H}};function Gs(w){var I;const H={root:w.root,path:(I=w.path)!=null?I:[]},te={};return ja.set(te,H),new Proxy(te,eh)}var qa=Gs,Gi=w=>w&&!!fi(w);function gc(w,I,H){return I.length===0?H(w):yr(w,I,H)}var yr=(w,I,H)=>{if(I.length===0)return H(w);if(Array.isArray(w)){let[te,...Je]=I;te=parseInt(String(te),10),isNaN(te)&&(te=0);const bt=w[te],_n=yr(bt,Je,H);if(bt===_n)return w;const ai=[...w];return ai.splice(te,1,_n),ai}else if(typeof w=="object"&&w!==null){const[te,...Je]=I,bt=w[te],_n=yr(bt,Je,H);return bt===_n?w:u(l({},w),{[te]:_n})}else{const[te,...Je]=I;return{[te]:yr(void 0,Je,H)}}},on=class{constructor(){this._head=void 0}peek(){return this._head&&this._head.data}pop(){const w=this._head;if(w)return this._head=w.next,w.data}push(w){const I={next:this._head,data:w};this._head=I}};function Ws(w){return!!(w&&w.isPrism&&w.isPrism===!0)}function Ya(){const w=()=>{},I=new on,H=w;return{type:"Dataverse_discoveryMechanism",startIgnoringDependencies:()=>{I.push(H)},stopIgnoringDependencies:()=>{I.peek()!==H||I.pop()},reportResolutionStart:xr=>{const qr=I.peek();qr&&qr(xr),I.push(H)},reportResolutionEnd:xr=>{I.pop()},pushCollector:xr=>{I.push(xr)},popCollector:xr=>{if(I.peek()!==xr)throw new Error("Popped collector is not on top of the stack");I.pop()}}}function th(){const w="__dataverse_discoveryMechanism_sharedStack",I=typeof window<"u"?window:typeof Di<"u"?Di:{};if(I){const H=I[w];if(H&&typeof H=="object"&&H.type==="Dataverse_discoveryMechanism")return H;{const te=Ya();return I[w]=te,te}}else return Ya()}var{startIgnoringDependencies:Wi,stopIgnoringDependencies:Gr,reportResolutionEnd:nh,reportResolutionStart:ih,pushCollector:$a,popCollector:rh}=th(),_c=()=>{},sh=class{constructor(w,I){this._fn=w,this._prismInstance=I,this._didMarkDependentsAsStale=!1,this._isFresh=!1,this._cacheOfDendencyValues=new Map,this._dependents=new Set,this._dependencies=new Set,this._possiblyStaleDeps=new Set,this._scope=new vc(this),this._lastValue=void 0,this._forciblySetToStale=!1,this._reactToDependencyGoingStale=H=>{this._possiblyStaleDeps.add(H),this._markAsStale()};for(const H of this._dependencies)H._addDependent(this._reactToDependencyGoingStale);Wi(),this.getValue(),Gr()}get hasDependents(){return this._dependents.size>0}removeDependent(w){this._dependents.delete(w)}addDependent(w){this._dependents.add(w)}destroy(){for(const w of this._dependencies)w._removeDependent(this._reactToDependencyGoingStale);yc(this._scope)}getValue(){if(!this._isFresh){const w=this._recalculate();this._lastValue=w,this._isFresh=!0,this._didMarkDependentsAsStale=!1,this._forciblySetToStale=!1}return this._lastValue}_recalculate(){let w;if(!this._forciblySetToStale&&this._possiblyStaleDeps.size>0){let te=!1;Wi();for(const Je of this._possiblyStaleDeps)if(this._cacheOfDendencyValues.get(Je)!==Je.getValue()){te=!0;break}if(Gr(),this._possiblyStaleDeps.clear(),!te)return this._lastValue}const I=new Set;this._cacheOfDendencyValues.clear();const H=te=>{I.add(te),this._addDependency(te)};$a(H),fn.push(this._scope);try{w=this._fn()}catch(te){console.error(te)}finally{fn.pop()!==this._scope&&console.warn("The Prism hook stack has slipped. This is a bug.")}rh(H);for(const te of this._dependencies)I.has(te)||this._removeDependency(te);this._dependencies=I,Wi();for(const te of I)this._cacheOfDendencyValues.set(te,te.getValue());return Gr(),w}forceStale(){this._forciblySetToStale=!0,this._markAsStale()}_markAsStale(){if(!this._didMarkDependentsAsStale){this._didMarkDependentsAsStale=!0,this._isFresh=!1;for(const w of this._dependents)w(this._prismInstance)}}_addDependency(w){this._dependencies.has(w)||(this._dependencies.add(w),w._addDependent(this._reactToDependencyGoingStale))}_removeDependency(w){this._dependencies.has(w)&&(this._dependencies.delete(w),w._removeDependent(this._reactToDependencyGoingStale))}},Za={},ah=class{constructor(w){this._fn=w,this.isPrism=!0,this._state={hot:!1,handle:void 0}}get isHot(){return this._state.hot}onChange(w,I,H=!1){const te=()=>{w.onThisOrNextTick(bt)};let Je=Za;const bt=()=>{const ai=this.getValue();ai!==Je&&(Je=ai,I(ai))};return this._addDependent(te),H&&(Je=this.getValue(),I(Je)),()=>{this._removeDependent(te),w.offThisOrNextTick(bt),w.offNextTick(bt)}}onStale(w){const I=()=>{this._removeDependent(H)},H=()=>w();return this._addDependent(H),I}keepHot(){return this.onStale(()=>{})}_addDependent(w){this._state.hot||this._goHot(),this._state.handle.addDependent(w)}_goHot(){const w=new sh(this._fn,this);this._state={hot:!0,handle:w}}_removeDependent(w){const I=this._state;if(!I.hot)return;const H=I.handle;H.removeDependent(w),H.hasDependents||(this._state={hot:!1,handle:void 0},H.destroy())}getValue(){ih(this);const w=this._state;let I;return w.hot?I=w.handle.getValue():I=Xr(this._fn),nh(this),I}},vc=class{constructor(w){this._hotHandle=w,this._refs=new Map,this.isPrismScope=!0,this.subs={},this.effects=new Map,this.memos=new Map}ref(w,I){let H=this._refs.get(w);if(H!==void 0)return H;{const te={current:I};return this._refs.set(w,te),te}}effect(w,I,H){let te=this.effects.get(w);te===void 0&&(te={cleanup:_c,deps:void 0},this.effects.set(w,te)),xc(te.deps,H)&&(te.cleanup(),Wi(),te.cleanup=Xs(I,_c).value,Gr(),te.deps=H)}memo(w,I,H){let te=this.memos.get(w);return te===void 0&&(te={cachedValue:null,deps:void 0},this.memos.set(w,te)),xc(te.deps,H)&&(Wi(),te.cachedValue=Xs(I,void 0).value,Gr(),te.deps=H),te.cachedValue}state(w,I){const{value:H,setValue:te}=this.memo("state/"+w,()=>{const Je={current:I};return{value:Je,setValue:_n=>{Je.current=_n,this._hotHandle.forceStale()}}},[]);return[H.current,te]}sub(w){return this.subs[w]||(this.subs[w]=new vc(this._hotHandle)),this.subs[w]}cleanupEffects(){for(const w of this.effects.values())Xs(w.cleanup,void 0);this.effects.clear()}source(w,I){const H="$$source/blah";return this.effect(H,()=>w(()=>{this._hotHandle.forceStale()}),[w]),I()}};function yc(w){for(const I of Object.values(w.subs))yc(I);w.cleanupEffects()}function Xs(w,I){try{return{value:w(),ok:!0}}catch(H){return setTimeout(function(){throw H}),{value:I,ok:!1}}}var fn=new on;function oh(w,I){const H=fn.peek();if(!H)throw new Error("prism.ref() is called outside of a prism() call.");return H.ref(w,I)}function Ja(w,I,H){const te=fn.peek();if(!te)throw new Error("prism.effect() is called outside of a prism() call.");return te.effect(w,I,H)}function xc(w,I){if(w===void 0||I===void 0)return!0;const H=w.length;if(H!==I.length)return!0;for(let te=0;te<H;te++)if(w[te]!==I[te])return!0;return!1}function bc(w,I,H){const te=fn.peek();if(!te)throw new Error("prism.memo() is called outside of a prism() call.");return te.memo(w,I,H)}function Pn(w,I){const H=fn.peek();if(!H)throw new Error("prism.state() is called outside of a prism() call.");return H.state(w,I)}function ch(){if(!fn.peek())throw new Error("The parent function is called outside of a prism() call.")}function lh(w,I){const H=fn.peek();if(!H)throw new Error("prism.scope() is called outside of a prism() call.");const te=H.sub(w);fn.push(te);const Je=Xs(I,void 0).value;return fn.pop(),Je}function uh(w,I,H){return bc(w,()=>cn(I),H).getValue()}function Sc(){return!!fn.peek()}function hh(w,I){const H=fn.peek();if(!H)throw new Error("prism.source() is called outside of a prism() call.");return H.source(w,I)}var cn=w=>new ah(w),Wr=class{effect(w,I,H){console.warn("prism.effect() does not run in cold prisms")}memo(w,I,H){return I()}state(w,I){return[I,()=>{}]}ref(w,I){return{current:I}}sub(w){return new Wr}source(w,I){return I()}};function Xr(w){const I=new Wr;fn.push(I);let H;try{H=w()}catch(te){console.error(te)}finally{fn.pop()!==I&&console.warn("The Prism hook stack has slipped. This is a bug.")}return H}cn.ref=oh,cn.effect=Ja,cn.memo=bc,cn.ensurePrism=ch,cn.state=Pn,cn.scope=lh,cn.sub=uh,cn.inPrism=Sc,cn.source=hh;var jr=cn,Mc;(function(w){w[w.Dict=0]="Dict",w[w.Array=1]="Array",w[w.Other=2]="Other"})(Mc||(Mc={}));var Pt=w=>Array.isArray(w)?1:dc(w)?0:2,Ka=(w,I,H=Pt(w))=>H===0&&typeof I=="string"||H===1&&fh(I)?w[I]:void 0,fh=w=>{const I=typeof w=="number"?w:parseInt(w,10);return!isNaN(I)&&I>=0&&I<1/0&&(I|0)===I},Tc=class{constructor(w,I){this._parent=w,this._path=I,this.children=new Map,this.identityChangeListeners=new Set}addIdentityChangeListener(w){this.identityChangeListeners.add(w)}removeIdentityChangeListener(w){this.identityChangeListeners.delete(w),this._checkForGC()}removeChild(w){this.children.delete(w),this._checkForGC()}getChild(w){return this.children.get(w)}getOrCreateChild(w){let I=this.children.get(w);return I||(I=I=new Tc(this,this._path.concat([w])),this.children.set(w,I)),I}_checkForGC(){this.identityChangeListeners.size>0||this.children.size>0||this._parent&&this._parent.removeChild(pc(this._path))}},wc=class{constructor(w){this.$$isPointerToPrismProvider=!0,this.pointer=qa({root:this,path:[]}),this.prism=this.pointerToPrism(this.pointer),this._onPointerValueChange=(I,H)=>{const{path:te}=Vr(I),Je=this._getOrCreateScopeForPath(te);return Je.identityChangeListeners.add(H),()=>{Je.identityChangeListeners.delete(H)}},this._currentState=w,this._rootScope=new Tc(void 0,[])}set(w){const I=this._currentState;this._currentState=w,this._checkUpdates(this._rootScope,I,w)}get(){return this._currentState}getByPointer(w){const I=Gi(w)?w:w(this.pointer),H=Vr(I).path;return this._getIn(H)}_getIn(w){return w.length===0?this.get():Xu(this.get(),w)}reduce(w){this.set(w(this.get()))}reduceByPointer(w,I){const H=Gi(w)?w:w(this.pointer),te=Vr(H).path,Je=gc(this.get(),te,I);this.set(Je)}setByPointer(w,I){this.reduceByPointer(w,()=>I)}_checkUpdates(w,I,H){if(I===H)return;for(const bt of w.identityChangeListeners)bt(H);if(w.children.size===0)return;const te=Pt(I),Je=Pt(H);if(!(te===2&&te===Je))for(const[bt,_n]of w.children){const ai=Ka(I,bt,te),Pc=Ka(H,bt,Je);this._checkUpdates(_n,ai,Pc)}}_getOrCreateScopeForPath(w){let I=this._rootScope;for(const H of w)I=I.getOrCreateChild(H);return I}pointerToPrism(w){const{path:I}=Vr(w),H=Je=>this._onPointerValueChange(w,Je),te=()=>this._getIn(I);return jr(()=>jr.source(H,te))}},Ec=new WeakMap;function dh(w){return typeof w=="object"&&w!==null&&w.$$isPointerToPrismProvider===!0}var js=w=>{const I=fi(w);let H=Ec.get(I);if(!H){const te=I.root;if(!dh(te))throw new Error("Cannot run pointerToPrism() on a pointer whose root is not an PointerToPrismProvider");H=te.pointerToPrism(w),Ec.set(I,H)}return H},Qa=w=>Gi(w)?js(w).getValue():Ws(w)?w.getValue():w;function*ph(w){let I;if(Gi(w))I=js(w);else if(Ws(w))I=w;else throw new Error("Only pointers and prisms are supported");let H=0;const te=I.onStale(()=>{H++});try{for(;;){const Je=H;H=0,yield{value:I.getValue(),ticks:Je}}}finally{te()}}var mh=60*3,Ac=class{constructor(w){this._conf=w,this._ticking=!1,this._dormant=!0,this._numberOfDormantTicks=0,this.__ticks=0,this._scheduledForThisOrNextTick=new Set,this._scheduledForNextTick=new Set,this._timeAtCurrentTick=0}get dormant(){return this._dormant}onThisOrNextTick(w){this._scheduledForThisOrNextTick.add(w),this._dormant&&this._goActive()}onNextTick(w){this._scheduledForNextTick.add(w),this._dormant&&this._goActive()}offThisOrNextTick(w){this._scheduledForThisOrNextTick.delete(w)}offNextTick(w){this._scheduledForNextTick.delete(w)}get time(){return this._ticking?this._timeAtCurrentTick:performance.now()}_goActive(){var w,I;this._dormant&&(this._dormant=!1,(I=(w=this._conf)==null?void 0:w.onActive)==null||I.call(w))}_goDormant(){var w,I;this._dormant||(this._dormant=!0,this._numberOfDormantTicks=0,(I=(w=this._conf)==null?void 0:w.onDormant)==null||I.call(w))}tick(w=performance.now()){if(this.__ticks++,!this._dormant&&this._scheduledForNextTick.size===0&&this._scheduledForThisOrNextTick.size===0&&(this._numberOfDormantTicks++,this._numberOfDormantTicks>=mh)){this._goDormant();return}this._ticking=!0,this._timeAtCurrentTick=w;for(const I of this._scheduledForNextTick)this._scheduledForThisOrNextTick.add(I);this._scheduledForNextTick.clear(),this._tick(0),this._ticking=!1}_tick(w){const I=this.time;if(w>10&&console.warn("_tick() recursing for 10 times"),w>100)throw new Error("Maximum recursion limit for _tick()");const H=this._scheduledForThisOrNextTick;this._scheduledForThisOrNextTick=new Set;for(const te of H)te(I);if(this._scheduledForThisOrNextTick.size>0)return this._tick(w+1)}};function*gh(w){let I;if(Gi(w))I=js(w);else if(Ws(w))I=w;else throw new Error("Only pointers and prisms are supported");const H=new Ac,te=I.onChange(H,Je=>{});try{for(;;)H.tick(),yield I.getValue()}finally{te()}}var _h=class{constructor(w){this.$$isPointerToPrismProvider=!0,this._currentPointerBox=new wc(w),this.pointer=qa({root:this,path:[]})}setPointer(w){this._currentPointerBox.set(w)}pointerToPrism(w){const{path:I}=fi(w);return jr(()=>{const H=this._currentPointerBox.prism.getValue(),te=I.reduce((Je,bt)=>Je[bt],H);return Qa(te)})}}})(rn);ql.exports;(function(r,e){var t=Object.create,n=Object.defineProperty,i=Object.defineProperties,s=Object.getOwnPropertyDescriptor,a=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(c,h,m)=>h in c?n(c,h,{enumerable:!0,configurable:!0,writable:!0,value:m}):c[h]=m,g=(c,h)=>{for(var m in h||(h={}))f.call(h,m)&&d(c,m,h[m]);if(l)for(var m of l(h))p.call(h,m)&&d(c,m,h[m]);return c},v=(c,h)=>i(c,a(h)),b=(c,h)=>function(){return h||(0,c[o(c)[0]])((h={exports:{}}).exports,h),h.exports},y=(c,h)=>{for(var m in h)n(c,m,{get:h[m],enumerable:!0})},_=(c,h,m,x)=>{if(h&&typeof h=="object"||typeof h=="function")for(let E of o(h))!f.call(c,E)&&E!==m&&n(c,E,{get:()=>h[E],enumerable:!(x=s(h,E))||x.enumerable});return c},T=(c,h,m)=>(m=c!=null?t(u(c)):{},_(h||!c||!c.__esModule?n(m,"default",{value:c,enumerable:!0}):m,c)),S=c=>_(n({},"__esModule",{value:!0}),c),M=(c,h,m)=>(d(c,typeof h!="symbol"?h+"":h,m),m),R=b({"../node_modules/timing-function/lib/UnitBezier.js"(c,h){h.exports=function(){function m(x,E,C,z){this.set(x,E,C,z)}return m.prototype.set=function(x,E,C,z){this._cx=3*x,this._bx=3*(C-x)-this._cx,this._ax=1-this._cx-this._bx,this._cy=3*E,this._by=3*(z-E)-this._cy,this._ay=1-this._cy-this._by},m.epsilon=1e-6,m.prototype._sampleCurveX=function(x){return((this._ax*x+this._bx)*x+this._cx)*x},m.prototype._sampleCurveY=function(x){return((this._ay*x+this._by)*x+this._cy)*x},m.prototype._sampleCurveDerivativeX=function(x){return(3*this._ax*x+2*this._bx)*x+this._cx},m.prototype._solveCurveX=function(x,E){var C,z,G,X,ne,ge;for(G=void 0,X=void 0,ne=void 0,ge=void 0,C=void 0,z=void 0,ne=x,z=0;z<8;){if(ge=this._sampleCurveX(ne)-x,Math.abs(ge)<E)return ne;if(C=this._sampleCurveDerivativeX(ne),Math.abs(C)<E)break;ne=ne-ge/C,z++}if(G=0,X=1,ne=x,ne<G)return G;if(ne>X)return X;for(;G<X;){if(ge=this._sampleCurveX(ne),Math.abs(ge-x)<E)return ne;x>ge?G=ne:X=ne,ne=(X-G)*.5+G}return ne},m.prototype.solve=function(x,E){return this._sampleCurveY(this._solveCurveX(x,E))},m.prototype.solveSimple=function(x){return this._sampleCurveY(this._solveCurveX(x,1e-6))},m}()}}),O=b({"../node_modules/levenshtein-edit-distance/index.js"(c,h){var m,x;m=[],x=[];function E(C,z,G){var X,ne,ge,_e,Pe,We,ze,ot;if(C===z)return 0;if(X=C.length,ne=z.length,X===0)return ne;if(ne===0)return X;for(G&&(C=C.toLowerCase(),z=z.toLowerCase()),ze=0;ze<X;)x[ze]=C.charCodeAt(ze),m[ze]=++ze;for(ot=0;ot<ne;)for(ge=z.charCodeAt(ot),_e=Pe=ot++,ze=-1;++ze<X;)We=ge===x[ze]?Pe:Pe+1,Pe=m[ze],m[ze]=_e=Pe>_e?We>_e?_e+1:We:We>Pe?Pe+1:We;return _e}h.exports=E}}),U=b({"../node_modules/propose/propose.js"(c,h){var m=O();function x(){var E,C,z,G,X,ne=0,ge=arguments[0],_e=arguments[1],Pe=_e.length,We=arguments[2];We&&(G=We.threshold,X=We.ignoreCase),G===void 0&&(G=0);for(var ze=0;ze<Pe;++ze)X?C=m(ge,_e[ze],!0):C=m(ge,_e[ze]),C>ge.length?E=1-C/_e[ze].length:E=1-C/ge.length,E>ne&&(ne=E,z=_e[ze]);return ne>=G?z:null}h.exports=x}}),B=b({"../node_modules/fast-deep-equal/index.js"(c,h){h.exports=function m(x,E){if(x===E)return!0;if(x&&E&&typeof x=="object"&&typeof E=="object"){if(x.constructor!==E.constructor)return!1;var C,z,G;if(Array.isArray(x)){if(C=x.length,C!=E.length)return!1;for(z=C;z--!==0;)if(!m(x[z],E[z]))return!1;return!0}if(x.constructor===RegExp)return x.source===E.source&&x.flags===E.flags;if(x.valueOf!==Object.prototype.valueOf)return x.valueOf()===E.valueOf();if(x.toString!==Object.prototype.toString)return x.toString()===E.toString();if(G=Object.keys(x),C=G.length,C!==Object.keys(E).length)return!1;for(z=C;z--!==0;)if(!Object.prototype.hasOwnProperty.call(E,G[z]))return!1;for(z=C;z--!==0;){var X=G[z];if(!m(x[X],E[X]))return!1}return!0}return x!==x&&E!==E}}}),A={};y(A,{createRafDriver:()=>zh,getProject:()=>gg,notify:()=>$s,onChange:()=>lf,types:()=>kh,val:()=>_g}),r.exports=S(A);var L={};y(L,{createRafDriver:()=>zh,getProject:()=>gg,notify:()=>$s,onChange:()=>lf,types:()=>kh,val:()=>_g});var Q=rn,he=class{constructor(){M(this,"atom",new Q.Atom({projects:{}}))}add(c,h){this.atom.setByPointer(m=>m.projects[c],h)}get(c){return this.atom.get().projects[c]}has(c){return!!this.get(c)}},$=new he,Z=$,W=new WeakMap;function ie(c){return W.get(c)}function ae(c,h){W.set(c,h)}var ce=[],de=Array.isArray,ue=de,q=typeof Di=="object"&&Di&&Di.Object===Object&&Di,oe=q,Ae=typeof self=="object"&&self&&self.Object===Object&&self,Ce=oe||Ae||Function("return this")(),we=Ce,Ye=we.Symbol,Ne=Ye,Ge=Object.prototype,gt=Ge.hasOwnProperty,Et=Ge.toString,Xe=Ne?Ne.toStringTag:void 0;function k(c){var h=gt.call(c,Xe),m=c[Xe];try{c[Xe]=void 0;var x=!0}catch{}var E=Et.call(c);return x&&(h?c[Xe]=m:delete c[Xe]),E}var Me=k,le=Object.prototype,xe=le.toString;function pe(c){return xe.call(c)}var Ve=pe,Ie="[object Null]",Ue="[object Undefined]",et=Ne?Ne.toStringTag:void 0;function dt(c){return c==null?c===void 0?Ue:Ie:et&&et in Object(c)?Me(c):Ve(c)}var xt=dt;function F(c){return c!=null&&typeof c=="object"}var P=F,J="[object Symbol]";function ve(c){return typeof c=="symbol"||P(c)&&xt(c)==J}var me=ve,ye=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,He=/^\w*$/;function be(c,h){if(ue(c))return!1;var m=typeof c;return m=="number"||m=="symbol"||m=="boolean"||c==null||me(c)?!0:He.test(c)||!ye.test(c)||h!=null&&c in Object(h)}var K=be;function qe(c){var h=typeof c;return c!=null&&(h=="object"||h=="function")}var De=qe,je="[object AsyncFunction]",Fe="[object Function]",Be="[object GeneratorFunction]",ct="[object Proxy]";function Mt(c){if(!De(c))return!1;var h=xt(c);return h==Fe||h==Be||h==je||h==ct}var V=Mt,Te=we["__core-js_shared__"],ee=Te,Se=function(){var c=/[^.]+$/.exec(ee&&ee.keys&&ee.keys.IE_PROTO||"");return c?"Symbol(src)_1."+c:""}();function Re(c){return!!Se&&Se in c}var _t=Re,Rt=Function.prototype,Ht=Rt.toString;function ri(c){if(c!=null){try{return Ht.call(c)}catch{}try{return c+""}catch{}}return""}var vt=ri,On=/[\\^$.*+?()[\]{}|]/g,an=/^\[object .+?Constructor\]$/,Os=Function.prototype,Us=Object.prototype,ka=Os.toString,pr=Us.hasOwnProperty,Ns=RegExp("^"+ka.call(pr).replace(On,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function mr(c){if(!De(c)||_t(c))return!1;var h=V(c)?Ns:an;return h.test(vt(c))}var ui=mr;function Fs(c,h){return c==null?void 0:c[h]}var Ha=Fs;function Va(c,h){var m=Ha(c,h);return ui(m)?m:void 0}var D=Va,j=D(Object,"create"),re=j;function Y(){this.__data__=re?re(null):{},this.size=0}var se=Y;function Oe(c){var h=this.has(c)&&delete this.__data__[c];return this.size-=h?1:0,h}var $e=Oe,Ke="__lodash_hash_undefined__",Qe=Object.prototype,lt=Qe.hasOwnProperty;function Ze(c){var h=this.__data__;if(re){var m=h[c];return m===Ke?void 0:m}return lt.call(h,c)?h[c]:void 0}var rt=Ze,Dt=Object.prototype,zt=Dt.hasOwnProperty;function jt(c){var h=this.__data__;return re?h[c]!==void 0:zt.call(h,c)}var Xn=jt,Vt="__lodash_hash_undefined__";function ht(c,h){var m=this.__data__;return this.size+=this.has(c)?0:1,m[c]=re&&h===void 0?Vt:h,this}var Br=ht;function At(c){var h=-1,m=c==null?0:c.length;for(this.clear();++h<m;){var x=c[h];this.set(x[0],x[1])}}At.prototype.clear=se,At.prototype.delete=$e,At.prototype.get=rt,At.prototype.has=Xn,At.prototype.set=Br;var si=At;function Bs(){this.__data__=[],this.size=0}var Vi=Bs;function Ci(c,h){return c===h||c!==c&&h!==h}var qt=Ci;function hi(c,h){for(var m=c.length;m--;)if(qt(c[m][0],h))return m;return-1}var Ri=hi,gn=Array.prototype,zr=gn.splice;function Ga(c){var h=this.__data__,m=Ri(h,c);if(m<0)return!1;var x=h.length-1;return m==x?h.pop():zr.call(h,m,1),--this.size,!0}var zs=Ga;function Pu(c){var h=this.__data__,m=Ri(h,c);return m<0?void 0:h[m][1]}var gr=Pu;function sc(c){return Ri(this.__data__,c)>-1}var Cu=sc;function Wa(c,h){var m=this.__data__,x=Ri(m,c);return x<0?(++this.size,m.push([c,h])):m[x][1]=h,this}var Ru=Wa;function _r(c){var h=-1,m=c==null?0:c.length;for(this.clear();++h<m;){var x=c[h];this.set(x[0],x[1])}}_r.prototype.clear=Vi,_r.prototype.delete=zs,_r.prototype.get=gr,_r.prototype.has=Cu,_r.prototype.set=Ru;var ks=_r,Iu=D(we,"Map"),kr=Iu;function Lu(){this.size=0,this.__data__={hash:new si,map:new(kr||ks),string:new si}}var Du=Lu;function Ou(c){var h=typeof c;return h=="string"||h=="number"||h=="symbol"||h=="boolean"?c!=="__proto__":c===null}var Uu=Ou;function Nu(c,h){var m=c.__data__;return Uu(h)?m[typeof h=="string"?"string":"hash"]:m.map}var Hs=Nu;function ac(c){var h=Hs(this,c).delete(c);return this.size-=h?1:0,h}var oc=ac;function cc(c){return Hs(this,c).get(c)}var Fu=cc;function Bu(c){return Hs(this,c).has(c)}var zu=Bu;function ku(c,h){var m=Hs(this,c),x=m.size;return m.set(c,h),this.size+=m.size==x?0:1,this}var Hu=ku;function vr(c){var h=-1,m=c==null?0:c.length;for(this.clear();++h<m;){var x=c[h];this.set(x[0],x[1])}}vr.prototype.clear=Du,vr.prototype.delete=oc,vr.prototype.get=Fu,vr.prototype.has=zu,vr.prototype.set=Hu;var Vs=vr,Vu="Expected a function";function Xa(c,h){if(typeof c!="function"||h!=null&&typeof h!="function")throw new TypeError(Vu);var m=function(){var x=arguments,E=h?h.apply(this,x):x[0],C=m.cache;if(C.has(E))return C.get(E);var z=c.apply(this,x);return m.cache=C.set(E,z)||C,z};return m.cache=new(Xa.Cache||Vs),m}Xa.Cache=Vs;var Gu=Xa,Wu=500;function Xu(c){var h=Gu(c,function(x){return m.size===Wu&&m.clear(),x}),m=h.cache;return h}var ju=Xu,qu=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Yu=/\\(\\)?/g,$u=ju(function(c){var h=[];return c.charCodeAt(0)===46&&h.push(""),c.replace(qu,function(m,x,E,C){h.push(E?C.replace(Yu,"$1"):x||m)}),h}),Zu=$u;function Ju(c,h){for(var m=-1,x=c==null?0:c.length,E=Array(x);++m<x;)E[m]=h(c[m],m,c);return E}var Ku=Ju,lc=1/0,uc=Ne?Ne.prototype:void 0,hc=uc?uc.toString:void 0;function fc(c){if(typeof c=="string")return c;if(ue(c))return Ku(c,fc)+"";if(me(c))return hc?hc.call(c):"";var h=c+"";return h=="0"&&1/c==-lc?"-0":h}var dc=fc;function Qu(c){return c==null?"":dc(c)}var pc=Qu;function ja(c,h){return ue(c)?c:K(c,h)?[c]:Zu(pc(c))}var Hr=ja,mc=1/0;function eh(c){if(typeof c=="string"||me(c))return c;var h=c+"";return h=="0"&&1/c==-mc?"-0":h}var fi=eh;function Vr(c,h){h=Hr(h,c);for(var m=0,x=h.length;c!=null&&m<x;)c=c[fi(h[m++])];return m&&m==x?c:void 0}var Gs=Vr;function qa(c,h,m){var x=c==null?void 0:Gs(c,h);return x===void 0?m:x}var Gi=qa;function gc(c,h){return h.length===0?c:Gi(c,h)}var yr=class{constructor(){M(this,"_values",{})}get(c,h){if(this.has(c))return this._values[c];{const m=h();return this._values[c]=m,m}}has(c){return this._values.hasOwnProperty(c)}},on=rn,Ws=function(){try{var c=D(Object,"defineProperty");return c({},"",{}),c}catch{}}(),Ya=Ws;function th(c,h,m){h=="__proto__"&&Ya?Ya(c,h,{configurable:!0,enumerable:!0,value:m,writable:!0}):c[h]=m}var Wi=th,Gr=Object.prototype,nh=Gr.hasOwnProperty;function ih(c,h,m){var x=c[h];(!(nh.call(c,h)&&qt(x,m))||m===void 0&&!(h in c))&&Wi(c,h,m)}var $a=ih,rh=9007199254740991,_c=/^(?:0|[1-9]\d*)$/;function sh(c,h){var m=typeof c;return h=h??rh,!!h&&(m=="number"||m!="symbol"&&_c.test(c))&&c>-1&&c%1==0&&c<h}var Za=sh;function ah(c,h,m,x){if(!De(c))return c;h=Hr(h,c);for(var E=-1,C=h.length,z=C-1,G=c;G!=null&&++E<C;){var X=fi(h[E]),ne=m;if(X==="__proto__"||X==="constructor"||X==="prototype")return c;if(E!=z){var ge=G[X];ne=x?x(ge,X,G):void 0,ne===void 0&&(ne=De(ge)?ge:Za(h[E+1])?[]:{})}$a(G,X,ne),G=G[X]}return c}var vc=ah;function yc(c,h,m){return c==null?c:vc(c,h,m)}var Xs=yc,fn=new WeakMap;function oh(c){return Ja(c)}function Ja(c){if(fn.has(c))return fn.get(c);const h=c.type==="compound"?bc(c):c.type==="enum"?xc(c):c.default;return fn.set(c,h),h}function xc(c){const h={$case:c.defaultCase};for(const[m,x]of Object.entries(c.cases))h[m]=Ja(x);return h}function bc(c){const h={};for(const[m,x]of Object.entries(c.props))h[m]=Ja(x);return h}var Pn=rn,ch=T(R());function lh(c,h,m){return(0,Pn.prism)(()=>{const x=(0,Pn.val)(h);return Pn.prism.memo("driver",()=>x?x.type==="BasicKeyframedTrack"?uh(c,x,m):(c.logger.error("Track type not yet supported."),(0,Pn.prism)(()=>{})):(0,Pn.prism)(()=>{}),[x]).getValue()})}function uh(c,h,m){return(0,Pn.prism)(()=>{let x=Pn.prism.ref("state",{started:!1}),E=x.current;const C=m.getValue();return(!E.started||C<E.validFrom||E.validTo<=C)&&(x.current=E=hh(c,m,h)),E.der.getValue()})}var Sc=(0,Pn.prism)(()=>{});function hh(c,h,m){const x=h.getValue();if(m.keyframes.length===0)return{started:!0,validFrom:-1/0,validTo:1/0,der:Sc};let E=0;for(;;){const C=m.keyframes[E];if(!C)return cn.error;const z=E===m.keyframes.length-1;if(x<C.position)return E===0?cn.beforeFirstKeyframe(C):cn.error;if(C.position===x)return z?cn.lastKeyframe(C):cn.between(C,m.keyframes[E+1],h);if(E===m.keyframes.length-1)return cn.lastKeyframe(C);{const G=E+1;if(m.keyframes[G].position<=x){E=G;continue}else return cn.between(C,m.keyframes[E+1],h)}}}var cn={beforeFirstKeyframe(c){return{started:!0,validFrom:-1/0,validTo:c.position,der:(0,Pn.prism)(()=>({left:c.value,progression:0}))}},lastKeyframe(c){return{started:!0,validFrom:c.position,validTo:1/0,der:(0,Pn.prism)(()=>({left:c.value,progression:0}))}},between(c,h,m){if(!c.connectedRight)return{started:!0,validFrom:c.position,validTo:h.position,der:(0,Pn.prism)(()=>({left:c.value,progression:0}))};const x=C=>(C-c.position)/(h.position-c.position);if(!c.type||c.type==="bezier"){const C=new ch.default(c.handles[2],c.handles[3],h.handles[0],h.handles[1]),z=(0,Pn.prism)(()=>{const G=x(m.getValue()),X=C.solveSimple(G);return{left:c.value,right:h.value,progression:X}});return{started:!0,validFrom:c.position,validTo:h.position,der:z}}const E=(0,Pn.prism)(()=>{const C=x(m.getValue()),z=Math.floor(C);return{left:c.value,right:h.value,progression:z}});return{started:!0,validFrom:c.position,validTo:h.position,der:E}},error:{started:!0,validFrom:-1/0,validTo:1/0,der:Sc}};function Wr(c,h,m){const E=m.get(c);if(E&&E.override===h)return E.merged;const C=g({},c);for(const z of Object.keys(h)){const G=h[z],X=c[z];C[z]=typeof G=="object"&&typeof X=="object"?Wr(X,G,m):G===void 0?X:G}return m.set(c,{override:h,merged:C}),C}function Xr(c,h){let m=c;for(const x of h)m=m[x];return m}var jr=rn,Mc=(c,h)=>{const m=jr.prism.memo(c,()=>new jr.Atom(h),[]);return m.set(h),m},Pt=rn,Ka=rn,fh=/\s/;function Tc(c){for(var h=c.length;h--&&fh.test(c.charAt(h)););return h}var wc=Tc,Ec=/^\s+/;function dh(c){return c&&c.slice(0,wc(c)+1).replace(Ec,"")}var js=dh,Qa=0/0,ph=/^[-+]0x[0-9a-f]+$/i,mh=/^0b[01]+$/i,Ac=/^0o[0-7]+$/i,gh=parseInt;function _h(c){if(typeof c=="number")return c;if(me(c))return Qa;if(De(c)){var h=typeof c.valueOf=="function"?c.valueOf():c;c=De(h)?h+"":h}if(typeof c!="string")return c===0?c:+c;c=js(c);var m=mh.test(c);return m||Ac.test(c)?gh(c.slice(2),m?2:8):ph.test(c)?Qa:+c}var w=_h,I=1/0,H=17976931348623157e292;function te(c){if(!c)return c===0?c:0;if(c=w(c),c===I||c===-I){var h=c<0?-1:1;return h*H}return c===c?c:0}var Je=te;function bt(c){var h=Je(c),m=h%1;return h===h?m?h-m:h:0}var _n=bt;function ai(c){return c}var Pc=ai,xr=D(we,"WeakMap"),qr=xr,Ap=Object.create,Py=function(){function c(){}return function(h){if(!De(h))return{};if(Ap)return Ap(h);c.prototype=h;var m=new c;return c.prototype=void 0,m}}(),Cy=Py;function Ry(c,h){var m=-1,x=c.length;for(h||(h=Array(x));++m<x;)h[m]=c[m];return h}var Iy=Ry;function Ly(c,h){for(var m=-1,x=c==null?0:c.length;++m<x&&h(c[m],m,c)!==!1;);return c}var Dy=Ly;function Oy(c,h,m,x){var E=!m;m||(m={});for(var C=-1,z=h.length;++C<z;){var G=h[C],X=x?x(m[G],c[G],G,m,c):void 0;X===void 0&&(X=c[G]),E?Wi(m,G,X):$a(m,G,X)}return m}var Cc=Oy,Uy=9007199254740991;function Ny(c){return typeof c=="number"&&c>-1&&c%1==0&&c<=Uy}var vh=Ny;function Fy(c){return c!=null&&vh(c.length)&&!V(c)}var Pp=Fy,By=Object.prototype;function zy(c){var h=c&&c.constructor,m=typeof h=="function"&&h.prototype||By;return c===m}var yh=zy;function ky(c,h){for(var m=-1,x=Array(c);++m<c;)x[m]=h(m);return x}var Hy=ky,Vy="[object Arguments]";function Gy(c){return P(c)&&xt(c)==Vy}var Cp=Gy,Rp=Object.prototype,Wy=Rp.hasOwnProperty,Xy=Rp.propertyIsEnumerable,jy=Cp(function(){return arguments}())?Cp:function(c){return P(c)&&Wy.call(c,"callee")&&!Xy.call(c,"callee")},Ip=jy;function qy(){return!1}var Yy=qy,Lp=e&&!e.nodeType&&e,Dp=Lp&&!0&&r&&!r.nodeType&&r,$y=Dp&&Dp.exports===Lp,Op=$y?we.Buffer:void 0,Zy=Op?Op.isBuffer:void 0,Jy=Zy||Yy,Rc=Jy,Ky="[object Arguments]",Qy="[object Array]",ex="[object Boolean]",tx="[object Date]",nx="[object Error]",ix="[object Function]",rx="[object Map]",sx="[object Number]",ax="[object Object]",ox="[object RegExp]",cx="[object Set]",lx="[object String]",ux="[object WeakMap]",hx="[object ArrayBuffer]",fx="[object DataView]",dx="[object Float32Array]",px="[object Float64Array]",mx="[object Int8Array]",gx="[object Int16Array]",_x="[object Int32Array]",vx="[object Uint8Array]",yx="[object Uint8ClampedArray]",xx="[object Uint16Array]",bx="[object Uint32Array]",kt={};kt[dx]=kt[px]=kt[mx]=kt[gx]=kt[_x]=kt[vx]=kt[yx]=kt[xx]=kt[bx]=!0,kt[Ky]=kt[Qy]=kt[hx]=kt[ex]=kt[fx]=kt[tx]=kt[nx]=kt[ix]=kt[rx]=kt[sx]=kt[ax]=kt[ox]=kt[cx]=kt[lx]=kt[ux]=!1;function Sx(c){return P(c)&&vh(c.length)&&!!kt[xt(c)]}var Mx=Sx;function Tx(c){return function(h){return c(h)}}var xh=Tx,Up=e&&!e.nodeType&&e,eo=Up&&!0&&r&&!r.nodeType&&r,wx=eo&&eo.exports===Up,bh=wx&&oe.process,Ex=function(){try{var c=eo&&eo.require&&eo.require("util").types;return c||bh&&bh.binding&&bh.binding("util")}catch{}}(),qs=Ex,Np=qs&&qs.isTypedArray,Ax=Np?xh(Np):Mx,Fp=Ax,Px=Object.prototype,Cx=Px.hasOwnProperty;function Rx(c,h){var m=ue(c),x=!m&&Ip(c),E=!m&&!x&&Rc(c),C=!m&&!x&&!E&&Fp(c),z=m||x||E||C,G=z?Hy(c.length,String):[],X=G.length;for(var ne in c)(h||Cx.call(c,ne))&&!(z&&(ne=="length"||E&&(ne=="offset"||ne=="parent")||C&&(ne=="buffer"||ne=="byteLength"||ne=="byteOffset")||Za(ne,X)))&&G.push(ne);return G}var Bp=Rx;function Ix(c,h){return function(m){return c(h(m))}}var zp=Ix,Lx=zp(Object.keys,Object),Dx=Lx,Ox=Object.prototype,Ux=Ox.hasOwnProperty;function Nx(c){if(!yh(c))return Dx(c);var h=[];for(var m in Object(c))Ux.call(c,m)&&m!="constructor"&&h.push(m);return h}var Fx=Nx;function Bx(c){return Pp(c)?Bp(c):Fx(c)}var to=Bx;function zx(c){var h=[];if(c!=null)for(var m in Object(c))h.push(m);return h}var kx=zx,Hx=Object.prototype,Vx=Hx.hasOwnProperty;function Gx(c){if(!De(c))return kx(c);var h=yh(c),m=[];for(var x in c)x=="constructor"&&(h||!Vx.call(c,x))||m.push(x);return m}var Wx=Gx;function Xx(c){return Pp(c)?Bp(c,!0):Wx(c)}var Sh=Xx;function jx(c,h){for(var m=-1,x=h.length,E=c.length;++m<x;)c[E+m]=h[m];return c}var kp=jx,qx=zp(Object.getPrototypeOf,Object),Mh=qx,Yx="[object Object]",$x=Function.prototype,Zx=Object.prototype,Hp=$x.toString,Jx=Zx.hasOwnProperty,Kx=Hp.call(Object);function Qx(c){if(!P(c)||xt(c)!=Yx)return!1;var h=Mh(c);if(h===null)return!0;var m=Jx.call(h,"constructor")&&h.constructor;return typeof m=="function"&&m instanceof m&&Hp.call(m)==Kx}var eb=Qx;function tb(c,h,m){var x=-1,E=c.length;h<0&&(h=-h>E?0:E+h),m=m>E?E:m,m<0&&(m+=E),E=h>m?0:m-h>>>0,h>>>=0;for(var C=Array(E);++x<E;)C[x]=c[x+h];return C}var Vp=tb;function nb(c,h,m){var x=c.length;return m=m===void 0?x:m,!h&&m>=x?c:Vp(c,h,m)}var ib=nb,rb="\\ud800-\\udfff",sb="\\u0300-\\u036f",ab="\\ufe20-\\ufe2f",ob="\\u20d0-\\u20ff",cb=sb+ab+ob,lb="\\ufe0e\\ufe0f",ub="\\u200d",hb=RegExp("["+ub+rb+cb+lb+"]");function fb(c){return hb.test(c)}var Th=fb;function db(c){return c.split("")}var pb=db,Gp="\\ud800-\\udfff",mb="\\u0300-\\u036f",gb="\\ufe20-\\ufe2f",_b="\\u20d0-\\u20ff",vb=mb+gb+_b,yb="\\ufe0e\\ufe0f",xb="["+Gp+"]",wh="["+vb+"]",Eh="\\ud83c[\\udffb-\\udfff]",bb="(?:"+wh+"|"+Eh+")",Wp="[^"+Gp+"]",Xp="(?:\\ud83c[\\udde6-\\uddff]){2}",jp="[\\ud800-\\udbff][\\udc00-\\udfff]",Sb="\\u200d",qp=bb+"?",Yp="["+yb+"]?",Mb="(?:"+Sb+"(?:"+[Wp,Xp,jp].join("|")+")"+Yp+qp+")*",Tb=Yp+qp+Mb,wb="(?:"+[Wp+wh+"?",wh,Xp,jp,xb].join("|")+")",Eb=RegExp(Eh+"(?="+Eh+")|"+wb+Tb,"g");function Ab(c){return c.match(Eb)||[]}var Pb=Ab;function Cb(c){return Th(c)?Pb(c):pb(c)}var Rb=Cb;function Ib(c,h,m){return c===c&&(m!==void 0&&(c=c<=m?c:m),h!==void 0&&(c=c>=h?c:h)),c}var Lb=Ib;function Db(c,h,m){return m===void 0&&(m=h,h=void 0),m!==void 0&&(m=w(m),m=m===m?m:0),h!==void 0&&(h=w(h),h=h===h?h:0),Lb(w(c),h,m)}var $p=Db;function Ob(){this.__data__=new ks,this.size=0}var Ub=Ob;function Nb(c){var h=this.__data__,m=h.delete(c);return this.size=h.size,m}var Fb=Nb;function Bb(c){return this.__data__.get(c)}var zb=Bb;function kb(c){return this.__data__.has(c)}var Hb=kb,Vb=200;function Gb(c,h){var m=this.__data__;if(m instanceof ks){var x=m.__data__;if(!kr||x.length<Vb-1)return x.push([c,h]),this.size=++m.size,this;m=this.__data__=new Vs(x)}return m.set(c,h),this.size=m.size,this}var Wb=Gb;function Ys(c){var h=this.__data__=new ks(c);this.size=h.size}Ys.prototype.clear=Ub,Ys.prototype.delete=Fb,Ys.prototype.get=zb,Ys.prototype.has=Hb,Ys.prototype.set=Wb;var no=Ys;function Xb(c,h){return c&&Cc(h,to(h),c)}var jb=Xb;function qb(c,h){return c&&Cc(h,Sh(h),c)}var Yb=qb,Zp=e&&!e.nodeType&&e,Jp=Zp&&!0&&r&&!r.nodeType&&r,$b=Jp&&Jp.exports===Zp,Kp=$b?we.Buffer:void 0,Qp=Kp?Kp.allocUnsafe:void 0;function Zb(c,h){if(h)return c.slice();var m=c.length,x=Qp?Qp(m):new c.constructor(m);return c.copy(x),x}var Jb=Zb;function Kb(c,h){for(var m=-1,x=c==null?0:c.length,E=0,C=[];++m<x;){var z=c[m];h(z,m,c)&&(C[E++]=z)}return C}var Qb=Kb;function eS(){return[]}var em=eS,tS=Object.prototype,nS=tS.propertyIsEnumerable,tm=Object.getOwnPropertySymbols,iS=tm?function(c){return c==null?[]:(c=Object(c),Qb(tm(c),function(h){return nS.call(c,h)}))}:em,Ah=iS;function rS(c,h){return Cc(c,Ah(c),h)}var sS=rS,aS=Object.getOwnPropertySymbols,oS=aS?function(c){for(var h=[];c;)kp(h,Ah(c)),c=Mh(c);return h}:em,nm=oS;function cS(c,h){return Cc(c,nm(c),h)}var lS=cS;function uS(c,h,m){var x=h(c);return ue(c)?x:kp(x,m(c))}var im=uS;function hS(c){return im(c,to,Ah)}var Ph=hS;function fS(c){return im(c,Sh,nm)}var dS=fS,pS=D(we,"DataView"),Ch=pS,mS=D(we,"Promise"),Rh=mS,gS=D(we,"Set"),Ih=gS,rm="[object Map]",_S="[object Object]",sm="[object Promise]",am="[object Set]",om="[object WeakMap]",cm="[object DataView]",vS=vt(Ch),yS=vt(kr),xS=vt(Rh),bS=vt(Ih),SS=vt(qr),Yr=xt;(Ch&&Yr(new Ch(new ArrayBuffer(1)))!=cm||kr&&Yr(new kr)!=rm||Rh&&Yr(Rh.resolve())!=sm||Ih&&Yr(new Ih)!=am||qr&&Yr(new qr)!=om)&&(Yr=function(c){var h=xt(c),m=h==_S?c.constructor:void 0,x=m?vt(m):"";if(x)switch(x){case vS:return cm;case yS:return rm;case xS:return sm;case bS:return am;case SS:return om}return h});var io=Yr,MS=Object.prototype,TS=MS.hasOwnProperty;function wS(c){var h=c.length,m=new c.constructor(h);return h&&typeof c[0]=="string"&&TS.call(c,"index")&&(m.index=c.index,m.input=c.input),m}var ES=wS,AS=we.Uint8Array,Ic=AS;function PS(c){var h=new c.constructor(c.byteLength);return new Ic(h).set(new Ic(c)),h}var Lh=PS;function CS(c,h){var m=h?Lh(c.buffer):c.buffer;return new c.constructor(m,c.byteOffset,c.byteLength)}var RS=CS,IS=/\w*$/;function LS(c){var h=new c.constructor(c.source,IS.exec(c));return h.lastIndex=c.lastIndex,h}var DS=LS,lm=Ne?Ne.prototype:void 0,um=lm?lm.valueOf:void 0;function OS(c){return um?Object(um.call(c)):{}}var US=OS;function NS(c,h){var m=h?Lh(c.buffer):c.buffer;return new c.constructor(m,c.byteOffset,c.length)}var FS=NS,BS="[object Boolean]",zS="[object Date]",kS="[object Map]",HS="[object Number]",VS="[object RegExp]",GS="[object Set]",WS="[object String]",XS="[object Symbol]",jS="[object ArrayBuffer]",qS="[object DataView]",YS="[object Float32Array]",$S="[object Float64Array]",ZS="[object Int8Array]",JS="[object Int16Array]",KS="[object Int32Array]",QS="[object Uint8Array]",eM="[object Uint8ClampedArray]",tM="[object Uint16Array]",nM="[object Uint32Array]";function iM(c,h,m){var x=c.constructor;switch(h){case jS:return Lh(c);case BS:case zS:return new x(+c);case qS:return RS(c,m);case YS:case $S:case ZS:case JS:case KS:case QS:case eM:case tM:case nM:return FS(c,m);case kS:return new x;case HS:case WS:return new x(c);case VS:return DS(c);case GS:return new x;case XS:return US(c)}}var rM=iM;function sM(c){return typeof c.constructor=="function"&&!yh(c)?Cy(Mh(c)):{}}var aM=sM,oM="[object Map]";function cM(c){return P(c)&&io(c)==oM}var lM=cM,hm=qs&&qs.isMap,uM=hm?xh(hm):lM,hM=uM,fM="[object Set]";function dM(c){return P(c)&&io(c)==fM}var pM=dM,fm=qs&&qs.isSet,mM=fm?xh(fm):pM,gM=mM,_M=1,vM=2,yM=4,dm="[object Arguments]",xM="[object Array]",bM="[object Boolean]",SM="[object Date]",MM="[object Error]",pm="[object Function]",TM="[object GeneratorFunction]",wM="[object Map]",EM="[object Number]",mm="[object Object]",AM="[object RegExp]",PM="[object Set]",CM="[object String]",RM="[object Symbol]",IM="[object WeakMap]",LM="[object ArrayBuffer]",DM="[object DataView]",OM="[object Float32Array]",UM="[object Float64Array]",NM="[object Int8Array]",FM="[object Int16Array]",BM="[object Int32Array]",zM="[object Uint8Array]",kM="[object Uint8ClampedArray]",HM="[object Uint16Array]",VM="[object Uint32Array]",Ot={};Ot[dm]=Ot[xM]=Ot[LM]=Ot[DM]=Ot[bM]=Ot[SM]=Ot[OM]=Ot[UM]=Ot[NM]=Ot[FM]=Ot[BM]=Ot[wM]=Ot[EM]=Ot[mm]=Ot[AM]=Ot[PM]=Ot[CM]=Ot[RM]=Ot[zM]=Ot[kM]=Ot[HM]=Ot[VM]=!0,Ot[MM]=Ot[pm]=Ot[IM]=!1;function Lc(c,h,m,x,E,C){var z,G=h&_M,X=h&vM,ne=h&yM;if(m&&(z=E?m(c,x,E,C):m(c)),z!==void 0)return z;if(!De(c))return c;var ge=ue(c);if(ge){if(z=ES(c),!G)return Iy(c,z)}else{var _e=io(c),Pe=_e==pm||_e==TM;if(Rc(c))return Jb(c,G);if(_e==mm||_e==dm||Pe&&!E){if(z=X||Pe?{}:aM(c),!G)return X?lS(c,Yb(z,c)):sS(c,jb(z,c))}else{if(!Ot[_e])return E?c:{};z=rM(c,_e,G)}}C||(C=new no);var We=C.get(c);if(We)return We;C.set(c,z),gM(c)?c.forEach(function(mt){z.add(Lc(mt,h,m,mt,c,C))}):hM(c)&&c.forEach(function(mt,st){z.set(st,Lc(mt,h,m,st,c,C))});var ze=ne?X?dS:Ph:X?Sh:to,ot=ge?void 0:ze(c);return Dy(ot||c,function(mt,st){ot&&(st=mt,mt=c[st]),$a(z,st,Lc(mt,h,m,st,c,C))}),z}var GM=Lc,WM=1,XM=4;function jM(c){return GM(c,WM|XM)}var qM=jM,YM="__lodash_hash_undefined__";function $M(c){return this.__data__.set(c,YM),this}var ZM=$M;function JM(c){return this.__data__.has(c)}var KM=JM;function Dc(c){var h=-1,m=c==null?0:c.length;for(this.__data__=new Vs;++h<m;)this.add(c[h])}Dc.prototype.add=Dc.prototype.push=ZM,Dc.prototype.has=KM;var QM=Dc;function eT(c,h){for(var m=-1,x=c==null?0:c.length;++m<x;)if(h(c[m],m,c))return!0;return!1}var tT=eT;function nT(c,h){return c.has(h)}var iT=nT,rT=1,sT=2;function aT(c,h,m,x,E,C){var z=m&rT,G=c.length,X=h.length;if(G!=X&&!(z&&X>G))return!1;var ne=C.get(c),ge=C.get(h);if(ne&&ge)return ne==h&&ge==c;var _e=-1,Pe=!0,We=m&sT?new QM:void 0;for(C.set(c,h),C.set(h,c);++_e<G;){var ze=c[_e],ot=h[_e];if(x)var mt=z?x(ot,ze,_e,h,c,C):x(ze,ot,_e,c,h,C);if(mt!==void 0){if(mt)continue;Pe=!1;break}if(We){if(!tT(h,function(st,Tt){if(!iT(We,Tt)&&(ze===st||E(ze,st,m,x,C)))return We.push(Tt)})){Pe=!1;break}}else if(!(ze===ot||E(ze,ot,m,x,C))){Pe=!1;break}}return C.delete(c),C.delete(h),Pe}var gm=aT;function oT(c){var h=-1,m=Array(c.size);return c.forEach(function(x,E){m[++h]=[E,x]}),m}var cT=oT;function lT(c){var h=-1,m=Array(c.size);return c.forEach(function(x){m[++h]=x}),m}var uT=lT,hT=1,fT=2,dT="[object Boolean]",pT="[object Date]",mT="[object Error]",gT="[object Map]",_T="[object Number]",vT="[object RegExp]",yT="[object Set]",xT="[object String]",bT="[object Symbol]",ST="[object ArrayBuffer]",MT="[object DataView]",_m=Ne?Ne.prototype:void 0,Dh=_m?_m.valueOf:void 0;function TT(c,h,m,x,E,C,z){switch(m){case MT:if(c.byteLength!=h.byteLength||c.byteOffset!=h.byteOffset)return!1;c=c.buffer,h=h.buffer;case ST:return!(c.byteLength!=h.byteLength||!C(new Ic(c),new Ic(h)));case dT:case pT:case _T:return qt(+c,+h);case mT:return c.name==h.name&&c.message==h.message;case vT:case xT:return c==h+"";case gT:var G=cT;case yT:var X=x&hT;if(G||(G=uT),c.size!=h.size&&!X)return!1;var ne=z.get(c);if(ne)return ne==h;x|=fT,z.set(c,h);var ge=gm(G(c),G(h),x,E,C,z);return z.delete(c),ge;case bT:if(Dh)return Dh.call(c)==Dh.call(h)}return!1}var wT=TT,ET=1,AT=Object.prototype,PT=AT.hasOwnProperty;function CT(c,h,m,x,E,C){var z=m&ET,G=Ph(c),X=G.length,ne=Ph(h),ge=ne.length;if(X!=ge&&!z)return!1;for(var _e=X;_e--;){var Pe=G[_e];if(!(z?Pe in h:PT.call(h,Pe)))return!1}var We=C.get(c),ze=C.get(h);if(We&&ze)return We==h&&ze==c;var ot=!0;C.set(c,h),C.set(h,c);for(var mt=z;++_e<X;){Pe=G[_e];var st=c[Pe],Tt=h[Pe];if(x)var xn=z?x(Tt,st,Pe,h,c,C):x(st,Tt,Pe,c,h,C);if(!(xn===void 0?st===Tt||E(st,Tt,m,x,C):xn)){ot=!1;break}mt||(mt=Pe=="constructor")}if(ot&&!mt){var Nn=c.constructor,bn=h.constructor;Nn!=bn&&"constructor"in c&&"constructor"in h&&!(typeof Nn=="function"&&Nn instanceof Nn&&typeof bn=="function"&&bn instanceof bn)&&(ot=!1)}return C.delete(c),C.delete(h),ot}var RT=CT,IT=1,vm="[object Arguments]",ym="[object Array]",Oc="[object Object]",LT=Object.prototype,xm=LT.hasOwnProperty;function DT(c,h,m,x,E,C){var z=ue(c),G=ue(h),X=z?ym:io(c),ne=G?ym:io(h);X=X==vm?Oc:X,ne=ne==vm?Oc:ne;var ge=X==Oc,_e=ne==Oc,Pe=X==ne;if(Pe&&Rc(c)){if(!Rc(h))return!1;z=!0,ge=!1}if(Pe&&!ge)return C||(C=new no),z||Fp(c)?gm(c,h,m,x,E,C):wT(c,h,X,m,x,E,C);if(!(m&IT)){var We=ge&&xm.call(c,"__wrapped__"),ze=_e&&xm.call(h,"__wrapped__");if(We||ze){var ot=We?c.value():c,mt=ze?h.value():h;return C||(C=new no),E(ot,mt,m,x,C)}}return Pe?(C||(C=new no),RT(c,h,m,x,E,C)):!1}var OT=DT;function bm(c,h,m,x,E){return c===h?!0:c==null||h==null||!P(c)&&!P(h)?c!==c&&h!==h:OT(c,h,m,x,bm,E)}var Sm=bm,UT=1,NT=2;function FT(c,h,m,x){var E=m.length,C=E,z=!x;if(c==null)return!C;for(c=Object(c);E--;){var G=m[E];if(z&&G[2]?G[1]!==c[G[0]]:!(G[0]in c))return!1}for(;++E<C;){G=m[E];var X=G[0],ne=c[X],ge=G[1];if(z&&G[2]){if(ne===void 0&&!(X in c))return!1}else{var _e=new no;if(x)var Pe=x(ne,ge,X,c,h,_e);if(!(Pe===void 0?Sm(ge,ne,UT|NT,x,_e):Pe))return!1}}return!0}var BT=FT;function zT(c){return c===c&&!De(c)}var Mm=zT;function kT(c){for(var h=to(c),m=h.length;m--;){var x=h[m],E=c[x];h[m]=[x,E,Mm(E)]}return h}var HT=kT;function VT(c,h){return function(m){return m==null?!1:m[c]===h&&(h!==void 0||c in Object(m))}}var Tm=VT;function GT(c){var h=HT(c);return h.length==1&&h[0][2]?Tm(h[0][0],h[0][1]):function(m){return m===c||BT(m,c,h)}}var WT=GT;function XT(c,h){return c!=null&&h in Object(c)}var jT=XT;function qT(c,h,m){h=Hr(h,c);for(var x=-1,E=h.length,C=!1;++x<E;){var z=fi(h[x]);if(!(C=c!=null&&m(c,z)))break;c=c[z]}return C||++x!=E?C:(E=c==null?0:c.length,!!E&&vh(E)&&Za(z,E)&&(ue(c)||Ip(c)))}var YT=qT;function $T(c,h){return c!=null&&YT(c,h,jT)}var ZT=$T,JT=1,KT=2;function QT(c,h){return K(c)&&Mm(h)?Tm(fi(c),h):function(m){var x=Gi(m,c);return x===void 0&&x===h?ZT(m,c):Sm(h,x,JT|KT)}}var ew=QT;function tw(c){return function(h){return h==null?void 0:h[c]}}var wm=tw;function nw(c){return function(h){return Gs(h,c)}}var iw=nw;function rw(c){return K(c)?wm(fi(c)):iw(c)}var sw=rw;function aw(c){return typeof c=="function"?c:c==null?Pc:typeof c=="object"?ue(c)?ew(c[0],c[1]):WT(c):sw(c)}var ow=aw;function cw(c){return function(h,m,x){for(var E=-1,C=Object(h),z=x(h),G=z.length;G--;){var X=z[c?G:++E];if(m(C[X],X,C)===!1)break}return h}}var lw=cw,uw=lw(),hw=uw;function fw(c,h){return c&&hw(c,h,to)}var dw=fw,pw=function(){return we.Date.now()},Oh=pw,mw="Expected a function",gw=Math.max,_w=Math.min;function vw(c,h,m){var x,E,C,z,G,X,ne=0,ge=!1,_e=!1,Pe=!0;if(typeof c!="function")throw new TypeError(mw);h=w(h)||0,De(m)&&(ge=!!m.leading,_e="maxWait"in m,C=_e?gw(w(m.maxWait)||0,h):C,Pe="trailing"in m?!!m.trailing:Pe);function We(It){var Sn=x,$n=E;return x=E=void 0,ne=It,z=c.apply($n,Sn),z}function ze(It){return ne=It,G=setTimeout(st,h),ge?We(It):z}function ot(It){var Sn=It-X,$n=It-ne,Ii=h-Sn;return _e?_w(Ii,C-$n):Ii}function mt(It){var Sn=It-X,$n=It-ne;return X===void 0||Sn>=h||Sn<0||_e&&$n>=C}function st(){var It=Oh();if(mt(It))return Tt(It);G=setTimeout(st,ot(It))}function Tt(It){return G=void 0,Pe&&x?We(It):(x=E=void 0,z)}function xn(){G!==void 0&&clearTimeout(G),ne=0,x=X=E=G=void 0}function Nn(){return G===void 0?z:Tt(Oh())}function bn(){var It=Oh(),Sn=mt(It);if(x=arguments,E=this,X=It,Sn){if(G===void 0)return ze(X);if(_e)return clearTimeout(G),G=setTimeout(st,h),We(X)}return G===void 0&&(G=setTimeout(st,h)),z}return bn.cancel=xn,bn.flush=Nn,bn}var yw=vw;function xw(c){var h=c==null?0:c.length;return h?c[h-1]:void 0}var bw=xw;function Sw(c,h){return h.length<2?c:Gs(c,Vp(h,0,-1))}var Mw=Sw;function Tw(c){return typeof c=="number"&&c==_n(c)}var ww=Tw;function Ew(c,h){var m={};return h=ow(h),dw(c,function(x,E,C){Wi(m,E,h(x,E,C))}),m}var Aw=Ew;function Pw(c,h){return h=Hr(h,c),c=Mw(c,h),c==null||delete c[fi(bw(h))]}var Cw=Pw,Rw=9007199254740991,Iw=Math.floor;function Lw(c,h){var m="";if(!c||h<1||h>Rw)return m;do h%2&&(m+=c),h=Iw(h/2),h&&(c+=c);while(h);return m}var Em=Lw,Dw=wm("length"),Ow=Dw,Am="\\ud800-\\udfff",Uw="\\u0300-\\u036f",Nw="\\ufe20-\\ufe2f",Fw="\\u20d0-\\u20ff",Bw=Uw+Nw+Fw,zw="\\ufe0e\\ufe0f",kw="["+Am+"]",Uh="["+Bw+"]",Nh="\\ud83c[\\udffb-\\udfff]",Hw="(?:"+Uh+"|"+Nh+")",Pm="[^"+Am+"]",Cm="(?:\\ud83c[\\udde6-\\uddff]){2}",Rm="[\\ud800-\\udbff][\\udc00-\\udfff]",Vw="\\u200d",Im=Hw+"?",Lm="["+zw+"]?",Gw="(?:"+Vw+"(?:"+[Pm,Cm,Rm].join("|")+")"+Lm+Im+")*",Ww=Lm+Im+Gw,Xw="(?:"+[Pm+Uh+"?",Uh,Cm,Rm,kw].join("|")+")",Dm=RegExp(Nh+"(?="+Nh+")|"+Xw+Ww,"g");function jw(c){for(var h=Dm.lastIndex=0;Dm.test(c);)++h;return h}var qw=jw;function Yw(c){return Th(c)?qw(c):Ow(c)}var Om=Yw,$w=Math.ceil;function Zw(c,h){h=h===void 0?" ":dc(h);var m=h.length;if(m<2)return m?Em(h,c):h;var x=Em(h,$w(c/Om(h)));return Th(h)?ib(Rb(x),0,c).join(""):x.slice(0,c)}var Jw=Zw;function Kw(c,h,m){c=pc(c),h=_n(h);var x=h?Om(c):0;return h&&x<h?Jw(h-x,m)+c:c}var ro=Kw;function Qw(c,h){return c==null?!0:Cw(c,h)}var Um=Qw,eE=5*1e3,tE=class{constructor(c){M(this,"_cache",new yr),M(this,"_keepHotUntapDebounce"),ae(this,c)}get type(){return"Theatre_SheetObject_PublicAPI"}get props(){return ie(this).propsP}get sheet(){return ie(this).sheet.publicApi}get project(){return ie(this).sheet.project.publicApi}get address(){return g({},ie(this).address)}_valuesPrism(){return this._cache.get("_valuesPrism",()=>{const c=ie(this);return(0,Ka.prism)(()=>(0,Ka.val)(c.getValues().getValue()))})}onValuesChange(c,h){return lf(this._valuesPrism(),c,h)}get value(){const c=this._valuesPrism();{if(!c.isHot){this._keepHotUntapDebounce!=null&&this._keepHotUntapDebounce.flush();const h=c.keepHot();this._keepHotUntapDebounce=yw(()=>{h(),this._keepHotUntapDebounce=void 0},eE)}this._keepHotUntapDebounce&&this._keepHotUntapDebounce()}return c.getValue()}set initialValue(c){ie(this).setInitialValue(c)}};function nE(c){const h=new WeakMap;return m=>(h.has(m)||h.set(m,c(m)),h.get(m))}function Uc(c){return c.type==="compound"||c.type==="enum"}function Fh(c,h){if(!c)return;const[m,...x]=h;if(m===void 0)return c;if(!Uc(c))return;const E=c.type==="enum"?c.cases[m]:c.props[m];return Fh(E,x)}function iE(c){return!Uc(c)}var rE=class{constructor(c,h,m){this.sheet=c,this.template=h,this.nativeObject=m,M(this,"$$isPointerToPrismProvider",!0),M(this,"address"),M(this,"publicApi"),M(this,"_initialValue",new Pt.Atom({})),M(this,"_cache",new yr),M(this,"_logger"),M(this,"_internalUtilCtx"),this._logger=c._logger.named("SheetObject",h.address.objectKey),this._logger._trace("creating object"),this._internalUtilCtx={logger:this._logger.utilFor.internal()},this.address=v(g({},h.address),{sheetInstanceId:c.address.sheetInstanceId}),this.publicApi=new tE(this)}get type(){return"Theatre_SheetObject"}getValues(){return this._cache.get("getValues()",()=>(0,Pt.prism)(()=>{const c=(0,Pt.val)(this.template.getDefaultValues()),h=(0,Pt.val)(this._initialValue.pointer),m=Pt.prism.memo("withInitialCache",()=>new WeakMap,[]),x=Wr(c,h,m),E=(0,Pt.val)(this.template.getStaticValues()),C=Pt.prism.memo("withStatics",()=>new WeakMap,[]);let G=Wr(x,E,C),X;{const ge=Pt.prism.memo("seq",()=>this.getSequencedValues(),[]),_e=Pt.prism.memo("withSeqsCache",()=>new WeakMap,[]);X=(0,Pt.val)((0,Pt.val)(ge)),G=Wr(G,X,_e)}return Mc("finalAtom",G).pointer}))}getValueByPointer(c){const h=(0,Pt.val)(this.getValues()),{path:m}=(0,Pt.getPointerParts)(c);return(0,Pt.val)(Xr(h,m))}pointerToPrism(c){const{path:h}=(0,Pt.getPointerParts)(c);return(0,Pt.prism)(()=>{const m=(0,Pt.val)(this.getValues());return(0,Pt.val)(Xr(m,h))})}getSequencedValues(){return(0,Pt.prism)(()=>{const c=Pt.prism.memo("tracksToProcess",()=>this.template.getArrayOfValidSequenceTracks(),[]),h=(0,Pt.val)(c),m=new Pt.Atom({}),x=(0,Pt.val)(this.template.configPointer);return Pt.prism.effect("processTracks",()=>{const E=[];for(const{trackId:C,pathToProp:z}of h){const G=this._trackIdToPrism(C),X=Fh(x,z),ne=X.deserializeAndSanitize,ge=X.interpolate,_e=()=>{const We=G.getValue();if(!We)return m.setByPointer(Tt=>Xr(Tt,z),void 0);const ze=ne(We.left),ot=ze===void 0?X.default:ze;if(We.right===void 0)return m.setByPointer(Tt=>Xr(Tt,z),ot);const mt=ne(We.right),st=mt===void 0?X.default:mt;return m.setByPointer(Tt=>Xr(Tt,z),ge(ot,st,We.progression))},Pe=G.onStale(_e);_e(),E.push(Pe)}return()=>{for(const C of E)C()}},[x,...h]),m.pointer})}_trackIdToPrism(c){const h=this.template.project.pointers.historic.sheetsById[this.address.sheetId].sequence.tracksByObject[this.address.objectKey].trackData[c],m=this.sheet.getSequence().positionPrism;return lh(this._internalUtilCtx,h,m)}get propsP(){return this._cache.get("propsP",()=>(0,Pt.pointer)({root:this,path:[]}))}validateValue(c,h){}setInitialValue(c){this.validateValue(this.propsP,c),this._initialValue.set(c)}};function Ut(c){return function(m,x){return c(m,x())}}var jn={_hmm:qn(524),_todo:qn(522),_error:qn(521),errorDev:qn(529),errorPublic:qn(545),_kapow:qn(268),_warn:qn(265),warnDev:qn(273),warnPublic:qn(289),_debug:qn(137),debugDev:qn(145),_trace:qn(73),traceDev:qn(81)};function qn(c){return Object.freeze({audience:$r(c,8)?"internal":$r(c,16)?"dev":"public",category:$r(c,4)?"troubleshooting":$r(c,2)?"todo":"general",level:$r(c,512)?512:$r(c,256)?256:$r(c,128)?128:64})}function $r(c,h){return(c&h)===h}function Nt(c,h){return((h&32)===32?!0:(h&16)===16?c.dev:(h&8)===8?c.internal:!1)&&c.min<=h}var Xi={loggingConsoleStyle:!0,loggerConsoleStyle:!0,includes:Object.freeze({internal:!1,dev:!1,min:256}),filtered:function(){},include:function(){return{}},create:null,creatExt:null,named(c,h,m){return this.create({names:[...c.names,{name:h,key:m}]})},style:{bold:void 0,italic:void 0,cssMemo:new Map([["",""]]),collapseOnRE:/[a-z- ]+/g,color:void 0,collapsed(c){if(c.length<5)return c;const h=c.replace(this.collapseOnRE,"");return this.cssMemo.has(h)||this.cssMemo.set(h,this.css(c)),h},css(c){var h,m,x,E;const C=this.cssMemo.get(c);if(C)return C;let z="color:".concat((m=(h=this.color)==null?void 0:h.call(this,c))!=null?m:"hsl(".concat((c.charCodeAt(0)+c.charCodeAt(c.length-1))%360,", 100%, 60%)"));return(x=this.bold)!=null&&x.test(c)&&(z+=";font-weight:600"),(E=this.italic)!=null&&E.test(c)&&(z+=";font-style:italic"),this.cssMemo.set(c,z),z}}};function Nm(c=console,h={}){const m=v(g({},Xi),{includes:g({},Xi.includes)}),x={styled:oE.bind(m,c),noStyle:lE.bind(m,c)},E=aE.bind(m);function C(){return m.loggingConsoleStyle&&m.loggerConsoleStyle?x.styled:x.noStyle}return m.create=C(),{configureLogger(z){var G;z==="console"?(m.loggerConsoleStyle=Xi.loggerConsoleStyle,m.create=C()):z.type==="console"?(m.loggerConsoleStyle=(G=z.style)!=null?G:Xi.loggerConsoleStyle,m.create=C()):z.type==="keyed"?(m.creatExt=X=>z.keyed(X.names),m.create=E):z.type==="named"&&(m.creatExt=sE.bind(null,z.named),m.create=E)},configureLogging(z){var G,X,ne,ge,_e;m.includes.dev=(G=z.dev)!=null?G:Xi.includes.dev,m.includes.internal=(X=z.internal)!=null?X:Xi.includes.internal,m.includes.min=(ne=z.min)!=null?ne:Xi.includes.min,m.include=(ge=z.include)!=null?ge:Xi.include,m.loggingConsoleStyle=(_e=z.consoleStyle)!=null?_e:Xi.loggingConsoleStyle,m.create=C()},getLogger(){return m.create({names:[]})}}}function sE(c,h){const m=[];for(let{name:x,key:E}of h.names)m.push(E==null?x:"".concat(x," (").concat(E,")"));return c(m)}function aE(c){const h=g(g({},this.includes),this.include(c)),m=this.filtered,x=this.named.bind(this,c),E=this.creatExt(c),C=Nt(h,524),z=Nt(h,522),G=Nt(h,521),X=Nt(h,529),ne=Nt(h,545),ge=Nt(h,265),_e=Nt(h,268),Pe=Nt(h,273),We=Nt(h,289),ze=Nt(h,137),ot=Nt(h,145),mt=Nt(h,73),st=Nt(h,81),Tt=C?E.error.bind(E,jn._hmm):m.bind(c,524),xn=z?E.error.bind(E,jn._todo):m.bind(c,522),Nn=G?E.error.bind(E,jn._error):m.bind(c,521),bn=X?E.error.bind(E,jn.errorDev):m.bind(c,529),It=ne?E.error.bind(E,jn.errorPublic):m.bind(c,545),Sn=_e?E.warn.bind(E,jn._kapow):m.bind(c,268),$n=ge?E.warn.bind(E,jn._warn):m.bind(c,265),Ii=Pe?E.warn.bind(E,jn.warnDev):m.bind(c,273),ts=We?E.warn.bind(E,jn.warnPublic):m.bind(c,273),ns=ze?E.debug.bind(E,jn._debug):m.bind(c,137),is=ot?E.debug.bind(E,jn.debugDev):m.bind(c,145),rs=mt?E.trace.bind(E,jn._trace):m.bind(c,73),ss=st?E.trace.bind(E,jn.traceDev):m.bind(c,81),tn={_hmm:Tt,_todo:xn,_error:Nn,errorDev:bn,errorPublic:It,_kapow:Sn,_warn:$n,warnDev:Ii,warnPublic:ts,_debug:ns,debugDev:is,_trace:rs,traceDev:ss,lazy:{_hmm:C?Ut(Tt):Tt,_todo:z?Ut(xn):xn,_error:G?Ut(Nn):Nn,errorDev:X?Ut(bn):bn,errorPublic:ne?Ut(It):It,_kapow:_e?Ut(Sn):Sn,_warn:ge?Ut($n):$n,warnDev:Pe?Ut(Ii):Ii,warnPublic:We?Ut(ts):ts,_debug:ze?Ut(ns):ns,debugDev:ot?Ut(is):is,_trace:mt?Ut(rs):rs,traceDev:st?Ut(ss):ss},named:x,utilFor:{internal(){return{debug:tn._debug,error:tn._error,warn:tn._warn,trace:tn._trace,named(Zn,Ft){return tn.named(Zn,Ft).utilFor.internal()}}},dev(){return{debug:tn.debugDev,error:tn.errorDev,warn:tn.warnDev,trace:tn.traceDev,named(Zn,Ft){return tn.named(Zn,Ft).utilFor.dev()}}},public(){return{error:tn.errorPublic,warn:tn.warnPublic,debug(Zn,Ft){tn._warn('(public "debug" filtered out) '.concat(Zn),Ft)},trace(Zn,Ft){tn._warn('(public "trace" filtered out) '.concat(Zn),Ft)},named(Zn,Ft){return tn.named(Zn,Ft).utilFor.public()}}}}};return tn}function oE(c,h){const m=g(g({},this.includes),this.include(h)),x=[];let E="";for(let X=0;X<h.names.length;X++){const{name:ne,key:ge}=h.names[X];if(E+=" %c".concat(ne),x.push(this.style.css(ne)),ge!=null){const _e="%c#".concat(ge);E+=_e,x.push(this.style.css(_e))}}const C=this.filtered,z=this.named.bind(this,h),G=[E,...x];return Fm(C,h,m,c,G,cE(G),z)}function cE(c){const h=c.slice(0);for(let m=1;m<h.length;m++)h[m]+=";background-color:#e0005a;padding:2px;color:white";return h}function lE(c,h){const m=g(g({},this.includes),this.include(h));let x="";for(let G=0;G<h.names.length;G++){const{name:X,key:ne}=h.names[G];x+=" ".concat(X),ne!=null&&(x+="#".concat(ne))}const E=this.filtered,C=this.named.bind(this,h),z=[x];return Fm(E,h,m,c,z,z,C)}function Fm(c,h,m,x,E,C,z){const G=Nt(m,524),X=Nt(m,522),ne=Nt(m,521),ge=Nt(m,529),_e=Nt(m,545),Pe=Nt(m,265),We=Nt(m,268),ze=Nt(m,273),ot=Nt(m,289),mt=Nt(m,137),st=Nt(m,145),Tt=Nt(m,73),xn=Nt(m,81),Nn=G?x.error.bind(x,...E):c.bind(h,524),bn=X?x.error.bind(x,...E):c.bind(h,522),It=ne?x.error.bind(x,...E):c.bind(h,521),Sn=ge?x.error.bind(x,...E):c.bind(h,529),$n=_e?x.error.bind(x,...E):c.bind(h,545),Ii=We?x.warn.bind(x,...C):c.bind(h,268),ts=Pe?x.warn.bind(x,...E):c.bind(h,265),ns=ze?x.warn.bind(x,...E):c.bind(h,273),is=ot?x.warn.bind(x,...E):c.bind(h,273),rs=mt?x.info.bind(x,...E):c.bind(h,137),ss=st?x.info.bind(x,...E):c.bind(h,145),tn=Tt?x.debug.bind(x,...E):c.bind(h,73),Zn=xn?x.debug.bind(x,...E):c.bind(h,81),Ft={_hmm:Nn,_todo:bn,_error:It,errorDev:Sn,errorPublic:$n,_kapow:Ii,_warn:ts,warnDev:ns,warnPublic:is,_debug:rs,debugDev:ss,_trace:tn,traceDev:Zn,lazy:{_hmm:G?Ut(Nn):Nn,_todo:X?Ut(bn):bn,_error:ne?Ut(It):It,errorDev:ge?Ut(Sn):Sn,errorPublic:_e?Ut($n):$n,_kapow:We?Ut(Ii):Ii,_warn:Pe?Ut(ts):ts,warnDev:ze?Ut(ns):ns,warnPublic:ot?Ut(is):is,_debug:mt?Ut(rs):rs,debugDev:st?Ut(ss):ss,_trace:Tt?Ut(tn):tn,traceDev:xn?Ut(Zn):Zn},named:z,utilFor:{internal(){return{debug:Ft._debug,error:Ft._error,warn:Ft._warn,trace:Ft._trace,named(Yi,$i){return Ft.named(Yi,$i).utilFor.internal()}}},dev(){return{debug:Ft.debugDev,error:Ft.errorDev,warn:Ft.warnDev,trace:Ft.traceDev,named(Yi,$i){return Ft.named(Yi,$i).utilFor.dev()}}},public(){return{error:Ft.errorPublic,warn:Ft.warnPublic,debug(Yi,$i){Ft._warn('(public "debug" filtered out) '.concat(Yi),$i)},trace(Yi,$i){Ft._warn('(public "trace" filtered out) '.concat(Yi),$i)},named(Yi,$i){return Ft.named(Yi,$i).utilFor.public()}}}}};return Ft}var Bm=Nm(console,{_debug:function(){},_error:function(){}});Bm.configureLogging({dev:!0,min:64});var Nc=Bm.getLogger().named("Theatre.js (default logger)").utilFor.dev(),zm=new WeakMap;function uE(c){const h=zm.get(c);if(h)return h;const m=new Map;return zm.set(c,m),km([],c,m),m}function km(c,h,m){for(const[x,E]of Object.entries(h.props))if(!Uc(E)){const C=[...c,x];m.set(JSON.stringify(C),m.size),Hm(C,E,m)}for(const[x,E]of Object.entries(h.props))if(Uc(E)){const C=[...c,x];m.set(JSON.stringify(C),m.size),Hm(C,E,m)}}function Hm(c,h,m){if(h.type==="compound")km(c,h,m);else{if(h.type==="enum")throw new Error("Enums aren't supported yet");m.set(JSON.stringify(c),m.size)}}function Vm(c){return typeof c=="object"&&c!==null&&Object.keys(c).length===0}var hE=class{constructor(c,h,m,x,E){this.sheetTemplate=c,M(this,"address"),M(this,"type","Theatre_SheetObjectTemplate"),M(this,"_config"),M(this,"_temp_actions_atom"),M(this,"_cache",new yr),M(this,"project"),M(this,"pointerToSheetState"),M(this,"pointerToStaticOverrides"),this.address=v(g({},c.address),{objectKey:h}),this._config=new on.Atom(x),this._temp_actions_atom=new on.Atom(E),this.project=c.project,this.pointerToSheetState=this.sheetTemplate.project.pointers.historic.sheetsById[this.address.sheetId],this.pointerToStaticOverrides=this.pointerToSheetState.staticOverrides.byObject[this.address.objectKey]}get staticConfig(){return this._config.get()}get configPointer(){return this._config.pointer}get _temp_actions(){return this._temp_actions_atom.get()}get _temp_actionsPointer(){return this._temp_actions_atom.pointer}createInstance(c,h,m){return this._config.set(m),new rE(c,this,h)}reconfigure(c){this._config.set(c)}_temp_setActions(c){this._temp_actions_atom.set(c)}getDefaultValues(){return this._cache.get("getDefaultValues()",()=>(0,on.prism)(()=>{const c=(0,on.val)(this.configPointer);return oh(c)}))}getStaticValues(){return this._cache.get("getStaticValues",()=>(0,on.prism)(()=>{var c;const h=(c=(0,on.val)(this.pointerToStaticOverrides))!=null?c:{};return(0,on.val)(this.configPointer).deserializeAndSanitize(h)||{}}))}getArrayOfValidSequenceTracks(){return this._cache.get("getArrayOfValidSequenceTracks",()=>(0,on.prism)(()=>{const c=this.project.pointers.historic.sheetsById[this.address.sheetId],h=(0,on.val)(c.sequence.tracksByObject[this.address.objectKey].trackIdByPropPath);if(!h)return ce;const m=[];if(!h)return ce;const x=(0,on.val)(this.configPointer),E=Object.entries(h);for(const[z,G]of E){const X=fE(z);if(!X)continue;const ne=Fh(x,X);ne&&iE(ne)&&m.push({pathToProp:X,trackId:G})}const C=uE(x);return m.sort((z,G)=>{const X=z.pathToProp,ne=G.pathToProp,ge=C.get(JSON.stringify(X)),_e=C.get(JSON.stringify(ne));return ge>_e?1:-1}),m.length===0?ce:m}))}getMapOfValidSequenceTracks_forStudio(){return this._cache.get("getMapOfValidSequenceTracks_forStudio",()=>(0,on.prism)(()=>{const c=(0,on.val)(this.getArrayOfValidSequenceTracks());let h={};for(const{pathToProp:m,trackId:x}of c)Xs(h,m,x);return h}))}getStaticButNotSequencedOverrides(){return this._cache.get("getStaticButNotSequencedOverrides",()=>(0,on.prism)(()=>{const c=(0,on.val)(this.getStaticValues()),h=(0,on.val)(this.getArrayOfValidSequenceTracks()),m=qM(c);for(const{pathToProp:x}of h){Um(m,x);let E=x.slice(0,-1);for(;E.length>0;){const C=gc(m,E);if(!Vm(C))break;Um(m,E),E=E.slice(0,-1)}}if(!Vm(m))return m}))}getDefaultsAtPointer(c){const{path:h}=(0,on.getPointerParts)(c),m=this.getDefaultValues().getValue();return gc(m,h)}};function fE(c){try{return JSON.parse(c)}catch{Nc.warn("property ".concat(JSON.stringify(c)," cannot be parsed. Skipping."));return}}var Gm=rn,dE=nE(c=>JSON.stringify(c));T(U());var pE=class extends Error{},so=class extends pE{},Wm=rn,mE=rn,gE=rn,vn=rn;function br(){let c,h;const m=new Promise((E,C)=>{c=z=>{E(z),x.status="resolved"},h=z=>{C(z),x.status="rejected"}}),x={resolve:c,reject:h,promise:m,status:"pending"};return x}var _E=()=>{},Fc=_E,vE=rn,yE=class{constructor(){M(this,"_stopPlayCallback",Fc),M(this,"_state",new vE.Atom({position:0,playing:!1})),M(this,"statePointer"),this.statePointer=this._state.pointer}destroy(){}pause(){this._stopPlayCallback(),this.playing=!1,this._stopPlayCallback=Fc}gotoPosition(c){this._updatePositionInState(c)}_updatePositionInState(c){this._state.setByPointer(h=>h.position,c)}getCurrentPosition(){return this._state.get().position}get playing(){return this._state.get().playing}set playing(c){this._state.setByPointer(h=>h.playing,c)}play(c,h,m,x,E){this.playing&&this.pause(),this.playing=!0;const C=h[1]-h[0];{const Pe=this.getCurrentPosition();Pe<h[0]||Pe>h[1]?x==="normal"||x==="alternate"?this._updatePositionInState(h[0]):(x==="reverse"||x==="alternateReverse")&&this._updatePositionInState(h[1]):x==="normal"||x==="alternate"?Pe===h[1]&&this._updatePositionInState(h[0]):Pe===h[0]&&this._updatePositionInState(h[1])}const z=br(),G=E.time,X=C*c;let ne=this.getCurrentPosition()-h[0];(x==="reverse"||x==="alternateReverse")&&(ne=h[1]-this.getCurrentPosition());const ge=Pe=>{const ze=Math.max(Pe-G,0)/1e3,ot=Math.min(ze*m+ne,X);if(ot!==X){const mt=Math.floor(ot/C);let st=ot/C%1*C;if(x!=="normal")if(x==="reverse")st=C-st;else{const Tt=mt%2===0;x==="alternate"?Tt||(st=C-st):Tt&&(st=C-st)}this._updatePositionInState(st+h[0]),_e()}else{if(x==="normal")this._updatePositionInState(h[1]);else if(x==="reverse")this._updatePositionInState(h[0]);else{const mt=(c-1)%2===0;x==="alternate"?mt?this._updatePositionInState(h[1]):this._updatePositionInState(h[0]):mt?this._updatePositionInState(h[0]):this._updatePositionInState(h[1])}this.playing=!1,z.resolve(!0)}};this._stopPlayCallback=()=>{E.offThisOrNextTick(ge),E.offNextTick(ge),this.playing&&z.resolve(!1)};const _e=()=>E.onNextTick(ge);return E.onThisOrNextTick(ge),z.promise}playDynamicRange(c,h){this.playing&&this.pause(),this.playing=!0;const m=br(),x=c.keepHot();m.promise.then(x,x);let E=h.time;const C=G=>{const X=Math.max(G-E,0);E=G;const ne=X/1e3,ge=this.getCurrentPosition(),_e=c.getValue();if(ge<_e[0]||ge>_e[1])this.gotoPosition(_e[0]);else{let Pe=ge+ne;Pe>_e[1]&&(Pe=_e[0]+(Pe-_e[1])),this.gotoPosition(Pe)}z()};this._stopPlayCallback=()=>{h.offThisOrNextTick(C),h.offNextTick(C),m.resolve(!1)};const z=()=>h.onNextTick(C);return h.onThisOrNextTick(C),m.promise}},xE=rn,bE="__TheatreJS_StudioBundle",Bh="__TheatreJS_CoreBundle",SE="__TheatreJS_Notifications",Bc=c=>(...h)=>{var m;switch(c){case"success":{Nc.debug(h.slice(0,2).join(`
`));break}case"info":{Nc.debug(h.slice(0,2).join(`
`));break}case"warning":{Nc.warn(h.slice(0,2).join(`
`));break}}return typeof window<"u"?(m=window[SE])==null?void 0:m.notify[c](...h):void 0},$s={warning:Bc("warning"),success:Bc("success"),info:Bc("info"),error:Bc("error")};typeof window<"u"&&(window.addEventListener("error",c=>{$s.error("An error occurred","<pre>".concat(c.message,`</pre>

See **console** for details.`))}),window.addEventListener("unhandledrejection",c=>{$s.error("An error occurred","<pre>".concat(c.reason,`</pre>

See **console** for details.`))}));var ME=class{constructor(c,h,m){this._decodedBuffer=c,this._audioContext=h,this._nodeDestination=m,M(this,"_mainGain"),M(this,"_state",new xE.Atom({position:0,playing:!1})),M(this,"statePointer"),M(this,"_stopPlayCallback",Fc),this.statePointer=this._state.pointer,this._mainGain=this._audioContext.createGain(),this._mainGain.connect(this._nodeDestination)}playDynamicRange(c,h){const m=br();this._playing&&this.pause(),this._playing=!0;let x;const E=()=>{x==null||x(),x=this._loopInRange(c.getValue(),h).stop},C=c.onStale(E);return E(),this._stopPlayCallback=()=>{x==null||x(),C(),m.resolve(!1)},m.promise}_loopInRange(c,h){let x=this.getCurrentPosition();const E=c[1]-c[0];x<c[0]||x>c[1]?this._updatePositionInState(c[0]):x===c[1]&&this._updatePositionInState(c[0]),x=this.getCurrentPosition();const C=this._audioContext.createBufferSource();C.buffer=this._decodedBuffer,C.connect(this._mainGain),C.playbackRate.value=1,C.loop=!0,C.loopStart=c[0],C.loopEnd=c[1];const z=h.time;let G=x-c[0];C.start(0,x);const X=_e=>{let ot=(Math.max(_e-z,0)/1e3*1+G)/E%1*E;this._updatePositionInState(ot+c[0]),ne()},ne=()=>h.onNextTick(X);return h.onThisOrNextTick(X),{stop:()=>{C.stop(),C.disconnect(),h.offThisOrNextTick(X),h.offNextTick(X)}}}get _playing(){return this._state.get().playing}set _playing(c){this._state.setByPointer(h=>h.playing,c)}destroy(){}pause(){this._stopPlayCallback(),this._playing=!1,this._stopPlayCallback=Fc}gotoPosition(c){this._updatePositionInState(c)}_updatePositionInState(c){this._state.reduce(h=>v(g({},h),{position:c}))}getCurrentPosition(){return this._state.get().position}play(c,h,m,x,E){this._playing&&this.pause(),this._playing=!0;let C=this.getCurrentPosition();const z=h[1]-h[0];if(x!=="normal")throw new so('Audio-controlled sequences can only be played in the "normal" direction. '+"'".concat(x,"' given."));C<h[0]||C>h[1]?this._updatePositionInState(h[0]):C===h[1]&&this._updatePositionInState(h[0]),C=this.getCurrentPosition();const G=br(),X=this._audioContext.createBufferSource();X.buffer=this._decodedBuffer,X.connect(this._mainGain),X.playbackRate.value=m,c>1e3&&($s.warning("Can't play sequences with audio more than 1000 times","The sequence will still play, but only 1000 times. The `iterationCount: ".concat(c,"` provided to `sequence.play()`\nis too high for a sequence with audio.\n\nTo fix this, either set `iterationCount` to a lower value, or remove the audio from the sequence."),[{url:"https://www.theatrejs.com/docs/latest/manual/audio",title:"Using Audio"},{url:"https://www.theatrejs.com/docs/latest/api/core#sequence.attachaudio",title:"Audio API"}]),c=1e3),c>1&&(X.loop=!0,X.loopStart=h[0],X.loopEnd=h[1]);const ne=E.time;let ge=C-h[0];const _e=z*c;X.start(0,C,_e-ge);const Pe=ot=>{const st=Math.max(ot-ne,0)/1e3,Tt=Math.min(st*m+ge,_e);if(Tt!==_e){let xn=Tt/z%1*z;this._updatePositionInState(xn+h[0]),ze()}else this._updatePositionInState(h[1]),this._playing=!1,We(),G.resolve(!0)},We=()=>{X.stop(),X.disconnect()};this._stopPlayCallback=()=>{We(),E.offThisOrNextTick(Pe),E.offNextTick(Pe),this._playing&&G.resolve(!1)};const ze=()=>E.onNextTick(Pe);return E.onThisOrNextTick(Pe),G.promise}},TE=rn,Xm=0;function zh(c){var h;const m=z=>{x.tick(z)},x=new TE.Ticker({onActive(){var z;(z=c==null?void 0:c.start)==null||z.call(c)},onDormant(){var z;(z=c==null?void 0:c.stop)==null||z.call(c)}}),E={tick:m,id:Xm++,name:(h=c==null?void 0:c.name)!=null?h:"CustomRafDriver-".concat(Xm),type:"Theatre_RafDriver_PublicAPI"},C={type:"Theatre_RafDriver_PrivateAPI",publicApi:E,ticker:x,start:c==null?void 0:c.start,stop:c==null?void 0:c.stop};return ae(E,C),E}function wE(){let c=null;const x=zh({name:"DefaultCoreRafDriver",start:()=>{if(typeof window<"u"){const E=C=>{x.tick(C),c=window.requestAnimationFrame(E)};c=window.requestAnimationFrame(E)}else x.tick(0),setTimeout(()=>x.tick(1),0)},stop:()=>{typeof window<"u"&&c!==null&&window.cancelAnimationFrame(c)}});return x}var zc;function jm(){return zc||EE(wE()),zc}function qm(){return jm().ticker}function EE(c){if(zc)throw new Error("`setCoreRafDriver()` is already called.");zc=ie(c)}var AE=class{get type(){return"Theatre_Sequence_PublicAPI"}constructor(c){ae(this,c)}play(c){const h=ie(this);if(h._project.isReady()){const m=c!=null&&c.rafDriver?ie(c.rafDriver).ticker:qm();return h.play(c??{},m)}else{const m=br();return m.resolve(!0),m.promise}}pause(){ie(this).pause()}get position(){return ie(this).position}set position(c){ie(this).position=c}__experimental_getKeyframes(c){return ie(this).getKeyframesOfSimpleProp(c)}async attachAudio(c){const{audioContext:h,destinationNode:m,decodedBuffer:x,gainNode:E}=await PE(c),C=new ME(x,h,E);return ie(this).replacePlaybackController(C),{audioContext:h,destinationNode:m,decodedBuffer:x,gainNode:E}}get pointer(){return ie(this).pointer}};async function PE(c){function h(){if(c.audioContext)return Promise.resolve(c.audioContext);const ne=new AudioContext;return ne.state==="running"||typeof window>"u"?Promise.resolve(ne):new Promise(ge=>{const _e=()=>{ne.resume().catch(ze=>{console.error(ze)})},Pe=["mousedown","keydown","touchstart"],We={capture:!0,passive:!1};Pe.forEach(ze=>{window.addEventListener(ze,_e,We)}),ne.addEventListener("statechange",()=>{ne.state==="running"&&(Pe.forEach(ze=>{window.removeEventListener(ze,_e,We)}),ge(ne))})})}async function m(){if(c.source instanceof AudioBuffer)return c.source;const ne=br();if(typeof c.source!="string")throw new Error("Error validating arguments to sequence.attachAudio(). args.source must either be a string or an instance of AudioBuffer.");let ge;try{ge=await fetch(c.source)}catch(ze){throw console.error(ze),new Error("Could not fetch '".concat(c.source,"'. Network error logged above."))}let _e;try{_e=await ge.arrayBuffer()}catch(ze){throw console.error(ze),new Error("Could not read '".concat(c.source,"' as an arrayBuffer."))}(await x).decodeAudioData(_e,ne.resolve,ne.reject);let We;try{We=await ne.promise}catch(ze){throw console.error(ze),new Error("Could not decode ".concat(c.source," as an audio file."))}return We}const x=h(),E=m(),[C,z]=await Promise.all([x,E]),G=c.destinationNode||C.destination,X=C.createGain();return X.connect(G),{audioContext:C,decodedBuffer:z,gainNode:X,destinationNode:G}}var CE=RE("Theatre_SheetObject");function RE(c){return h=>typeof h=="object"&&!!h&&h.type===c}var IE=class{constructor(c,h,m,x,E){this._project=c,this._sheet=h,this._lengthD=m,this._subUnitsPerUnitD=x,M(this,"address"),M(this,"publicApi"),M(this,"_playbackControllerBox"),M(this,"_prismOfStatePointer"),M(this,"_positionD"),M(this,"_positionFormatterD"),M(this,"_playableRangeD"),M(this,"pointer",(0,gE.pointer)({root:this,path:[]})),M(this,"$$isPointerToPrismProvider",!0),M(this,"_logger"),M(this,"closestGridPosition",C=>{const G=1/this.subUnitsPerUnit;return parseFloat((Math.round(C/G)*G).toFixed(3))}),this._logger=c._logger.named("Sheet",h.address.sheetId).named("Instance",h.address.sheetInstanceId),this.address=v(g({},this._sheet.address),{sequenceName:"default"}),this.publicApi=new AE(this),this._playbackControllerBox=new mE.Atom(E??new yE),this._prismOfStatePointer=(0,vn.prism)(()=>this._playbackControllerBox.prism.getValue().statePointer),this._positionD=(0,vn.prism)(()=>{const C=this._prismOfStatePointer.getValue();return(0,vn.val)(C.position)}),this._positionFormatterD=(0,vn.prism)(()=>{const C=(0,vn.val)(this._subUnitsPerUnitD);return new LE(C)})}pointerToPrism(c){const{path:h}=(0,Wm.getPointerParts)(c);if(h.length===0)return(0,vn.prism)(()=>({length:(0,vn.val)(this.pointer.length),playing:(0,vn.val)(this.pointer.playing),position:(0,vn.val)(this.pointer.position)}));if(h.length>1)return(0,vn.prism)(()=>{});const[m]=h;return m==="length"?this._lengthD:m==="position"?this._positionD:m==="playing"?(0,vn.prism)(()=>(0,vn.val)(this._prismOfStatePointer.getValue().playing)):(0,vn.prism)(()=>{})}getKeyframesOfSimpleProp(c){const{path:h,root:m}=(0,Wm.getPointerParts)(c);if(!CE(m))throw new so("Argument prop must be a pointer to a SheetObject property");const x=(0,vn.val)(this._project.pointers.historic.sheetsById[this._sheet.address.sheetId].sequence.tracksByObject[m.address.objectKey]);if(!x)return[];const{trackData:E,trackIdByPropPath:C}=x,z=dE(h),G=C[z];if(!G)return[];const X=E[G];return X?X.keyframes:[]}get positionFormatter(){return this._positionFormatterD.getValue()}get prismOfStatePointer(){return this._prismOfStatePointer}get length(){return this._lengthD.getValue()}get positionPrism(){return this._positionD}get position(){return this._playbackControllerBox.get().getCurrentPosition()}get subUnitsPerUnit(){return this._subUnitsPerUnitD.getValue()}get positionSnappedToGrid(){return this.closestGridPosition(this.position)}set position(c){let h=c;this.pause(),h>this.length&&(h=this.length);const m=this.length;this._playbackControllerBox.get().gotoPosition(h>m?m:h)}getDurationCold(){return this._lengthD.getValue()}get playing(){return(0,vn.val)(this._playbackControllerBox.get().statePointer.playing)}_makeRangeFromSequenceTemplate(){return(0,vn.prism)(()=>[0,(0,vn.val)(this._lengthD)])}playDynamicRange(c,h){return this._playbackControllerBox.get().playDynamicRange(c,h)}async play(c,h){const m=this.length,x=c&&c.range?c.range:[0,m],E=c&&typeof c.iterationCount=="number"?c.iterationCount:1,C=c&&typeof c.rate<"u"?c.rate:1,z=c&&c.direction?c.direction:"normal";return await this._play(E,[x[0],x[1]],C,z,h)}_play(c,h,m,x,E){return this._playbackControllerBox.get().play(c,h,m,x,E)}pause(){this._playbackControllerBox.get().pause()}replacePlaybackController(c){this.pause();const h=this._playbackControllerBox.get();this._playbackControllerBox.set(c);const m=h.getCurrentPosition();h.destroy(),c.gotoPosition(m)}},LE=class{constructor(c){this._fps=c}formatSubUnitForGrid(c){const h=c%1,m=1/this._fps;return Math.round(h/m)+"f"}formatFullUnitForGrid(c){let h=c,m="";if(h>=Zs){const E=Math.floor(h/Zs);m+=E+"h",h=h%Zs}if(h>=Jr){const E=Math.floor(h/Jr);m+=E+"m",h=h%Jr}if(h>=Zr){const E=Math.floor(h/Zr);m+=E+"s",h=h%Zr}const x=1/this._fps;if(h>=x){const E=Math.floor(h/x);m+=E+"f",h=h%x}return m.length===0?"0s":m}formatForPlayhead(c){let h=c,m="";if(h>=Zs){const E=Math.floor(h/Zs);m+=ro(E.toString(),2,"0")+"h",h=h%Zs}if(h>=Jr){const E=Math.floor(h/Jr);m+=ro(E.toString(),2,"0")+"m",h=h%Jr}else m.length>0&&(m+="00m");if(h>=Zr){const E=Math.floor(h/Zr);m+=ro(E.toString(),2,"0")+"s",h=h%Zr}else m+="00s";const x=1/this._fps;if(h>=x){const E=Math.round(h/x);m+=ro(E.toString(),2,"0")+"f",h=h%x}else h/x>.98?(m+=ro(1 .toString(),2,"0")+"f",h=h%x):m+="00f";return m.length===0?"00s00f":m}formatBasic(c){return c.toFixed(2)+"s"}},Zr=1,Jr=Zr*60,Zs=Jr*60,kh={};y(kh,{boolean:()=>eg,compound:()=>Vh,file:()=>kE,image:()=>VE,number:()=>Qm,rgba:()=>qE,string:()=>tg,stringLiteral:()=>KE});function Ym(c,h){return c.length<=h?c:c.substr(0,h-3)+"..."}var DE=c=>typeof c=="string"?'string("'.concat(Ym(c,10),'")'):typeof c=="number"?"number(".concat(Ym(String(c),10),")"):c===null?"null":c===void 0?"undefined":typeof c=="boolean"?String(c):Array.isArray(c)?"array":typeof c=="object"?"object":"unknown",$m=DE;function OE(c,{removeAlphaIfOpaque:h=!1}={}){const m=(c.a*255|256).toString(16).slice(1),x=(c.r*255|256).toString(16).slice(1)+(c.g*255|256).toString(16).slice(1)+(c.b*255|256).toString(16).slice(1)+(h&&m==="ff"?"":m);return"#".concat(x)}function Hh(c){return v(g({},c),{toString(){return OE(this,{removeAlphaIfOpaque:!0})}})}function UE(c){return Object.fromEntries(Object.entries(c).map(([h,m])=>[h,$p(m,0,1)]))}function NE(c){function h(m){return m>=.0031308?1.055*m**(1/2.4)-.055:12.92*m}return UE({r:h(c.r),g:h(c.g),b:h(c.b),a:c.a})}function Zm(c){function h(m){return m>=.04045?((m+.055)/(1+.055))**2.4:m/12.92}return{r:h(c.r),g:h(c.g),b:h(c.b),a:c.a}}function Jm(c){let h=.4122214708*c.r+.5363325363*c.g+.0514459929*c.b,m=.2119034982*c.r+.6806995451*c.g+.1073969566*c.b,x=.0883024619*c.r+.2817188376*c.g+.6299787005*c.b,E=Math.cbrt(h),C=Math.cbrt(m),z=Math.cbrt(x);return{L:.2104542553*E+.793617785*C-.0040720468*z,a:1.9779984951*E-2.428592205*C+.4505937099*z,b:.0259040371*E+.7827717662*C-.808675766*z,alpha:c.a}}function FE(c){let h=c.L+.3963377774*c.a+.2158037573*c.b,m=c.L-.1055613458*c.a-.0638541728*c.b,x=c.L-.0894841775*c.a-1.291485548*c.b,E=h*h*h,C=m*m*m,z=x*x*x;return{r:4.0767416621*E-3.3077115913*C+.2309699292*z,g:-1.2684380046*E+2.6097574011*C-.3413193965*z,b:-.0041960863*E-.7034186147*C+1.707614701*z,a:c.alpha}}var ji=Symbol("TheatrePropType_Basic");function Km(c){return typeof c=="object"&&!!c&&c[ji]==="TheatrePropType"}function BE(c){if(typeof c=="number")return Qm(c);if(typeof c=="boolean")return eg(c);if(typeof c=="string")return tg(c);if(typeof c=="object"&&c){if(Km(c))return c;if(eb(c))return Vh(c);throw new so("This value is not a valid prop type: ".concat($m(c)))}else throw new so("This value is not a valid prop type: ".concat($m(c)))}function zE(c){const h={};for(const m of Object.keys(c)){const x=c[m];Km(x)?h[m]=x:h[m]=BE(x)}return h}var Vh=(c,h={})=>{const m=zE(c),x=new WeakMap;return{type:"compound",props:m,valueType:null,[ji]:"TheatrePropType",label:h.label,default:Aw(m,C=>C.default),deserializeAndSanitize:C=>{if(typeof C!="object"||!C)return;if(x.has(C))return x.get(C);const z={};let G=!1;for(const[X,ne]of Object.entries(m))if(Object.prototype.hasOwnProperty.call(C,X)){const ge=ne.deserializeAndSanitize(C[X]);ge!=null&&(G=!0,z[X]=ge)}if(x.set(C,z),G)return z}}},kE=(c,h={})=>{const m=(x,E,C)=>{var z;return{type:"file",id:((z=h.interpolate)!=null?z:ao)(x.id,E.id,C)}};return{type:"file",default:{type:"file",id:c},valueType:null,[ji]:"TheatrePropType",label:h.label,interpolate:m,deserializeAndSanitize:HE}},HE=c=>{if(!c)return;let h=!0;if(typeof c.id!="string"&&![null,void 0].includes(c.id)&&(h=!1),c.type!=="file"&&(h=!1),!!h)return c},VE=(c,h={})=>{const m=(x,E,C)=>{var z;return{type:"image",id:((z=h.interpolate)!=null?z:ao)(x.id,E.id,C)}};return{type:"image",default:{type:"image",id:c},valueType:null,[ji]:"TheatrePropType",label:h.label,interpolate:m,deserializeAndSanitize:GE}},GE=c=>{if(!c)return;let h=!0;if(typeof c.id!="string"&&![null,void 0].includes(c.id)&&(h=!1),c.type!=="image"&&(h=!1),!!h)return c},Qm=(c,h={})=>{var m;return v(g({type:"number",valueType:0,default:c,[ji]:"TheatrePropType"},h||{}),{label:h.label,nudgeFn:(m=h.nudgeFn)!=null?m:QE,nudgeMultiplier:typeof h.nudgeMultiplier=="number"?h.nudgeMultiplier:void 0,interpolate:jE,deserializeAndSanitize:WE(h.range)})},WE=c=>c?h=>{if(typeof h=="number"&&isFinite(h))return $p(h,c[0],c[1])}:XE,XE=c=>typeof c=="number"&&isFinite(c)?c:void 0,jE=(c,h,m)=>c+m*(h-c),qE=(c={r:0,g:0,b:0,a:1},h={})=>{const m={};for(const x of["r","g","b","a"])m[x]=Math.min(Math.max(c[x],0),1);return{type:"rgba",valueType:null,default:Hh(m),[ji]:"TheatrePropType",label:h.label,interpolate:$E,deserializeAndSanitize:YE}},YE=c=>{if(!c)return;let h=!0;for(const x of["r","g","b","a"])(!Object.prototype.hasOwnProperty.call(c,x)||typeof c[x]!="number")&&(h=!1);if(!h)return;const m={};for(const x of["r","g","b","a"])m[x]=Math.min(Math.max(c[x],0),1);return Hh(m)},$E=(c,h,m)=>{const x=Jm(Zm(c)),E=Jm(Zm(h)),C={L:(1-m)*x.L+m*E.L,a:(1-m)*x.a+m*E.a,b:(1-m)*x.b+m*E.b,alpha:(1-m)*x.alpha+m*E.alpha},z=NE(FE(C));return Hh(z)},eg=(c,h={})=>{var m;return{type:"boolean",default:c,valueType:null,[ji]:"TheatrePropType",label:h.label,interpolate:(m=h.interpolate)!=null?m:ao,deserializeAndSanitize:ZE}},ZE=c=>typeof c=="boolean"?c:void 0;function ao(c){return c}var tg=(c,h={})=>{var m;return{type:"string",default:c,valueType:null,[ji]:"TheatrePropType",label:h.label,interpolate:(m=h.interpolate)!=null?m:ao,deserializeAndSanitize:JE}};function JE(c){return typeof c=="string"?c:void 0}function KE(c,h,m={}){var x,E;return{type:"stringLiteral",default:c,valuesAndLabels:g({},h),[ji]:"TheatrePropType",valueType:null,as:(x=m.as)!=null?x:"menu",label:m.label,interpolate:(E=m.interpolate)!=null?E:ao,deserializeAndSanitize(C){if(typeof C=="string"&&Object.prototype.hasOwnProperty.call(h,C))return C}}}var QE=({config:c,deltaX:h,deltaFraction:m,magnitude:x})=>{var E;const{range:C}=c;return!c.nudgeMultiplier&&C&&!C.includes(1/0)&&!C.includes(-1/0)?m*(C[1]-C[0])*x:h*x*((E=c.nudgeMultiplier)!=null?E:1)},eA=c=>c.replace(/^[\s\/]*/,"").replace(/[\s\/]*$/,"").replace(/\s*\/\s*/g," / ");function Gh(c,h){return eA(c)}T(B());var tA=class{get type(){return"Theatre_Sheet_PublicAPI"}constructor(c){ae(this,c)}object(c,h,m){const x=ie(this),E=Gh(c),C=x.getObject(E),z=null,G=m==null?void 0:m.__actions__THIS_API_IS_UNSTABLE_AND_WILL_CHANGE_IN_THE_NEXT_VERSION;if(C)return G&&C.template._temp_setActions(G),C.publicApi;{const X=Vh(h);return x.createObject(E,z,X,G).publicApi}}get sequence(){return ie(this).getSequence().publicApi}get project(){return ie(this).project.publicApi}get address(){return g({},ie(this).address)}detachObject(c){const h=ie(this),m=Gh(c);if(!h.getObject(m)){$s.warning(`Couldn't delete object "`.concat(m,'"'),'There is no object with key "'.concat(m,`".

To fix this, make sure you are calling \`sheet.deleteObject("`).concat(m,'")` with the correct key.')),console.warn('Object key "'.concat(m,'" does not exist.'));return}h.deleteObject(m)}},oo=rn,nA=class{constructor(c,h){this.template=c,this.instanceId=h,M(this,"_objects",new oo.Atom({})),M(this,"_sequence"),M(this,"address"),M(this,"publicApi"),M(this,"project"),M(this,"objectsP",this._objects.pointer),M(this,"type","Theatre_Sheet"),M(this,"_logger"),this._logger=c.project._logger.named("Sheet",h),this._logger._trace("creating sheet"),this.project=c.project,this.address=v(g({},c.address),{sheetInstanceId:this.instanceId}),this.publicApi=new tA(this)}createObject(c,h,m,x={}){const C=this.template.getObjectTemplate(c,h,m,x).createInstance(this,h,m);return this._objects.setByPointer(z=>z[c],C),C}getObject(c){return this._objects.get()[c]}deleteObject(c){this._objects.reduce(h=>{const m=g({},h);return delete m[c],m})}getSequence(){if(!this._sequence){const c=(0,oo.prism)(()=>{const m=(0,oo.val)(this.project.pointers.historic.sheetsById[this.address.sheetId].sequence.length);return iA(m)}),h=(0,oo.prism)(()=>{const m=(0,oo.val)(this.project.pointers.historic.sheetsById[this.address.sheetId].sequence.subUnitsPerUnit);return rA(m)});this._sequence=new IE(this.template.project,this,c,h)}return this._sequence}},iA=c=>typeof c=="number"&&isFinite(c)&&c>0?c:10,rA=c=>typeof c=="number"&&ww(c)&&c>=1&&c<=1e3?c:30,sA=class{constructor(c,h){this.project=c,M(this,"type","Theatre_SheetTemplate"),M(this,"address"),M(this,"_instances",new Gm.Atom({})),M(this,"instancesP",this._instances.pointer),M(this,"_objectTemplates",new Gm.Atom({})),M(this,"objectTemplatesP",this._objectTemplates.pointer),this.address=v(g({},c.address),{sheetId:h})}getInstance(c){let h=this._instances.get()[c];return h||(h=new nA(this,c),this._instances.setByPointer(m=>m[c],h)),h}getObjectTemplate(c,h,m,x){let E=this._objectTemplates.get()[c];return E||(E=new hE(this,c,h,m,x),this._objectTemplates.setByPointer(C=>C[c],E)),E}},Wh=rn,ng=rn,aA=c=>new Promise(h=>setTimeout(h,c)),oA=aA;function oi(c){for(var h=arguments.length,m=Array(h>1?h-1:0),x=1;x<h;x++)m[x-1]=arguments[x];throw Error("[Immer] minified error nr: "+c+(m.length?" "+m.map(function(E){return"'"+E+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function Kr(c){return!!c&&!!c[Un]}function Qr(c){return!!c&&(function(h){if(!h||typeof h!="object")return!1;var m=Object.getPrototypeOf(h);if(m===null)return!0;var x=Object.hasOwnProperty.call(m,"constructor")&&m.constructor;return x===Object||typeof x=="function"&&Function.toString.call(x)===gA}(c)||Array.isArray(c)||!!c[fg]||!!c.constructor[fg]||jh(c)||qh(c))}function cA(c){return Kr(c)||oi(23,c),c[Un].t}function co(c,h,m){m===void 0&&(m=!1),Js(c)===0?(m?Object.keys:af)(c).forEach(function(x){m&&typeof x=="symbol"||h(x,c[x],c)}):c.forEach(function(x,E){return h(E,x,c)})}function Js(c){var h=c[Un];return h?h.i>3?h.i-4:h.i:Array.isArray(c)?1:jh(c)?2:qh(c)?3:0}function Xh(c,h){return Js(c)===2?c.has(h):Object.prototype.hasOwnProperty.call(c,h)}function lA(c,h){return Js(c)===2?c.get(h):c[h]}function ig(c,h,m){var x=Js(c);x===2?c.set(h,m):x===3?(c.delete(h),c.add(m)):c[h]=m}function uA(c,h){return c===h?c!==0||1/c==1/h:c!=c&&h!=h}function jh(c){return pA&&c instanceof Map}function qh(c){return mA&&c instanceof Set}function es(c){return c.o||c.t}function Yh(c){if(Array.isArray(c))return Array.prototype.slice.call(c);var h=_A(c);delete h[Un];for(var m=af(h),x=0;x<m.length;x++){var E=m[x],C=h[E];C.writable===!1&&(C.writable=!0,C.configurable=!0),(C.get||C.set)&&(h[E]={configurable:!0,writable:!0,enumerable:C.enumerable,value:c[E]})}return Object.create(Object.getPrototypeOf(c),h)}function $h(c,h){return h===void 0&&(h=!1),Zh(c)||Kr(c)||!Qr(c)||(Js(c)>1&&(c.set=c.add=c.clear=c.delete=hA),Object.freeze(c),h&&co(c,function(m,x){return $h(x,!0)},!0)),c}function hA(){oi(2)}function Zh(c){return c==null||typeof c!="object"||Object.isFrozen(c)}function qi(c){var h=vA[c];return h||oi(18,c),h}function rg(){return lo}function Jh(c,h){h&&(qi("Patches"),c.u=[],c.s=[],c.v=h)}function kc(c){Kh(c),c.p.forEach(fA),c.p=null}function Kh(c){c===lo&&(lo=c.l)}function sg(c){return lo={p:[],l:lo,h:c,m:!0,_:0}}function fA(c){var h=c[Un];h.i===0||h.i===1?h.j():h.O=!0}function Qh(c,h){h._=h.p.length;var m=h.p[0],x=c!==void 0&&c!==m;return h.h.g||qi("ES5").S(h,c,x),x?(m[Un].P&&(kc(h),oi(4)),Qr(c)&&(c=Hc(h,c),h.l||Vc(h,c)),h.u&&qi("Patches").M(m[Un],c,h.u,h.s)):c=Hc(h,m,[]),kc(h),h.u&&h.v(h.u,h.s),c!==hg?c:void 0}function Hc(c,h,m){if(Zh(h))return h;var x=h[Un];if(!x)return co(h,function(C,z){return ag(c,x,h,C,z,m)},!0),h;if(x.A!==c)return h;if(!x.P)return Vc(c,x.t,!0),x.t;if(!x.I){x.I=!0,x.A._--;var E=x.i===4||x.i===5?x.o=Yh(x.k):x.o;co(x.i===3?new Set(E):E,function(C,z){return ag(c,x,E,C,z,m)}),Vc(c,E,!1),m&&c.u&&qi("Patches").R(x,m,c.u,c.s)}return x.o}function ag(c,h,m,x,E,C){if(Kr(E)){var z=Hc(c,E,C&&h&&h.i!==3&&!Xh(h.D,x)?C.concat(x):void 0);if(ig(m,x,z),!Kr(z))return;c.m=!1}if(Qr(E)&&!Zh(E)){if(!c.h.F&&c._<1)return;Hc(c,E),h&&h.A.l||Vc(c,E)}}function Vc(c,h,m){m===void 0&&(m=!1),c.h.F&&c.m&&$h(h,m)}function ef(c,h){var m=c[Un];return(m?es(m):c)[h]}function og(c,h){if(h in c)for(var m=Object.getPrototypeOf(c);m;){var x=Object.getOwnPropertyDescriptor(m,h);if(x)return x;m=Object.getPrototypeOf(m)}}function tf(c){c.P||(c.P=!0,c.l&&tf(c.l))}function nf(c){c.o||(c.o=Yh(c.t))}function rf(c,h,m){var x=jh(h)?qi("MapSet").N(h,m):qh(h)?qi("MapSet").T(h,m):c.g?function(E,C){var z=Array.isArray(E),G={i:z?1:0,A:C?C.A:rg(),P:!1,I:!1,D:{},l:C,t:E,k:null,o:null,j:null,C:!1},X=G,ne=Gc;z&&(X=[G],ne=Wc);var ge=Proxy.revocable(X,ne),_e=ge.revoke,Pe=ge.proxy;return G.k=Pe,G.j=_e,Pe}(h,m):qi("ES5").J(h,m);return(m?m.A:rg()).p.push(x),x}function dA(c){return Kr(c)||oi(22,c),function h(m){if(!Qr(m))return m;var x,E=m[Un],C=Js(m);if(E){if(!E.P&&(E.i<4||!qi("ES5").K(E)))return E.t;E.I=!0,x=cg(m,C),E.I=!1}else x=cg(m,C);return co(x,function(z,G){E&&lA(E.t,z)===G||ig(x,z,h(G))}),C===3?new Set(x):x}(c)}function cg(c,h){switch(h){case 2:return new Map(c);case 3:return Array.from(c)}return Yh(c)}var lg,lo,sf=typeof Symbol<"u"&&typeof Symbol("x")=="symbol",pA=typeof Map<"u",mA=typeof Set<"u",ug=typeof Proxy<"u"&&Proxy.revocable!==void 0&&typeof Reflect<"u",hg=sf?Symbol.for("immer-nothing"):((lg={})["immer-nothing"]=!0,lg),fg=sf?Symbol.for("immer-draftable"):"__$immer_draftable",Un=sf?Symbol.for("immer-state"):"__$immer_state",gA=""+Object.prototype.constructor,af=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(c){return Object.getOwnPropertyNames(c).concat(Object.getOwnPropertySymbols(c))}:Object.getOwnPropertyNames,_A=Object.getOwnPropertyDescriptors||function(c){var h={};return af(c).forEach(function(m){h[m]=Object.getOwnPropertyDescriptor(c,m)}),h},vA={},Gc={get:function(c,h){if(h===Un)return c;var m=es(c);if(!Xh(m,h))return function(E,C,z){var G,X=og(C,z);return X?"value"in X?X.value:(G=X.get)===null||G===void 0?void 0:G.call(E.k):void 0}(c,m,h);var x=m[h];return c.I||!Qr(x)?x:x===ef(c.t,h)?(nf(c),c.o[h]=rf(c.A.h,x,c)):x},has:function(c,h){return h in es(c)},ownKeys:function(c){return Reflect.ownKeys(es(c))},set:function(c,h,m){var x=og(es(c),h);if(x!=null&&x.set)return x.set.call(c.k,m),!0;if(!c.P){var E=ef(es(c),h),C=E==null?void 0:E[Un];if(C&&C.t===m)return c.o[h]=m,c.D[h]=!1,!0;if(uA(m,E)&&(m!==void 0||Xh(c.t,h)))return!0;nf(c),tf(c)}return c.o[h]===m&&typeof m!="number"&&(m!==void 0||h in c.o)||(c.o[h]=m,c.D[h]=!0,!0)},deleteProperty:function(c,h){return ef(c.t,h)!==void 0||h in c.t?(c.D[h]=!1,nf(c),tf(c)):delete c.D[h],c.o&&delete c.o[h],!0},getOwnPropertyDescriptor:function(c,h){var m=es(c),x=Reflect.getOwnPropertyDescriptor(m,h);return x&&{writable:!0,configurable:c.i!==1||h!=="length",enumerable:x.enumerable,value:m[h]}},defineProperty:function(){oi(11)},getPrototypeOf:function(c){return Object.getPrototypeOf(c.t)},setPrototypeOf:function(){oi(12)}},Wc={};co(Gc,function(c,h){Wc[c]=function(){return arguments[0]=arguments[0][0],h.apply(this,arguments)}}),Wc.deleteProperty=function(c,h){return Gc.deleteProperty.call(this,c[0],h)},Wc.set=function(c,h,m){return Gc.set.call(this,c[0],h,m,c[0])};var yA=function(){function c(m){var x=this;this.g=ug,this.F=!0,this.produce=function(E,C,z){if(typeof E=="function"&&typeof C!="function"){var G=C;C=E;var X=x;return function(We){var ze=this;We===void 0&&(We=G);for(var ot=arguments.length,mt=Array(ot>1?ot-1:0),st=1;st<ot;st++)mt[st-1]=arguments[st];return X.produce(We,function(Tt){var xn;return(xn=C).call.apply(xn,[ze,Tt].concat(mt))})}}var ne;if(typeof C!="function"&&oi(6),z!==void 0&&typeof z!="function"&&oi(7),Qr(E)){var ge=sg(x),_e=rf(x,E,void 0),Pe=!0;try{ne=C(_e),Pe=!1}finally{Pe?kc(ge):Kh(ge)}return typeof Promise<"u"&&ne instanceof Promise?ne.then(function(We){return Jh(ge,z),Qh(We,ge)},function(We){throw kc(ge),We}):(Jh(ge,z),Qh(ne,ge))}if(!E||typeof E!="object")return(ne=C(E))===hg?void 0:(ne===void 0&&(ne=E),x.F&&$h(ne,!0),ne);oi(21,E)},this.produceWithPatches=function(E,C){return typeof E=="function"?function(X){for(var ne=arguments.length,ge=Array(ne>1?ne-1:0),_e=1;_e<ne;_e++)ge[_e-1]=arguments[_e];return x.produceWithPatches(X,function(Pe){return E.apply(void 0,[Pe].concat(ge))})}:[x.produce(E,C,function(X,ne){z=X,G=ne}),z,G];var z,G},typeof(m==null?void 0:m.useProxies)=="boolean"&&this.setUseProxies(m.useProxies),typeof(m==null?void 0:m.autoFreeze)=="boolean"&&this.setAutoFreeze(m.autoFreeze)}var h=c.prototype;return h.createDraft=function(m){Qr(m)||oi(8),Kr(m)&&(m=dA(m));var x=sg(this),E=rf(this,m,void 0);return E[Un].C=!0,Kh(x),E},h.finishDraft=function(m,x){var E=m&&m[Un],C=E.A;return Jh(C,x),Qh(void 0,C)},h.setAutoFreeze=function(m){this.F=m},h.setUseProxies=function(m){m&&!ug&&oi(20),this.g=m},h.applyPatches=function(m,x){var E;for(E=x.length-1;E>=0;E--){var C=x[E];if(C.path.length===0&&C.op==="replace"){m=C.value;break}}var z=qi("Patches").$;return Kr(m)?z(m,x):this.produce(m,function(G){return z(G,x.slice(E+1))})},c}(),Yn=new yA;Yn.produce,Yn.produceWithPatches.bind(Yn),Yn.setAutoFreeze.bind(Yn),Yn.setUseProxies.bind(Yn),Yn.applyPatches.bind(Yn),Yn.createDraft.bind(Yn),Yn.finishDraft.bind(Yn);var xA={currentProjectStateDefinitionVersion:"0.4.0"},of=xA;async function bA(c,h,m){await oA(0),c.transaction(({drafts:x})=>{var E;const C=h.address.projectId;x.ephemeral.coreByProject[C]={lastExportedObject:null,loadingState:{type:"loading"}},x.ahistoric.coreByProject[C]={ahistoricStuff:""};function z(){x.ephemeral.coreByProject[C].loadingState={type:"loaded"},x.historic.coreByProject[C]={sheetsById:{},definitionVersion:of.currentProjectStateDefinitionVersion,revisionHistory:[]}}function G(_e){x.ephemeral.coreByProject[C].loadingState={type:"loaded"},x.historic.coreByProject[C]=_e}function X(){x.ephemeral.coreByProject[C].loadingState={type:"loaded"}}function ne(_e){x.ephemeral.coreByProject[C].loadingState={type:"browserStateIsNotBasedOnDiskState",onDiskState:_e}}const ge=(E=cA(x.historic))==null?void 0:E.coreByProject[h.address.projectId];ge?m&&ge.revisionHistory.indexOf(m.revisionHistory[0])==-1?ne(m):X():m?G(m):z()})}function dg(){}function pg(c){var h,m;const x=(h=c==null?void 0:c.logging)!=null&&h.internal?(m=c.logging.min)!=null?m:256:1/0,E=x<=128,C=x<=512,z=Nm(void 0,{_debug:E?console.debug.bind(console,"_coreLogger(TheatreInternalLogger) debug"):dg,_error:C?console.error.bind(console,"_coreLogger(TheatreInternalLogger) error"):dg});if(c){const{logger:G,logging:X}=c;G&&z.configureLogger(G),X?z.configureLogging(X):z.configureLogging({dev:!1})}return z.getLogger().named("Theatre")}var SA=class{constructor(c,h={},m){this.config=h,this.publicApi=m,M(this,"pointers"),M(this,"_pointerProxies"),M(this,"address"),M(this,"_studioReadyDeferred"),M(this,"_assetStorageReadyDeferred"),M(this,"_readyPromise"),M(this,"_sheetTemplates",new ng.Atom({})),M(this,"sheetTemplatesP",this._sheetTemplates.pointer),M(this,"_studio"),M(this,"assetStorage"),M(this,"type","Theatre_Project"),M(this,"_logger");var x;this._logger=pg({logging:{dev:!0}}).named("Project",c),this._logger.traceDev("creating project"),this.address={projectId:c};const E=new ng.Atom({ahistoric:{ahistoricStuff:""},historic:(x=h.state)!=null?x:{sheetsById:{},definitionVersion:of.currentProjectStateDefinitionVersion,revisionHistory:[]},ephemeral:{loadingState:{type:"loaded"},lastExportedObject:null}});this._assetStorageReadyDeferred=br(),this.assetStorage={getAssetUrl:C=>{var z;return"".concat((z=h.assets)==null?void 0:z.baseUrl,"/").concat(C)},createAsset:()=>{throw new Error("Please wait for Project.ready to use assets.")}},this._pointerProxies={historic:new Wh.PointerProxy(E.pointer.historic),ahistoric:new Wh.PointerProxy(E.pointer.ahistoric),ephemeral:new Wh.PointerProxy(E.pointer.ephemeral)},this.pointers={historic:this._pointerProxies.historic.pointer,ahistoric:this._pointerProxies.ahistoric.pointer,ephemeral:this._pointerProxies.ephemeral.pointer},Z.add(c,this),this._studioReadyDeferred=br(),this._readyPromise=Promise.all([this._studioReadyDeferred.promise,this._assetStorageReadyDeferred.promise]).then(()=>{}),h.state?setTimeout(()=>{this._studio||(this._studioReadyDeferred.resolve(void 0),this._assetStorageReadyDeferred.resolve(void 0),this._logger._trace("ready deferred resolved with no state"))},0):typeof window>"u"?console.error('Argument config.state in Theatre.getProject("'.concat(c,'", config) is empty. ')+"You can safely ignore this message if you're developing a Next.js/Remix project in development mode. But if you are shipping to your end-users, then you need to set config.state, otherwise your project's state will be empty and nothing will animate. Learn more at https://www.theatrejs.com/docs/latest/manual/projects#state"):setTimeout(()=>{if(!this._studio)throw new Error('Argument config.state in Theatre.getProject("'.concat(c,'", config) is empty. This is fine ')+"while you are using @theatre/core along with @theatre/studio. But since @theatre/studio "+'is not loaded, the state of project "'.concat(c,`" will be empty.

`)+`To fix this, you need to add @theatre/studio into the bundle and export the project's state. Learn how to do that at https://www.theatrejs.com/docs/latest/manual/projects#state
`)},1e3)}attachToStudio(c){if(this._studio){if(this._studio!==c)throw new Error("Project ".concat(this.address.projectId," is already attached to studio ").concat(this._studio.address.studioId));console.warn("Project ".concat(this.address.projectId," is already attached to studio ").concat(this._studio.address.studioId));return}this._studio=c,c.initialized.then(async()=>{var h;await bA(c,this,this.config.state),this._pointerProxies.historic.setPointer(c.atomP.historic.coreByProject[this.address.projectId]),this._pointerProxies.ahistoric.setPointer(c.atomP.ahistoric.coreByProject[this.address.projectId]),this._pointerProxies.ephemeral.setPointer(c.atomP.ephemeral.coreByProject[this.address.projectId]),await c.createAssetStorage(this,(h=this.config.assets)==null?void 0:h.baseUrl).then(m=>{this.assetStorage=m,this._assetStorageReadyDeferred.resolve(void 0)}),this._studioReadyDeferred.resolve(void 0)}).catch(h=>{throw console.error(h),h})}get isAttachedToStudio(){return!!this._studio}get ready(){return this._readyPromise}isReady(){return this._studioReadyDeferred.status==="resolved"&&this._assetStorageReadyDeferred.status==="resolved"}getOrCreateSheet(c,h="default"){let m=this._sheetTemplates.get()[c];return m||(m=new sA(this,c),this._sheetTemplates.reduce(x=>v(g({},x),{[c]:m}))),m.getInstance(h)}},MA=class{get type(){return"Theatre_Project_PublicAPI"}constructor(c,h={}){ae(this,new SA(c,h,this))}get ready(){return ie(this).ready}get isReady(){return ie(this).isReady()}get address(){return g({},ie(this).address)}getAssetUrl(c){if(!this.isReady){console.error("Calling `project.getAssetUrl()` before `project.ready` is resolved, will always return `undefined`. Either use `project.ready.then(() => project.getAssetUrl())` or `await project.ready` before calling `project.getAssetUrl()`.");return}return c.id?ie(this).assetStorage.getAssetUrl(c.id):void 0}sheet(c,h="default"){const m=Gh(c);return ie(this).getOrCreateSheet(m,h).publicApi}};T(B());var mg=rn,cf=rn;function gg(c,h={}){const m=Z.get(c);if(m)return m.publicApi;const E=pg().named("Project",c);return h.state?(wA(c,h.state),E._debug("deep validated config.state on disk")):E._debug("no config.state"),new MA(c,h)}var TA=(c,h)=>{if(Array.isArray(h)||h==null||h.definitionVersion!==of.currentProjectStateDefinitionVersion)throw new so("Error validating conf.state in Theatre.getProject(".concat(JSON.stringify(c),", conf). The state seems to be formatted in a way that is unreadable to Theatre.js. Read more at https://www.theatrejs.com/docs/latest/manual/projects#state"))},wA=(c,h)=>{TA(c,h)};function lf(c,h,m){const x=m?ie(m).ticker:qm();if((0,mg.isPointer)(c))return(0,cf.pointerToPrism)(c).onChange(x,h,!0);if((0,cf.isPrism)(c))return c.onChange(x,h,!0);throw new Error("Called onChange(p) where p is neither a pointer nor a prism.")}function _g(c){if((0,mg.isPointer)(c))return(0,cf.pointerToPrism)(c).getValue();throw new Error("Called val(p) where p is not a pointer.")}var EA=class{constructor(){M(this,"_studio")}get type(){return"Theatre_CoreBundle"}get version(){return"0.7.0"}getBitsForStudio(c,h){if(this._studio)throw new Error("@theatre/core is already attached to @theatre/studio");this._studio=c;const m={projectsP:Z.atom.pointer.projects,privateAPI:ie,coreExports:L,getCoreRafDriver:jm};h(m)}};AA();function AA(){if(typeof window>"u")return;const c=window[Bh];if(typeof c<"u")throw typeof c=="object"&&c&&typeof c.version=="string"?new Error(`It seems that the module '@theatre/core' is loaded more than once. This could have two possible causes:
1. You might have two separate versions of Theatre.js in node_modules.
2. Or this might be a bundling misconfiguration, in case you're using a bundler like Webpack/ESBuild/Rollup.

Note that it **is okay** to import '@theatre/core' multiple times. But those imports should point to the same module.`):new Error("The variable window.".concat(Bh," seems to be already set by a module other than @theatre/core."));const h=new EA;window[Bh]=h;const m=window[bE];m&&m!==null&&m.type==="Theatre_StudioBundle"&&m.registerCoreBundle(h)}/*! Bundled license information:

	lodash-es/lodash.js:
	  (**
	   * @license
	   * Lodash (Custom Build) <https://lodash.com/>
	   * Build: `lodash modularize exports="es" -o ./`
	   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
	   * Released under MIT license <https://lodash.com/license>
	   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	   *)
	*/})(ql,ql.exports);var Ay=ql.exports;const q2=j2(Ay),Y2=BA({__proto__:null,default:q2},[Ay]),{getProject:$2,types:WU,onChange:Ep,val:Po}=Y2,Z2=r=>({}),nv=r=>({project:r[0]});function J2(r){return{c:wt,l:wt,m:wt,p:wt,i:wt,o:wt,d:wt}}function K2(r){let e;const t=r[5].default,n=xi(t,r,r[4],nv);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&bi(n,t,i,i[4],e?Mi(t,i[4],s,Z2):Si(i[4]),nv)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function Q2(r){return{c:wt,l:wt,m:wt,p:wt,i:wt,o:wt,d:wt}}function eU(r){let e,t,n={ctx:r,current:null,token:null,hasCatch:!1,pending:Q2,then:K2,catch:J2,blocks:[,,,]};return pv(r[0].ready,n),{c(){e=Bi(),n.block.c()},l(i){e=Bi(),n.block.l(i)},m(i,s){Hn(i,e,s),n.block.m(i,n.anchor=s),n.mount=()=>e.parentNode,n.anchor=e,t=!0},p(i,[s]){r=i,mv(n,r,s)},i(i){t||(nt(n.block),t=!0)},o(i){for(let s=0;s<3;s+=1){const a=n.blocks[s];at(a)}t=!1},d(i){i&&En(e),n.block.d(i),n.token=null,n=null}}}function tU(r,e,t){let{$$slots:n={},$$scope:i}=e,{name:s="default"}=e,{config:a=void 0}=e;const o=ev.get(s)??$2(s,a);ev.set(s,o);let{isReady:l=!1}=e;return(async()=>{await o.ready,t(1,l=!0)})(),Vn("theatre-project",o),r.$$set=f=>{"name"in f&&t(2,s=f.name),"config"in f&&t(3,a=f.config),"isReady"in f&&t(1,l=f.isReady),"$$scope"in f&&t(4,i=f.$$scope)},[o,l,s,a,i,n]}class nU extends Ti{constructor(e){super(),wi(this,e,tU,eU,yi,{name:2,config:3,project:0,isReady:1})}get project(){return this.$$.ctx[0]}}class iU{constructor(e,t={}){yn(this,"key");yn(this,"position");yn(this,"playing");yn(this,"length");yn(this,"options");yn(this,"sequence");this.key=(t==null?void 0:t.key)??"default",this.sequence=e,this.options=t,this.position=new rU(e,()=>this.play()),this.playing=new sU(e,()=>this.play()),this.length=new aU(e),this.config=this.config.bind(this),this.play=this.play.bind(this),this.pause=this.pause.bind(this),this.reset=this.reset.bind(this)}config(e){const t={...this.options,...e};if(Object.keys(t).every(a=>this.options[a]==t[a]))return;this.options=t,e.audio&&this.sequence.attachAudio(e.audio);const i=e.rate||e.range||e.iterationCount||e.direction||e.rafDriver;av(this.playing)&&i&&(this.pause(),this.play())}play(e={}){return this.sequence.play({...this.options,...e})}pause(){return this.sequence.pause()}reset(){this.position.set(0)}}class rU{constructor(e,t){yn(this,"sequence");yn(this,"play");yn(this,"subscribers");yn(this,"unsubscribe");this.sequence=e,this.play=t,this.subscribers=new Set,this.unsubscribe=Ep(this.sequence.pointer.position,n=>{this.subscribers.forEach(i=>i(n))})}subscribe(e){return this.subscribers.add(e),e(this.sequence.position),()=>{this.subscribers.delete(e)}}update(e){this.set(e(this.sequence.position))}set(e){const t=Po(this.sequence.pointer.playing);this.sequence.position=e,t&&this.play()}}class sU{constructor(e,t){yn(this,"sequence");yn(this,"play");yn(this,"subscribers");this.sequence=e,this.play=t,this.subscribers=new Set,Ep(this.sequence.pointer.playing,n=>{this.subscribers.forEach(i=>i(n))})}subscribe(e){return this.subscribers.add(e),e(Po(this.sequence.pointer.playing)),()=>{this.subscribers.delete(e)}}update(e){const t=Po(this.sequence.pointer.playing),n=e(t);t&&!n&&this.sequence.pause(),!t&&n&&this.play()}set(e){const t=Po(this.sequence.pointer.playing),n=e;t&&!n&&this.sequence.pause(),!t&&n&&this.play()}}class aU{constructor(e){yn(this,"sequence");yn(this,"subscribers");yn(this,"unsubscribe");this.sequence=e,this.subscribers=new Set,this.unsubscribe=Ep(this.sequence.pointer.length,t=>{this.subscribers.forEach(n=>n(t))})}subscribe(e){return this.subscribers.add(e),e(Po(this.sequence.pointer.length)),()=>{this.subscribers.delete(e)}}}const oU=r=>({}),iv=r=>({sheet:r[0]});function cU(r){let e;const t=r[6].default,n=xi(t,r,r[5],iv);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&32)&&bi(n,t,i,i[5],e?Mi(t,i[5],s,oU):Si(i[5]),iv)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function lU(r,e,t){let{$$slots:n={},$$scope:i}=e;const s=ni("theatre-project"),a=s.address.projectId;let{name:o="default"}=e,{instance:l=void 0}=e;const u=tv.get(`${a}-${o}-${l}`)??s.sheet(o,l);tv.set(`${a}-${o}-${l}`,u);const f=new iU(u.sequence);return Vn("theatre-sheet",{sheet:u,sequences:{default:f}}),r.$$set=d=>{"name"in d&&t(2,o=d.name),"instance"in d&&t(3,l=d.instance),"$$scope"in d&&t(5,i=d.$$scope)},[u,s,o,l,f,i,n]}class uU extends Ti{constructor(e){super(),wi(this,e,lU,cU,yi,{project:1,name:2,instance:3,sheet:0,sequence:4})}get project(){return this.$$.ctx[1]}get sheet(){return this.$$.ctx[0]}get sequence(){return this.$$.ctx[4]}}function hU(r){let e;const t=r[2].default,n=xi(t,r,r[3],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8)&&bi(n,t,i,i[3],e?Mi(t,i[3],s,null):Si(i[3]),null)},i(i){e||(nt(n,i),e=!0)},o(i){at(n,i),e=!1},d(i){n&&n.d(i)}}}function fU(r){let e,t;return e=new uU({props:{$$slots:{default:[hU]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&8&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function dU(r){let e,t;return e=new nU({props:{config:r[1],$$slots:{default:[fU]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.config=n[1]),i&8&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function pU(r){let e,t;const n=[r[0]];let i={$$slots:{default:[dU]},$$scope:{ctx:r}};for(let s=0;s<n.length;s+=1)i=Xf(i,n[s]);return e=new X2({props:i}),{c(){Jt(e.$$.fragment)},l(s){sn(e.$$.fragment,s)},m(s,a){Kt(e,s,a),t=!0},p(s,[a]){const o=a&1?kA(n,[HA(s[0])]):{};a&10&&(o.$$scope={dirty:a,ctx:s}),e.$set(o)},i(s){t||(nt(e.$$.fragment,s),t=!0)},o(s){at(e.$$.fragment,s),t=!1},d(s){Qt(e,s)}}}function mU(r,e,t){let{$$slots:n={},$$scope:i}=e,{studio:s={}}=e,{config:a=void 0}=e;return r.$$set=o=>{"studio"in o&&t(0,s=o.studio),"config"in o&&t(1,a=o.config),"$$scope"in o&&t(3,i=o.$$scope)},[s,a,n,i]}class gU extends Ti{constructor(e){super(),wi(this,e,mU,pU,yi,{studio:0,config:1})}}new N;new N;new N;new it;new it;new mn;`${tt.logdepthbuf_pars_vertex}${tt.fog_pars_vertex}${tt.logdepthbuf_vertex}${tt.fog_vertex}`;const _U=r=>{const e=Ey(Ba().camera);let t=0,n=0;const i=new ResizeObserver(s=>{for(const a of s)t=a.contentRect.width,n=a.contentRect.height});return za(r.target,s=>(s&&i.observe(s),()=>{s&&i.unobserve(s)})),(s,a)=>{a.pointer.update(o=>(o.set(s.offsetX/t*2-1,-(s.offsetY/n)*2+1),o)),a.raycaster.setFromCamera(a.pointer.current,e.current)}},vU=()=>{const r=ni("threlte-interactivity-context"),e=Mp();return{...r,addInteractiveObject:i=>{if(!r){console.warn("No interactivity context found. Did you forget to implement interactivity()?");return}i.userData._threlte_interactivity_dispatcher=e,!r.interactiveObjects.find(s=>s.uuid===i.uuid)&&r.interactiveObjects.push(i)},removeInteractiveObject:i=>{if(!r){console.warn("No interactivity context found. Did you forget to implement interactivity()?");return}r.interactiveObjects=r.interactiveObjects.filter(s=>s.uuid!==i.uuid),delete i.userData._threlte_interactivity_dispatcher}}},yU=r=>{const e=Yl(),t=ii(!1);return $l(()=>{t.set(!!Object.keys(e.$$.callbacks).filter(n=>r?r.includes(n):!0).length)}),{hasEventHandlers:t}},xU=["click","contextmenu","dblclick","wheel","pointerup","pointerdown","pointerover","pointerout","pointerenter","pointerleave","pointermove","pointermissed"],bU=()=>{U2("interactivity",({ref:r})=>{if(!r.isObject3D)return;const{addInteractiveObject:e,removeInteractiveObject:t}=vU(),n=ii(r),{hasEventHandlers:i}=yU(xU);return za([i,n],([s,a])=>{if(s)return e(a),()=>t(a)}),{onRefChange(s){n.set(s)}}})},Dl=r=>r.userData._threlte_interactivity_dispatcher;function Wf(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}const rv=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],SU=r=>{function e(u){const f=u.offsetX-r.initialClick[0],p=u.offsetY-r.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){for(const f of r.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const p=f.eventObject;r.hovered.delete(Wf(f));const d=Dl(p);if(d){const g={...f,intersections:u};d("pointerout",g),d("pointerleave",g)}}}const n=Ey(r.enabled),i=()=>{const u=new Set,f=[];let p=r.interactiveObjects.flatMap(d=>n.current?r.raycaster.intersectObject(d,!0):[]).sort((d,g)=>d.distance-g.distance).filter(d=>{const g=Wf(d);return u.has(g)?!1:(u.add(g),!0)});r.filter&&(p=r.filter(p,r));for(const d of p){let g=d.object;for(;g;)Dl(g)&&f.push({...d,eventObject:g}),g=g.parent}return f};function s(u,f){for(let p=0;p<f.length;p++){const d=Dl(f[p]);d&&d("pointermissed",u)}}const a=u=>u==="pointerleave"||u==="pointercancel"?()=>{r.pointerOverTarget.set(!1),t([])}:u==="pointerenter"?()=>{r.pointerOverTarget.set(!0)}:f=>{const p=u==="pointermove",d=u==="click"||u==="contextmenu"||u==="dblclick";r.compute(f,r);const g=i(),v=d?e(f):0;u==="pointerdown"&&(r.initialClick=[f.offsetX,f.offsetY],r.initialHits=g.map(y=>y.eventObject)),d&&!g.length&&v<=2&&s(f,r.interactiveObjects),p&&t(g);let b=!1;e:for(const y of g){const _={stopped:b,...y,intersections:g,stopPropagation(){if(b=!0,_.stopped=!0,r.hovered.size&&Array.from(r.hovered.values()).find(S=>S.eventObject===y.eventObject)){const S=g.slice(0,g.indexOf(y));t([...S,y])}},camera:r.raycaster.camera,delta:v,nativeEvent:f,pointer:r.pointer.current,ray:r.raycaster.ray},T=Dl(y.eventObject);if(!T)return;if(p){if(T.hasEventListener("pointerover")||T.hasEventListener("pointerenter")||T.hasEventListener("pointerout")||T.hasEventListener("pointerleave")){const S=Wf(_),M=r.hovered.get(S);M?M.stopped&&_.stopPropagation():(r.hovered.set(S,_),T("pointerover",_),T("pointerenter",_))}T("pointermove",_)}else T.hasEventListener(u)?(!d||r.initialHits.includes(y.eventObject))&&(s(f,r.interactiveObjects.filter(M=>!r.initialHits.includes(M))),T(u,_)):d&&r.initialHits.includes(y.eventObject)&&s(f,r.interactiveObjects.filter(M=>!r.initialHits.includes(M)));if(b)break e}},o=u=>{rv.forEach(([f])=>{u.removeEventListener(f,a(f))})},l=u=>{rv.forEach(([f,p])=>{u.addEventListener(f,a(f),{passive:p})})};za(r.target,u=>(u&&l(u),()=>{u&&o(u)}))},MU=r=>{const e={enabled:Bn((r==null?void 0:r.enabled)??!0),pointer:Bn(new fe),pointerOverTarget:Bn(!1),lastEvent:void 0,raycaster:new xy,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:Bn((r==null?void 0:r.target)??Ba().renderer.domElement),compute:()=>{},filter:r==null?void 0:r.filter};return e.compute=(r==null?void 0:r.compute)??_U(e),Vn("threlte-interactivity-context",e),bU(),SU(e),e};function sv(r){return Object.prototype.toString.call(r)==="[object Date]"}function Dd(r,e,t,n){if(typeof t=="number"||sv(t)){const i=n-t,s=(t-e)/(r.dt||1/60),a=r.opts.stiffness*i,o=r.opts.damping*s,l=(a-o)*r.inv_mass,u=(s+l)*r.dt;return Math.abs(u)<r.opts.precision&&Math.abs(i)<r.opts.precision?n:(r.settled=!1,sv(t)?new Date(t.getTime()+u):t+u)}else{if(Array.isArray(t))return t.map((i,s)=>Dd(r,e[s],t[s],n[s]));if(typeof t=="object"){const i={};for(const s in t)i[s]=Dd(r,e[s],t[s],n[s]);return i}else throw new Error(`Cannot spring ${typeof t} values`)}}function TU(r,e={}){const t=ii(r),{stiffness:n=.15,damping:i=.8,precision:s=.01}=e;let a,o,l,u=r,f=r,p=1,d=0,g=!1;function v(y,_={}){f=y;const T=l={};return r==null||_.hard||b.stiffness>=1&&b.damping>=1?(g=!0,a=bg(),u=y,t.set(r=f),Promise.resolve()):(_.soft&&(d=1/((_.soft===!0?.5:+_.soft)*60),p=0),o||(a=bg(),g=!1,o=zA(S=>{if(g)return g=!1,o=null,!1;p=Math.min(p+d,1);const M={inv_mass:p,opts:b,settled:!0,dt:(S-a)*60/1e3},R=Dd(M,u,r,f);return a=S,u=r,t.set(r=R),M.settled&&(o=null),!M.settled})),new Promise(S=>{o.promise.then(()=>{T===l&&S()})}))}const b={set:v,update:(y,_)=>v(y(f,r),_),subscribe:t.subscribe,stiffness:n,damping:i,precision:s};return b}function wU(r){let e,t,n,i;return e=new rr.BoxGeometry({props:{args:[1,2,1]}}),n=new rr.MeshStandardMaterial({props:{color:"hotpink"}}),{c(){Jt(e.$$.fragment),t=vs(),Jt(n.$$.fragment)},l(s){sn(e.$$.fragment,s),t=ys(s),sn(n.$$.fragment,s)},m(s,a){Kt(e,s,a),Hn(s,t,a),Kt(n,s,a),i=!0},p:wt,i(s){i||(nt(e.$$.fragment,s),nt(n.$$.fragment,s),i=!0)},o(s){at(e.$$.fragment,s),at(n.$$.fragment,s),i=!1},d(s){s&&En(t),Qt(e,s),Qt(n,s)}}}function EU(r){let e,t,n,i;return e=new rr.CircleGeometry({props:{args:[4,40]}}),n=new rr.MeshStandardMaterial({props:{color:"white"}}),{c(){Jt(e.$$.fragment),t=vs(),Jt(n.$$.fragment)},l(s){sn(e.$$.fragment,s),t=ys(s),sn(n.$$.fragment,s)},m(s,a){Kt(e,s,a),Hn(s,t,a),Kt(n,s,a),i=!0},p:wt,i(s){i||(nt(e.$$.fragment,s),nt(n.$$.fragment,s),i=!0)},o(s){at(e.$$.fragment,s),at(n.$$.fragment,s),i=!1},d(s){s&&En(t),Qt(e,s),Qt(n,s)}}}function AU(r){let e,t,n,i,s,a,o,l,u,f;return e=new rr.PerspectiveCamera({props:{makeDefault:!0,position:[10,10,10]}}),e.$on("create",PU),n=new rr.DirectionalLight({props:{position:[0,10,10]}}),s=new rr.AmbientLight({props:{intensity:.5}}),o=new rr.Mesh({props:{"rotation.y":r[0],"position.y":1,scale:r[1],castShadow:!0,$$slots:{default:[wU]},$$scope:{ctx:r}}}),o.$on("pointerenter",r[3]),o.$on("pointerleave",r[4]),u=new rr.Mesh({props:{"rotation.x":-Math.PI/2,receiveShadow:!0,$$slots:{default:[EU]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment),t=vs(),Jt(n.$$.fragment),i=vs(),Jt(s.$$.fragment),a=vs(),Jt(o.$$.fragment),l=vs(),Jt(u.$$.fragment)},l(p){sn(e.$$.fragment,p),t=ys(p),sn(n.$$.fragment,p),i=ys(p),sn(s.$$.fragment,p),a=ys(p),sn(o.$$.fragment,p),l=ys(p),sn(u.$$.fragment,p)},m(p,d){Kt(e,p,d),Hn(p,t,d),Kt(n,p,d),Hn(p,i,d),Kt(s,p,d),Hn(p,a,d),Kt(o,p,d),Hn(p,l,d),Kt(u,p,d),f=!0},p(p,[d]){const g={};d&1&&(g["rotation.y"]=p[0]),d&2&&(g.scale=p[1]),d&32&&(g.$$scope={dirty:d,ctx:p}),o.$set(g);const v={};d&32&&(v.$$scope={dirty:d,ctx:p}),u.$set(v)},i(p){f||(nt(e.$$.fragment,p),nt(n.$$.fragment,p),nt(s.$$.fragment,p),nt(o.$$.fragment,p),nt(u.$$.fragment,p),f=!0)},o(p){at(e.$$.fragment,p),at(n.$$.fragment,p),at(s.$$.fragment,p),at(o.$$.fragment,p),at(u.$$.fragment,p),f=!1},d(p){p&&(En(t),En(i),En(a),En(l)),Qt(e,p),Qt(n,p),Qt(s,p),Qt(o,p),Qt(u,p)}}}const PU=({ref:r})=>{r.lookAt(0,1,0)};function CU(r,e,t){let n;MU();const i=TU(1);Co(r,i,l=>t(1,n=l));let s=0;return N2((l,u)=>{t(0,s+=u)}),[s,n,i,()=>i.set(1.5),()=>i.set(1)]}class RU extends Ti{constructor(e){super(),wi(this,e,CU,AU,yi,{})}}function IU(r){let e,t;return e=new RU({}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function LU(r){let e,t;return e=new gU({props:{$$slots:{default:[IU]},$$scope:{ctx:r}}}),{c(){Jt(e.$$.fragment)},l(n){sn(e.$$.fragment,n)},m(n,i){Kt(e,n,i),t=!0},p(n,i){const s={};i&1&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(nt(e.$$.fragment,n),t=!0)},o(n){at(e.$$.fragment,n),t=!1},d(n){Qt(e,n)}}}function DU(r){let e,t,n;return t=new I2({props:{$$slots:{default:[LU]},$$scope:{ctx:r}}}),{c(){e=ov("figure"),Jt(t.$$.fragment)},l(i){e=cv(i,"FIGURE",{});var s=lv(e);sn(t.$$.fragment,s),s.forEach(En)},m(i,s){Hn(i,e,s),Kt(t,e,null),n=!0},p(i,[s]){const a={};s&1&&(a.$$scope={dirty:s,ctx:i}),t.$set(a)},i(i){n||(nt(t.$$.fragment,i),n=!0)},o(i){at(t.$$.fragment,i),n=!1},d(i){i&&En(e),Qt(t)}}}class XU extends Ti{constructor(e){super(),wi(this,e,null,DU,yi,{})}}export{XU as P,zU as _,Di as c,rn as d,j2 as g,GU as s,za as w};
